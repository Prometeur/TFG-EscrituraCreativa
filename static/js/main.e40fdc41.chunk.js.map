{"version":3,"sources":["axios.js","services/authenticity/auth-header.js","services/authenticity/auth-service.js","components/pages/login/Login.js","components/pages/login/register.js","components/pages/login/profile.js","services/student/student-service.js","components/pages/login/EditProfile.js","components/pages/student/Messenger.js","components/pages/student/Message.js","services/admin/adminService.js","components/pages/user/GroupList.js","services/teacher/teacherService.js","components/pages/user/GroupInfo.js","components/pages/user/MyGroups.js","components/pages/user/GroupStudents.js","components/pages/user/Group.js","components/pages/teacher/CreateGroup.js","components/sidebar/Sidebar.js","components/dates/dates.js","components/pages/teacher/CreateChallenge.js","components/pages/teacher/EditChallenge.js","components/pages/teacher/ViewTeamInfo.js","components/pages/teacher/ViewTeamScripts.js","components/pages/teacher/ViewTeam.js","components/pages/user/StudentLits.js","components/pages/user/ApplicantList.js","links/links-Teacher.js","components/pages/user/ProfileInfo.js","components/pages/user/ProfileScripts.js","components/pages/user/TeacherGroups.js","components/pages/user/Profile.js","components/pages/teacher/EditWriting.js","components/pages/teacher/Challenges.js","components/pages/teacher/WritingsStudent.js","components/pages/teacher/TabsWriting.js","components/pages/teacher/Writings.js","components/pages/teacher/GroupTeams.js","components/pages/teacher/GroupTeacher.js","components/pages/teacher/Collections.js","components/pages/teacher/ViewCollection.js","components/pages/teacher/ViewChallengeFromCollection.js","routes/routesTeacher.js","components/pages/teacher/TeacherBoard.js","components/pages/student/Tabs.js","components/pages/student/WritingsStudent.js","components/pages/student/WritingsTeam.js","components/pages/student/WritingTabs.js","components/pages/student/TeamStudent.js","components/pages/student/TeamsGroup.js","components/pages/student/TeamTabs.js","components/pages/student/ChallengesStudent.js","components/pages/student/ChallengesTeam.js","components/pages/student/ChallengeTabs.js","components/pages/student/GroupStudent.js","components/pages/student/Teams.js","components/pages/student/CreateWriting.js","components/pages/student/EditWriting.js","components/pages/student/ViewWriting.js","links/links-Student.js","utils/Socket.js","components/pages/student/Chat.js","components/pages/student/EditWritingTeam.js","components/pages/student/VersionsfromWriting.js","components/pages/student/EditVersionfromWriting.js","components/pages/student/VisualizeCollections.js","components/pages/student/VisualizeSingleCollection.js","components/pages/student/VisualizeChallengeFromCollection.js","routes/routesStudent.js","components/pages/student/StudentBoard.js","components/pages/user/UserList.js","links/links-Admin.js","routes/routesAdmin.js","components/pages/admin/AdminBoard.js","components/pages/user/Inicio.js","components/pages/errors/404.js","components/pages/errors/500.js","App.js","index.js"],"names":["axios","create","baseURL","headers","authHeader","user","JSON","parse","localStorage","getItem","accessToken","username","password","post","then","response","data","setItem","stringify","removeItem","surname","email","role","catch","error","console","log","message","window","location","href","id","foto","idUser","file","type","form","FormData","append","params","required","value","Alert","variant","bsPrefix","Login","props","handleLogin","bind","onChangeUsername","onChangePassword","onModal","state","loading","AuthService","getCurrentUser","this","history","push","reload","e","setState","target","modal","preventDefault","validateAll","checkBtn","context","_errors","length","login","className","onSubmit","ref","c","name","placeholder","onChange","validations","text","style","display","src","Modal","show","onHide","Header","Title","Body","Footer","Button","onClick","Component","isEmail","vusername","vsurname","vpassword","Register","onChangeRole","handleRegister","onChangeSurname","onChangeEmail","successful","register","resMessage","toString","FormControl","component","FormLabel","RadioGroup","aria-label","FormControlLabel","control","Radio","label","htmlFor","Profile","redirect","userReady","currentUser","rol","to","Figure","Image","alt","ruta","size","Card","activo","idStudent","get","idGroup","idChallenge","idWriting","idWriter","idTeam","title","escrito","idVersion","imgCollection","Object","keys","key","idFolder","idMultimedia","path","idCreator","teamName","idSender","idReceiver","idMessage","idIssuer","idCreatorTeam","idEstudiante","filtroBusqueda","idCollection","vconfirmpassword","onFileChange2","files","includes","reader","FileReader","readAsDataURL","onload","updateUser","result","onChangeConfirmPassword","onTeamModal","onDeleteModal","onUpdateModal","saveModal","deleteModal","teamModal","updateModal","StudentTeams","confirmPassword","photo","res","split","logout","aux","editProfile","updatePhoto","alert","StudentService","getTeams","disableProfile","media1","undefined","centered","map","team","index","nombreEquipo","deleteUser","Messenger","deleteMessage","closeModalDeleteMessage","contador","arreglo","dataMessages","registro","splice","showMessages","askDeleteMessage","modalDeleteMessage","getMessages","AuthUser","Table","striped","bordered","hover","responsive","correo","nombreGrupo","mensaje","moment","fecha","format","Message","askAcceptRequest","tipo","senderHasTeam","senderHasTeamAsABoss","showModalAnswerJoinTeam","showModalSenderhasTeam","editMessage","acceptRequest","idMember","dataMessage","idGrupo","idEmisor","idReceptor","idCreador","idBossTeam","joinTeam","showModalAcceptJoinTeam","refuseRequest","showModalRefuseJoinTeam","modalAcceptJoinTeam","setTimeout","modalAnswerJoinTeam","modalSenderHasTeam","modalRefuseJoinTeam","showButtons","getMessage","match","getTeam","getTeamStudentGroup","class","rows","cols","readOnly","resize","searchName","searchType","clave","newName","grupo","GroupList","peticionGet","adminService","getAllGroups","filterData","handleChangeSearch","a","auxArray","filteredData","i","RegExp","searchKey","test","nombre","dataUser","currentUserId","currentUserRole","cartel","tabla","group","idTeacher","searchStudent","idApplicant","description","category","qualification","endDate","score","commentary","finish","nombreColeccion","idProfesor","idColeccion","idDesafio","GroupInfo","peticionGetTeacher","AdminService","getProfile","idprofesor","teacher","handleChangeRename","rename","renameGroup","deactivateGroup","getGroupData","handler","campoCambiarNombre","botonCambiarNombre","disabled","botonDesactivar","fotoSource","imagenProfe","textoProfe","apellidos","width","borderRadius","GroupStudents","handleChangeSearchType","showListStudents","getStudentsOfGroup","student","margin","Group","cambiaVentana","opcion","ventana","tabs","secondTab","CreateGroup","handleChangeName","createGroup","onModalCreateGroup","teacherService","groupName","modalCreateGroup","checkCreateGroup","Sidebar","links","url","link","icon","Dates","handleDateChange","param","utils","DateFnsUtils","Grid","container","justify","disableToolbar","KeyboardButtonProps","CreateChallenge","createChallenge","TeacherService","idCategory","typeQualification","date","sendMultimediaChallenge","handleChange","handleErrors","formErrors","onEditorStateChange","editorState","changeView","dateActual","Date","qualificationSelection","event","handleSelectionChange","handleSelectionCategory","disabledButton","onFileChange","EditorState","createEmpty","categories","getCategories","stateModal","wrapperClassName","editorClassName","toolbarClassName","editor","getCurrentContent","hasText","draftToHtml","convertToRaw","elemento","multiple","aria-labelledby","EditChallenge","editChallenge","challenge","deleteFile","mediaChallenge","onModalDeleteFile","dataMediaChallenge","deleteMultimedia","onContentStateChange","contentState","showTitle","editorChange","askDeleteFile","nameDeleteFileMedia","deleteFileMedia","modalDeleteFile","onModalSave","getChallenge","stateFromHTML","descripcion","createWithContent","titulo","colaborativo","tipoCalificacion","idCategoria","fechaFin","getMultimediaChallenge","open","ViewTeamInfo","memberData","peticionGetMembers","getMembersTeam","contenido","nombreEstudiante","apellidoEstudiante","GroupTeacher","getScriptsByTeam","script","padding","clclassName","bg","Text","ViewTeam","SearchStudentRes","changeViewStudentProfile","finalArray","searchRole","acceptGroupRequest","handleChangeSearchRole","showListApplicants","dataGroups","showApplicantsGroups","searchApplicant","showGroupRequest","header","headerGroups","tablaGroups","nombregrupo","marginLeft","searchtools","linksTeacher","ProfileInfo","filterGroupData","finalGroups","teacherGroupData","unico","j","studentGroupData","finalGroupData","filterGroupKickData","finalGroupKickData","handleChangeGroupSelect","handleChangeGroupKickSelect","handleChangeCurrentUserId","handleChangeCurrentUserRole","peticionGetAllGroups","peticionGetGruposTeacher","inviteToGroup","groupSelect","kickFromGroup","groupKickSelect","deactivateUser","getGroups","peticionGetGruposStudent","getGroupsStudent","acceptApplicantStudent","imagenUser","invitaGrupo","selected","echaGrupo","botonEliminar","confirm","acceptApplicant","getScriptsByStudent","idEscritor","getGroupsOfTeacher","EditWriting","editWriting","finishWriting","writing","showModalDeleteFile","closeModalDeleteFile","onChangeWritingName","onChangeScore","onChangeCommentary","onChangeFinishWriting","disabledComponent","dataTeamStudent","dataMediaWriting","idEquipo","getMultimediaWriting","getWriting","texto","puntuacion","comentario","finalizado","dangerouslySetInnerHTML","__html","textAlign","hidden","Challenges","deleteChallenge","closeModalDeleteChallenge","showCollaborative","askDeleteChallenge","modalDeleteChallenge","getChallenges","filter","item","WritingsStudent","changeState","dataWritings","showTableStudent","showTableTeam","getWritingsStudent","getWritingsTeam","pP","pS","sS","nombreDesafio","nombreEscrito","apellidosEstudiante","idEscrito","Writings","useState","dataChallenges","setDataChallenges","showWritings","setShowWritings","setIdChallenge","useEffect","GroupTeams","showListTeams","getTeamsOfGroup","CustomToggle","React","forwardRef","children","Icon","CustomMenu","labeledBy","setValue","autoFocus","Children","toArray","child","toLowerCase","startsWith","toUpperCase","itemSelection","showChallenges","showTeams","showStudents","nameGroupSelect","onAlert","dataGroup","itemSelect","onRenameGroupModal","showListGroups","rel","Dropdown","DropdownToggle","as","DropdownMenu","row","DropdownItem","eventKey","handleSelect","color","Collections","dataCollection","dataCollectionFiltered","crearColeccion","createCollection","idGroupSelect","replace","deleteCollection","onModalDeleteCollection","idColeccionBorrado","handleCreateCollection","onCreateCollectionModal","showListCollections","onModalDelete","getCollections","collection","ViewCollection","addChallengeToCollection","onModalDeleteChallenge","deleteChallengeFromCollection","idBorrado","handleChangeChallengeSelect","selectedChallenge","nameCollection","nameGroup","challengesNotInCollection","idChallengeSelect","hayDesafios","getCollection","getChallengesNotInCollection","getChallengesFromCollection","ViewChallengeFromCollection","nameChallenge","hayEscritos","Routes","useRouteMatch","LinksTeacher","exact","CrearGrupo","Grupo","Team","StudentList","ApplicantList","TeacherBoard","Tabs","activeTab","find","tabData","currentTab","newTabs","forEach","tab","handleClick","tabToShow","renderTabs","content","showWritingFinalized","showChallengeFinalized","dateFin","getTime","challengeFinalized","getWritings","WritingsTeam","dataWritingTeam","getWritingsCollaborative","ize","WritingTabs","TeamStudent","createTeam","modalCreateTeam","showCreateTeam","showModalSuccessCreateTeam","addStudentTeam","dataMembersTeam","dataTeamStudentGroup","idLider","nameLider","showTeamStudent","showLiderStudent","editTeam","leaveStudentTeam","modalDeleteTeam","modalLeaveLider","deleteTeam","askInvitation","idGuest","searchMessageByReceiver","searchMessageByIssuer","invite","showModalErrorReceiveInvitation","showModalErrorInvitation","sendMessage","showModalSuccesfulInvitation","leaveTeam","modalLeaveTeam","kickStudentTeam","modalKickStudent","idKicked","selectLider","selectGuest","selectKicked","onChangeTeamName","disabledButtonInvite","dataStudentWithoutTeam","disabledButtonDeleteTeam","disabledButtonKickMembersTeam","askLeaveTeam","showModalLeaveLider","showModalLeaveTeam","askDeleteTeam","showModalDeleteTeam","showModalCreateTeam","showModalKickStudent","modalErrorInvitation","modalErrorReceiveInvitation","modalSuccesfulInvitation","modalSuccessCreateTeam","onModalCreateTeam","cdm","responseGetMembersTeam","member1","member","getStudentWithoutTeam","responseGetStudentWithoutTeam","u","checkCreateTeam","TeamsGroup","askSendRequest","studentService","sendRequest","showModalErrorReceiveRequest","showModalErrorSendRequest","equipo","showModalSuccesfulSendJoinTeam","disabledButtonJoin","teamStudent","modalSuccesfulSendJoinTeam","modalErrorSendRequest","modalErrorReceiveRequest","dataTeamsGroup","getTeamsGroup","getTeamStudent","TeamTabs","ChallengesStudent","dataWritingStudent","getChallengesIndividual","writingExist","nombreCategoria","ChallengesTeam","disabledButtonEdit","n","disabledButtonCreate","existsTeam","showNameTeam","dataTeams","responseTeams","responseChallenges","responseWritings","respuesta","existsWriting","ChallengeTabs","GroupStudent","applyGroup","onModalApply","sendGroupRequest","groupSelect2","modalApply","dataRemainingGroup","nameGroupSelect2","getRemainingGroups","nameGroupSelectNR","handleSelect2","Teams","dataAux","CreateWriting","createWriting","onModalCreateWriting","getWritingWriter","sendMultimedia","insertVersionfromWriting","maxIdWriting","showTypeChallenge","modalCreateWriting","getHighestidWriting","onModalEditWriting","maxIdVersion","modalEditWriting","infoWriting","getHighestidVersionfromWriting","maxId","escritosNoCombinados","textoEscritoCombinado","modalCombinarEscrito","combinarEscrito","idWritingSelect","onModalCombinarEscrito","ViewWriting","height","overflow","behavior","justifyContent","linksStudent","socket","io","Chat","pruebaChange","setMensaje","mensajes","setMensajes","emit","on","off","useRef","EditWritingTeam","editWritingTeam","VersionsfromWriting","dataTeam","challenge2","getVersionsfromWriting","getVersionsfromWritingTeam","writingTeam","EditVersionfromWriting","insertVersion","onModalInsertVersion","modalInsertVersion","VisualizeCollections","VisualizeSingleCollection","VisualizeChallengeFromCollection","getWritingsStudentCollection","getWritingsTeamCollection","LinksStudent","StudentBoard","peticionPost","getUsers","changeViewUserProfile","linksAdmin","LinksAdmin","UserList","Grupos","AdminBoard","Inicio","showStudent","showTeacher","showAdmin","pathname","NoMatch","InternalError","App","logOut","Navbar","collapseOnSelect","expand","Brand","Toggle","aria-controls","Collapse","Nav","Link","EditProfile","InternalEror","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e40fdc41.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nexport default axios.create({\r\n  baseURL: \"http://localhost:3001/\",\r\n  headers: {\r\n    \"Content-type\": \"application/json\"\r\n  }\r\n});","export default function authHeader() {\r\n\r\n    const user = JSON.parse(localStorage.getItem(\"user\"));\r\n  \r\n    if (user && user.accessToken) {\r\n      // For Spring Boot back-end\r\n      // return { Authorization: \"Bearer \" + user.accessToken };\r\n  \r\n      // for Node.js Express back-end\r\n      return { \"x-access-token\": user.accessToken };\r\n    } else {\r\n      return {};\r\n    }\r\n}\r\n  \r\n\r\n","import axios from \"../../axios\";\r\nimport authHeader from '../authenticity/auth-header';\r\n\r\nclass AuthService {\r\n \r\n    login(username, password) {\r\n\r\n        return axios.post(\"/auth/signin\", { username: username, password: password }, { \r\n           headers: {\r\n               'Content-Type': 'application/x-www-form-urlencoded'\r\n            } \r\n        })\r\n        .then(response =>{\r\n\r\n            if (response.data.accessToken) \r\n            {\r\n                // Obtenemos los datos desde el servidor y almacenamos los datos del usuario\r\n                localStorage.setItem(\"user\", JSON.stringify(response.data));\r\n            }\r\n        \r\n            return response.data;\r\n      \r\n         })\r\n        //  .catch(error => {\r\n        //     console.log(error.message);\r\n        //    // window.location.href = '/500';\r\n        // });\r\n    }\r\n\r\n    logout() {\r\n\r\n        localStorage.removeItem(\"user\");\r\n    }\r\n\r\n    register(username, surname, email, password, role) {\r\n       \r\n        return axios.post(\"/auth/signup\", {\r\n            username: username,\r\n            surname: surname,\r\n            email: email,\r\n            password: password,\r\n            role: role\r\n        },{ headers:\r\n                {\r\n                    'Content-Type': 'application/x-www-form-urlencoded'\r\n                }\r\n        } ).catch(error => {\r\n            console.log(error.message);\r\n            window.location.href = '/500';\r\n        });\r\n    }\r\n\r\n    editProfile(id,username,surname,email,password,foto) {\r\n\r\n        return axios.post(\"auth/editProfile\",\r\n            {\r\n                id:id,\r\n                username:username,\r\n                surname:surname,\r\n                email:email,\r\n                password:password,\r\n                foto:foto\r\n            },\r\n            { headers:\r\n                {\r\n                    'Content-Type': 'application/x-www-form-urlencoded'\r\n                }\r\n            }).catch(error => {\r\n                console.log(error.message);\r\n                window.location.href = '/500';\r\n            });\r\n    }\r\n\r\n     //Actualiza la foto\r\n     updatePhoto(idUser,file,type) {\r\n\r\n        const form = new FormData();\r\n        form.append(\"profilePhoto\", file);\r\n        form.append(\"idUser\", idUser);\r\n        return axios.post(\"auth/updatePhoto\", form, { params:{ id:idUser, file:file,type:type}},\r\n            // { headers: {'Content-Type': 'application/x-www-form-urlencoded'}});\r\n            {headers: { \"Authorization\": `Bearer ${authHeader()}` }\r\n        }).then(response => {\r\n            return response.data;\r\n        }).catch(error => {\r\n            console.log(error.message);\r\n        })\r\n    }\r\n\r\n    disableProfile(idUser) {\r\n\r\n        return axios.post(\"auth/disableProfile\",\r\n            {idUser:idUser},\r\n            { headers:\r\n                {\r\n                    'Content-Type': 'application/x-www-form-urlencoded'\r\n                }\r\n             }).catch(error => {\r\n                console.log(error.message);\r\n                window.location.href = '/500';\r\n            });\r\n    }\r\n\r\n    getCurrentUser() {\r\n\r\n        return JSON.parse(localStorage.getItem('user'));\r\n    }\r\n}\r\n\r\nexport default new AuthService();","/**\r\n*  Name_file :Login.js\r\n*  Description: Pagina de inicio de sesion, contiene la vista del Login\r\n*/\r\n\r\nimport React, { Component } from 'react';\r\nimport { Redirect, Link }from \"react-router-dom\";\r\nimport AuthService  from \"../../../services/authenticity/auth-service\";\r\nimport Form from \"react-validation/build/form\";\r\nimport Input from \"react-validation/build/input\";\r\nimport CheckButton from \"react-validation/build/button\";\r\n\r\n/**Componente externos de estilo**/\r\nimport Alert from \"react-bootstrap/Alert\";\r\nimport Button from 'react-bootstrap/Button';\r\nimport Modal from 'react-bootstrap/Modal';\r\n\r\n/**Estilo CSS */\r\nimport '../../../styles/styleGeneral.css';\r\nimport '../../../styles/styleButton.css';\r\nimport '../../../styles/styleCard.css';\r\n\r\n/** Variable alerta de validacion **/\r\nconst required = value => {\r\n    if (!value) {\r\n      return (\r\n          <Alert variant=\"danger\" bsPrefix=\"alert-login\">\r\n              ¡Todos los campos son obligatorios!\r\n          </Alert>\r\n\r\n      );\r\n    }\r\n  };\r\n\r\n\r\nclass Login extends Component {\r\n    \r\n    constructor(props) {\r\n        super(props);\r\n        this.handleLogin = this.handleLogin.bind(this);\r\n        this.onChangeUsername = this.onChangeUsername.bind(this);\r\n        this.onChangePassword = this.onChangePassword.bind(this);\r\n        this.onModal = this.onModal.bind(this);\r\n    \r\n        this.state = {\r\n          username: \"\",\r\n          password: \"\",\r\n          loading: false,\r\n          message: \"\",\r\n          error: false,\r\n          onModal: false\r\n        };\r\n    }\r\n\r\n    componentDidMount(){\r\n\r\n       if(AuthService.getCurrentUser()){\r\n         this.props.history.push(\"/profile\");\r\n         window.location.reload();\r\n       }\r\n    }\r\n\r\n    onChangeUsername(e) {\r\n        this.setState({\r\n          username: e.target.value\r\n        });\r\n    }\r\n    \r\n    onChangePassword(e) {\r\n        this.setState({\r\n          password: e.target.value\r\n        });\r\n    }\r\n    \r\n    onModal(modal) {\r\n        this.setState({\r\n            onModal:modal\r\n        });\r\n    }\r\n\r\n   handleLogin(e) {\r\n    e.preventDefault();\r\n\r\n    this.setState({\r\n      message: \"\",\r\n      loading: true,\r\n    });\r\n\r\n    this.form.validateAll();\r\n\r\n\r\n    if (this.checkBtn.context._errors.length === 0) {\r\n        AuthService.login(this.state.username, this.state.password)\r\n        .then( ()=> {\r\n             window.location.href=\"/profile\";\r\n          })\r\n        .catch(e => {\r\n          console.log(e);\r\n            this.setState({\r\n                error:true,\r\n            });\r\n            this.onModal(this.state.error);\r\n        });\r\n      } \r\n      else \r\n      {\r\n        this.setState({\r\n          loading: false,\r\n        });\r\n        console.log(\"error\");\r\n      }\r\n    }\r\n\r\n    \r\n  render() {\r\n        console.log(this.state.error);\r\n      return (\r\n          <div className=\"container\">\r\n                  <Form  \r\n                    onSubmit={this.handleLogin}\r\n                    ref= {c => {\r\n                    this.form = c;\r\n                    }}\r\n                  >\r\n                  <div className=\"form-group-login\">\r\n                          <h4>Iniciar sesión</h4>\r\n                          <div className=\"section-column\">\r\n                            <Input\r\n                                type=\"text\"\r\n                                name=\"username\"\r\n                                className=\"form-control\"\r\n                                placeholder=\" Usuario\"\r\n                                value={this.state.username}\r\n                                onChange={this.onChangeUsername}\r\n                                validations={[required]}\r\n\r\n                            />\r\n                          </div>\r\n                          <div className=\"section-column\">\r\n                            <Input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                name=\"password\"\r\n                                placeholder=\" Contraseña\"\r\n                                value={this.state.password}\r\n                                onChange={this.onChangePassword}\r\n                                validations={[required]}\r\n                            />\r\n                          </div>\r\n                          <div className=\"section-column\">\r\n                            <button className=\"button button5\" > Login </button>\r\n                          </div>\r\n                           <p className=\"p-login\">\r\n                               Al crear la cuenta, aceptas nuestros términos y condiciones.\r\n                               Por favor, lee nuestra política de privacidad y nuestra política de cookies.\r\n                           </p>\r\n                        <CheckButton\r\n                          text='Log In'\r\n                          style={{ display: \"none\" }}\r\n                          ref={c => {\r\n                            this.checkBtn = c}}\r\n                        />\r\n                       </div>\r\n                  </Form>\r\n              <img className=\"img-login\" src=\"literaturatesis.png\" ></img>\r\n              <Modal\r\n                  show={this.state.onModal}\r\n                  onHide={this.state.onModal}\r\n              >\r\n                  <Modal.Header>\r\n                      <Modal.Title>Ups...</Modal.Title>\r\n                  </Modal.Header>\r\n                  <Modal.Body>\r\n                      Tu correo o contraseña no son correctos.\r\n                  </Modal.Body>\r\n                  <Modal.Footer>\r\n                      <Button variant=\"secondary\" onClick={()=>this.onModal(false)}>Atras</Button>\r\n                  </Modal.Footer>\r\n              </Modal>\r\n          </div>\r\n      );\r\n  }\r\n}\r\n\r\nexport default Login;\r\n","import React, { Component } from \"react\";\r\nimport Form from \"react-validation/build/form\";\r\nimport Input from \"react-validation/build/input\";\r\nimport CheckButton from \"react-validation/build/button\";\r\nimport { isEmail } from \"validator\";\r\nimport '../../../styles/styleGeneral.css';\r\nimport '../../../styles/styleButton.css';\r\nimport '../../../styles/styleCard.css';\r\nimport Card from \"react-bootstrap/Card\";\r\nimport AuthService  from \"../../../services/authenticity/auth-service\";\r\nimport Alert from 'react-bootstrap/Alert';\r\n\r\nimport { FormControl } from '@material-ui/core';\r\nimport { FormControlLabel } from '@material-ui/core';\r\nimport { FormLabel } from '@material-ui/core';\r\nimport { Radio } from '@material-ui/core';\r\nimport { RadioGroup } from '@material-ui/core';\r\n\r\nconst required = value => {\r\n    if (!value) {\r\n      return (\r\n          <Alert variant=\"danger\" bsPrefix=\"alert-login\">\r\n            ¡Todos los campos son obligatorios!\r\n          </Alert>\r\n      );\r\n    }\r\n  };\r\n\r\n  const email = value => {\r\n    if (!isEmail(value)) {\r\n      return (\r\n          <Alert variant=\"danger\" bsPrefix=\"alert-heading\">\r\n              Este correo no es valido.\r\n          </Alert>\r\n      );\r\n    }\r\n  };\r\n  \r\n  const vusername = value => {\r\n    if (value.length < 3 || value.length > 20) {\r\n      return (\r\n          <Alert variant=\"danger\" bsPrefix=\"alert-login\">\r\n              El nombre del usuario debe tener entre 3 a 20 caracteres.\r\n          </Alert>\r\n      );\r\n    }\r\n  };\r\n\r\n  const vsurname = value => {\r\n    if (value.length < 3 || value.length > 20) {\r\n      return (\r\n          <Alert variant=\"danger\" bsPrefix=\"alert-login\">\r\n              El Apellido del usuario debe tener entre 3 a 20 caracteres.\r\n          </Alert>\r\n      );\r\n    }\r\n  };\r\n  \r\n  const vpassword = value => {\r\n    if (value.length < 6 || value.length > 40) {\r\n      return (\r\n          <Alert variant=\"danger\" bsPrefix=\"alert-login\">\r\n              La contraseña debe tener entre 6 y 40 caracteres.\r\n          </Alert>\r\n      );\r\n    }\r\n  };\r\n\r\n\r\nclass Register extends Component {\r\n  \r\n    constructor(props) {\r\n      super(props);\r\n     \r\n      this.handleRegister = this.handleRegister.bind(this);\r\n      this.onChangeUsername = this.onChangeUsername.bind(this);\r\n      this.onChangeSurname = this.onChangeSurname.bind(this);\r\n      this.onChangeEmail = this.onChangeEmail.bind(this);\r\n      this.onChangePassword = this.onChangePassword.bind(this);\r\n  \r\n      this.state = {\r\n        username: \"\",\r\n        surname: \"\",\r\n        email: \"\",\r\n        password: \"\",\r\n        role: \"S\",\r\n        successful: false,\r\n        message: \"\"\r\n      };\r\n    }\r\n  \r\n    onChangeUsername(e) {\r\n      this.setState({\r\n        username: e.target.value\r\n      });\r\n    }\r\n\r\n    onChangeSurname(e) {\r\n        this.setState({\r\n          surname: e.target.value\r\n        });\r\n      }\r\n    \r\n  \r\n    onChangeEmail(e) {\r\n      this.setState({\r\n        email: e.target.value\r\n      });\r\n    }\r\n  \r\n    onChangePassword(e) {\r\n      this.setState({\r\n        password: e.target.value\r\n      });\r\n    }\r\n\r\n    onChangeRole = (e) => {\r\n      this.setState({\r\n        role: e.target.value\r\n      });\r\n    }\r\n  \r\n    handleRegister(e) {\r\n      e.preventDefault();\r\n  \r\n      this.setState({\r\n        message: \"\",\r\n        successful: false\r\n      });\r\n  \r\n      this.form.validateAll();\r\n  \r\n      if (this.checkBtn.context._errors.length === 0) {\r\n       \r\n        AuthService.register(\r\n          this.state.username,\r\n          this.state.surname,\r\n          this.state.email,\r\n          this.state.password,\r\n          this.state.role\r\n        ).then(\r\n          response => {\r\n            this.setState({\r\n              message: response.data.message,\r\n              successful: true\r\n            });\r\n          },\r\n          error => {\r\n            const resMessage =\r\n              (error.response &&\r\n                error.response.data &&\r\n                error.response.data.message) ||\r\n              error.message ||\r\n              error.toString();\r\n  \r\n            this.setState({\r\n              successful: false,\r\n              message: resMessage\r\n            });\r\n          }\r\n        );\r\n      }\r\n    }\r\n  \r\n    render() {\r\n      return (\r\n        <div className=\"container-home\">\r\n                <Form\r\n                  onSubmit={this.handleRegister}\r\n                  ref={c => {\r\n                    this.form = c;\r\n                  }}\r\n                >\r\n                  {!this.state.successful && (\r\n                    <div className=\"form-group-register\">\r\n                        <h4>Registrarse</h4>\r\n                       <div className=\"section-column\">\r\n                            <Input\r\n                              type=\"text\"\r\n                              className=\"form-control\"\r\n                              name=\"username\"\r\n                              placeholder=\"Nombre\"\r\n                              value={this.state.username}\r\n                              onChange={this.onChangeUsername}\r\n                              validations={[required, vusername]}\r\n                            />\r\n                       </div>\r\n                        <div className=\"section-column\">\r\n                            <Input\r\n                              type=\"text\"\r\n                              className=\"form-control\"\r\n                              name=\"surname\"\r\n                              placeholder=\"Apellido\"\r\n                              value={this.state.surname}\r\n                              onChange={this.onChangeSurname}\r\n                              validations={[required, vsurname]}\r\n                            />\r\n                        </div>\r\n                        <div className=\"section-column\">\r\n                            <Input\r\n                              type=\"text\"\r\n                              className=\"form-control\"\r\n                              name=\"email\"\r\n                              placeholder=\"Correo\"\r\n                              value={this.state.email}\r\n                              onChange={this.onChangeEmail}\r\n                              validations={[required, email]}\r\n                            />\r\n                        </div>\r\n                        <div className=\"section-column\">\r\n                            <Input\r\n                              type=\"password\"\r\n                              className=\"form-control\"\r\n                              name=\"password\"\r\n                              placeholder=\"Contraseña\"\r\n                              value={this.state.password}\r\n                              onChange={this.onChangePassword}\r\n                              validations={[required, vpassword]}\r\n                            />\r\n                        </div>\r\n                        <div className=\"section-column\">\r\n                        <FormControl component=\"fieldset\">\r\n                          <FormLabel component=\"legend\">¿Qué tipo de usuario eres?</FormLabel>\r\n                          <RadioGroup aria-label=\"Rol\" name=\"role\" value={this.state.role} onChange={this.onChangeRole}>\r\n                            <FormControlLabel value=\"S\" control={<Radio />} label=\"Soy estudiante.\" />\r\n                            <FormControlLabel value=\"T\" control={<Radio />} label=\"Soy profesor.\" />\r\n                          </RadioGroup>\r\n                      </FormControl>\r\n                        </div>\r\n                        <ul className=\"flex-container wrap\">\r\n                            <li className=\"flex-item-small\">\r\n                                <input type=\"checkbox\" id=\"vehicle1\" name=\"vehicle1\" value=\"Bike\" required= \"required\"></input>\r\n                            </li>\r\n                            <li className=\"flex-item-medium\">\r\n                                <label htmlFor=\"vehicle1\">\r\n                                    Marcando esta casilla confirmo que he leído y acepto la información del servicio y\r\n                                    protección de datos de carácter personal\r\n                                </label>\r\n                            </li>\r\n                        </ul>\r\n                        <div className=\"section-column\">\r\n                            <button className=\"button button5\">Sign Up</button>\r\n                        </div>\r\n                    </div>\r\n                  )}\r\n\r\n                  {this.state.message && (\r\n                    <div className=\"form-group\">\r\n                      <div\r\n                        className={\r\n                          this.state.successful\r\n                            ? \"alert alert-success\"\r\n                            : \"alert alert-danger\"\r\n                        }\r\n                        role=\"alert\"\r\n                      >\r\n                        {this.state.message}\r\n                      </div>\r\n                    </div>\r\n                  )}\r\n                  <CheckButton\r\n                    style={{ display: \"none\" }}\r\n                    ref={c => {\r\n                      this.checkBtn = c;\r\n                    }}\r\n                  />\r\n            </Form>\r\n            <img className=\"img-home\" src=\"liteaturalapiz.png\"></img>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n  \r\n  export default Register;","import React, { Component } from \"react\";\r\nimport { Redirect, Link }from \"react-router-dom\";\r\nimport AuthService from \"../../../services/authenticity/auth-service\";\r\nimport '../../../styles/styleGeneral.css';\r\nimport '../../../styles/styleCard.css';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Figure from 'react-bootstrap/Figure';\r\nimport Button from 'react-bootstrap/Button';\r\nimport axios from \"../../../axios\";\r\n\r\n\r\nexport default class Profile extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            role:'',\r\n            redirect: null,\r\n            userReady: false,\r\n            currentUser: [],\r\n        };\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        const currentUser = AuthService.getCurrentUser();\r\n\r\n        if (!currentUser )\r\n            this.setState({ redirect: \"/home\" });\r\n\r\n        this.setState({ currentUser: currentUser, userReady: true });\r\n        if(currentUser.rol==='S'){\r\n            this.setState({role:\"Estudiante\"});\r\n        }\r\n        else if (currentUser.rol==='T'){\r\n            this.setState({role:\"Profesor/a\"});\r\n        }\r\n        else{\r\n            this.setState({role:\"Administrador/a\"});\r\n        }\r\n   \r\n    }\r\n\r\n    render() {\r\n\r\n        if (this.state.redirect) {\r\n            return <Redirect to={this.state.redirect} />\r\n        }\r\n\r\n        const { currentUser,role} = this.state;\r\n\r\n        let foto = <Figure>\r\n                        <Figure.Image\r\n                            bsPrefix=\"figure\"\r\n                            alt=\"171x180\"\r\n                            src=\"/chicaliteratura_sizebig.png\"\r\n                        />\r\n                </Figure>;\r\n\r\n        //var baseURL = axios.defaults.baseURL+\"multimedia/users/default.jpg\";\r\n        if( this.state.currentUser.ruta !== \"\"){\r\n            foto = <Figure>\r\n                        <Figure.Image\r\n                            bsPrefix=\"figure\"\r\n                            alt=\"171x180\"\r\n                            src={currentUser.ruta}\r\n                        />\r\n                </Figure>;\r\n            //}\r\n        }\r\n        else{  \r\n            foto = <Figure>\r\n                        <Figure.Image\r\n                            bsPrefix=\"figure\"\r\n                            alt=\"171x180\"\r\n                            src={\"/chicaliteratura.png\"}\r\n                        />\r\n                </Figure>;   \r\n        }\r\n\r\n        return (\r\n            <>\r\n            <div className=\"perfil-left\">\r\n                <ul className=\"flex-container wrap\">\r\n                    <li className=\"items-column\">\r\n                        {foto}\r\n                    </li>\r\n                    <li className=\"items-column\">\r\n                        <h1>\r\n                            {currentUser.username}\r\n                        </h1>\r\n                    </li>\r\n                    <li className=\"items-column\">\r\n                        <h6>{role}</h6>\r\n                    </li>\r\n                    <li className=\"items-column\">\r\n                       <ul className={\"flex-row\"}>\r\n                            <li className={\"flex-row-item\"}>\r\n                                <img  className={\"img-icon-perfil\"} src=\"setting.png\" alt=\"\"/>\r\n                           </li>\r\n                           <li className={\"flex-row-item\"}>\r\n                               <Link to={\"/editProfile\"}>\r\n                                   <Button size=\"sm\"  variant=\"outline-light\">Editar</Button>\r\n                               </Link>\r\n                           </li>\r\n                       </ul>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n\r\n                <div className=\"container\">\r\n                    <Card className=\"card-profile\">\r\n                        <Card.Body>\r\n                            <div className=\"row-edit\">\r\n                                <div className=\"label-icon\">\r\n                                    <img src=\"user.png\" />\r\n                                </div>\r\n                                <div className=\"label-icon\">\r\n                                    <h5>Información personal</h5>\r\n                                </div>\r\n                            </div>\r\n                            <hr/>\r\n                            <div className=\"row\">\r\n                                <ul className=\"flex-container wrap\">\r\n                                    <li className=\"flex-item\">\r\n                                        <p className=\"p-general\">\r\n                                            Nombre completo: {currentUser.username} {currentUser.surname}\r\n                                        </p>\r\n                                    </li>\r\n                                    <li className=\"flex-item\">\r\n                                       <p className=\"p-general\">Tipo de rol: {role}</p>\r\n                                    </li>\r\n                                    <li className=\"flex-item\">\r\n                                       <p className=\"p-general\">Correo: {currentUser.email}</p>\r\n                                    </li>\r\n                                    { currentUser.activo ? (\r\n                                        <li className=\"flex-item\">\r\n                                            <p className=\"p-general\">Estado <img className=\"status\" src=\"circuloVerde.png\" /></p>\r\n                                        </li>\r\n                                        ):(\r\n                                            <li className=\"flex-item\">\r\n                                                <p className=\"p-general\">Estado <img className=\"status\" src=\"circuloRojo.png\" /></p>\r\n                                            </li>\r\n                                        )\r\n                                    }\r\n                                </ul>\r\n                            </div>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n","import axios from '../../axios';\r\nimport authHeader from '../authenticity/auth-header';\r\n\r\nclass StudentService {\r\n    //-----------------------------------------------------GROUPS----------------------------------------------------------------//\r\n\r\n    /**Obtiene los grupos del estudiante */\r\n    getGroups(idStudent) {\r\n        return axios.post(\"/student/getGroups\", { idStudent: idStudent }, { headers: { \"Authorization\": `Bearer ${authHeader()}` } })\r\n            .then(response => {\r\n                return response.data;\r\n            }).catch(error => {\r\n                console.log(error.message);\r\n                window.location.href = '/500';\r\n            })\r\n    }\r\n\r\n    /* Se muestran los grupos donde no se encuentra el estudiante */\r\n    getRemainingGroups(idStudent)\r\n    {\r\n        return axios.get(\"/student/getRemainingGroups\", { params: { idStudent: idStudent } },\r\n            {\r\n                headers: { \"Authorization\": `Bearer ${authHeader()}` }\r\n            }).then(response => {\r\n                return response.data;\r\n            }).catch(error => {\r\n                console.log(error.message);\r\n                window.location.href = '/500';\r\n            })\r\n    }\r\n\r\n    /* Mandar a un profesor una petición de unión a un grupo */\r\n    sendGroupRequest(idGroup, idStudent)\r\n    {\r\n        return axios.post(\"/student/sendGroupRequest\", { idGroup: idGroup, idStudent: idStudent },\r\n        {\r\n            headers: { \"Authorization\": `Bearer ${authHeader()}` }\r\n        }).then(response => {\r\n            return response.data;\r\n        }).catch(error => {\r\n            console.log(error.message);\r\n            window.location.href = '/500';\r\n        })\r\n    }\r\n\r\n    //-----------------------------------------------------CHALLENGES----------------------------------------------------------------//\r\n\r\n    /**Obtiene el desafio del estudiante segun su grupo */\r\n    getChallenge(idChallenge) {\r\n        return axios.get(\"student/getChallenge\", { params: { idChallenge: idChallenge } }, {\r\n            headers: { \"Authorization\": `Bearer ${authHeader()}` }\r\n        }).then(response => {\r\n            return response.data;\r\n        }).catch(error => {\r\n            console.log(error.message);\r\n            window.location.href = '/500';\r\n        })\r\n    }\r\n\r\n    /**Obtiene los desafios del estudiante segun su grupo */\r\n    getChallenges(idGroup, type) {\r\n        return axios.get(\"/student/getChallenges\", { params: { idGroup: idGroup, type: type } }, {\r\n            headers: { \"Authorization\": `Bearer ${authHeader()}` }\r\n        }).then(response => {\r\n            return response.data;\r\n        }).catch(error => {\r\n            console.log(error.message);\r\n            window.location.href = '/500';\r\n        })\r\n    }\r\n\r\n    /**Obtiene los desafios del estudiante (sin tener en cuenta el grupo) */\r\n    getChallengesIndividual(idStudent, type) {\r\n        return axios.get(\"/student/getChallengesIndividual\", { params: { idStudent: idStudent, type: type } }, {\r\n            headers: { \"Authorization\": `Bearer ${authHeader()}` }\r\n        }).then(response => {\r\n            return response.data;\r\n        }).catch(error => {\r\n            console.log(error.message);\r\n            window.location.href = '/500';\r\n        })\r\n    }\r\n\r\n    //--------------------------------------------------MULTIMEDIA-CHALLENGES----------------------------------------------------------------//\r\n\r\n    /*Obtiene ficheros multimedia del desafio */\r\n    getMultimediaChallenge(idChallenge) {\r\n        return axios.get(\"/student/getMultimediaChallenge\", { params: { idChallenge: idChallenge } },\r\n            {\r\n                headers: { \"Authorization\": `Bearer ${authHeader()}` }\r\n            }).then(response => {\r\n                return response;\r\n            }).catch(error => {\r\n                console.log(error.message);\r\n                window.location.href = '/500';\r\n            })\r\n    }\r\n\r\n    //-----------------------------------------------------WRITINGS----------------------------------------------------------------//    \r\n\r\n    /*Obtiene el escrito del estudiante */\r\n    getWriting(idWriting) {\r\n        return axios.get(\"/student/getWriting\", { params: { idWriting: idWriting } },\r\n            {\r\n                headers: { \"Authorization\": `Bearer ${authHeader()}` }\r\n            }).then(response => {\r\n                return response;\r\n            }).catch(error => {\r\n                console.log(error.message);\r\n                window.location.href = '/500';\r\n            })\r\n    }\r\n\r\n    /*Obtiene el escrito del estudiante */\r\n    getWritings(idStudent) {\r\n        return axios.get(\"/student/getWritings\", { params: { idStudent: idStudent } },\r\n            {\r\n                headers: { \"Authorization\": `Bearer ${authHeader()}` }\r\n            }).then(response => {\r\n                return response;\r\n            }).catch(error => {\r\n                console.log(error.message);\r\n                window.location.href = '/500';\r\n            })\r\n    }\r\n\r\n    /* Obtiene el escrito del estudiante con todas la versiones */\r\n    getVersionsfromWriting(idWriting)\r\n    {\r\n        return axios.get(\"/student/getVersionsfromWriting\", { params: { idWriting: idWriting } },\r\n            {\r\n                headers: { \"Authorization\": `Bearer ${authHeader()}` }\r\n            }).then(response => {\r\n                return response;\r\n            }).catch(error => {\r\n                console.log(error.message);\r\n                window.location.href = '/500';\r\n            })\r\n    }\r\n\r\n    /* Devuelve la última versión de un escrito, es decir, el mayor id */\r\n    getHighestidVersionfromWriting(idWriting)\r\n    {\r\n        return axios.get(\"/student/getHighestidVersionfromWriting\", { params: { idWriting: idWriting } },\r\n            {\r\n                headers: { \"Authorization\": `Bearer ${authHeader()}` }\r\n            }).then(response => {\r\n                return response.data;\r\n                \r\n            }).catch(error => {\r\n                console.log(error.message);\r\n                window.location.href = '/500';\r\n            })\r\n    }\r\n\r\n    /*Obtiene todos los escritos colaborativos activos del equipo del estudiante*/\r\n    getWritingsCollaborative(idStudent) {\r\n        return axios.get(\"/student/getWritingsCollaborative\", { params: { idStudent: idStudent } },\r\n            {\r\n                headers: { \"Authorization\": `Bearer ${authHeader()}` }\r\n            }).then(response => {\r\n                return response;\r\n            }).catch(error => {\r\n                console.log(error.message);\r\n                window.location.href = '/500';\r\n            })\r\n    }\r\n\r\n    /*Obtiene el escrito del estudiante */\r\n    getWritingWriter(idGroup, idChallenge, idWriter) {\r\n        return axios.get(\"/student/getWritingWriter\", { params: { idGroup: idGroup, idChallenge: idChallenge, idWriter: idWriter } },\r\n            {\r\n                headers: { \"Authorization\": `Bearer ${authHeader()}` }\r\n            }).then(response => {\r\n                return response;\r\n            }).catch(error => {\r\n                console.log(error.message);\r\n                window.location.href = '/500';\r\n            })\r\n    }\r\n\r\n    /*Obtiene los escritos del estudiante en un grupo*/\r\n    getWritingsStudent(idStudent, idGroup) {\r\n        return axios.get(\"student/getWritingsStudent\", { params: { idStudent: idStudent, idGroup: idGroup } }, {\r\n            headers: { \"Authorization\": `Bearer ${authHeader()}` }\r\n        }).then(response => {\r\n            return response.data;\r\n        }).catch(error => {\r\n            console.log(error.message);\r\n            window.location.href = '/500';\r\n        })\r\n    }\r\n\r\n      /*Obtiene los escritos del estudiante en un grupo*/\r\n      getWritingsStudentCollection(idGroup, idChallenge) {\r\n        return axios.get(\"student/getWritingsStudentCollection\", { params: { idGroup: idGroup, idChallenge: idChallenge } }, {\r\n            headers: { \"Authorization\": `Bearer ${authHeader()}` }\r\n        }).then(response => {\r\n            return response.data;\r\n        }).catch(error => {\r\n            console.log(error.message);\r\n            window.location.href = '/500';\r\n        })\r\n    }\r\n\r\n    /*Obtiene los escritos de un equipo */\r\n    getWritingsTeam(idTeam, idGroup) {\r\n        return axios.get(\"student/getWritingsTeam\", { params: { idTeam: idTeam, idGroup: idGroup } }, {\r\n            headers: { \"Authorization\": `Bearer ${authHeader()}` }\r\n        }).then(response => {\r\n            return response.data;\r\n        }).catch(error => {\r\n            console.log(error.message);\r\n            window.location.href = '/500';\r\n        })\r\n    }\r\n\r\n  /*Obtiene escritos colaborativos */\r\n  getWritingsTeamCollection(idGroup, idChallenge) {\r\n    return axios.get(\"student/getWritingsTeamCollection\", { params: { idGroup: idGroup,idChallenge:idChallenge } }, {\r\n        headers: { \"Authorization\": `Bearer ${authHeader()}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    }).catch(error => {\r\n        console.log(error.message);\r\n        window.location.href = '/500';\r\n    })\r\n}\r\n\r\n    /* Obtiene todas las versiones de un escrito colaborativo */\r\n    getVersionsfromWritingTeam(idWriting)\r\n    {\r\n        return axios.get(\"student/getVersionsfromWritingTeam\", { params: { idWriting: idWriting } }, {\r\n            headers: { \"Authorization\": `Bearer ${authHeader()}` }\r\n        }).then(response => {\r\n            return response.data;\r\n        }).catch(error => {\r\n            console.log(error.message);\r\n            window.location.href = '/500';\r\n        })\r\n    }\r\n\r\n    /*Edito el escrito del estudiante */\r\n    editWriting(idWriting, idGroup, idChallenge, idWriter, title, escrito, type) {\r\n        return axios.post(\"/student/editWriting\", { idWriting: idWriting, idGroup: idGroup, idChallenge: idChallenge, idWriter: idWriter, title: title, escrito: escrito, type: type }, {\r\n            headers: { \"Authorization\": `Bearer ${authHeader()}` }\r\n        }).then(response => {\r\n            return response.data;\r\n        }).catch(error => {\r\n            console.log(error.message);\r\n            window.location.href = '/500';\r\n        })\r\n    }\r\n\r\n    /*Añado una nueva versión de un escrito */\r\n    insertVersionfromWriting(idWriting, idVersion, idChallenge, idWriter, title, text, type)\r\n    {\r\n        return axios.post(\"/student/insertVersionfromWriting\", { idWriting: idWriting, idVersion: idVersion, idChallenge: idChallenge, idWriter: idWriter, title: title, text: text, type: type }, {\r\n            headers: { \"Authorization\": `Bearer ${authHeader()}` }\r\n        }).then(response => {\r\n            return response.data;\r\n        }).catch(error => {\r\n            console.log(error.message);\r\n            window.location.href = '/500';\r\n        })\r\n    }\r\n\r\n    /* Obtiene el último escrito, es decir, el máximo id de escrito */\r\n    getHighestidWriting()\r\n    {\r\n        return axios.post(\"/student/getHighestidWriting\", { }, {\r\n            headers: { \"Authorization\": `Bearer ${authHeader()}` }\r\n        }).then(response => {\r\n            return response.data;\r\n        }).catch(error => {\r\n            console.log(error.message);\r\n            window.location.href = '/500';\r\n        })\r\n    }\r\n\r\n\r\n    /*Edito el escrito del estudiante */\r\n    editWritingTeam(idWriting, idGroup, idChallenge, idWriter, title, escrito, log, type) {\r\n        return axios.post(\"/student/editWritingTeam\", { idWriting: idWriting, idGroup: idGroup, idChallenge: idChallenge, idWriter: idWriter, title: title, escrito: escrito, log: log, type: type }, {\r\n            headers: { \"Authorization\": `Bearer ${authHeader()}` }\r\n        }).then(response => {\r\n            return response.data;\r\n        }).catch(error => {\r\n            console.log(error.message);\r\n            window.location.href = '/500';\r\n        })\r\n    }\r\n\r\n    /*Envia el escrito del estudiante segun su grupo*/\r\n    createWriting(idGroup, idChallenge, idWriter, title, escrito, type) {\r\n        return axios.post(\"/student/createWriting\", { idGroup: idGroup, idChallenge: idChallenge, idWriter: idWriter, title: title, escrito: escrito, type: type }, {\r\n            headers: { \"Authorization\": `Bearer ${authHeader()}` }\r\n        }).then(response => {\r\n            return response.data;\r\n        }).catch(error => {\r\n            console.log(error.message);\r\n            window.location.href = '/500';\r\n        })\r\n    }\r\n\r\n    //--------------------------------------------------MULTIMEDIA-WRITINGS----------------------------------------------------------------//\r\n\r\n    /*Envia los archivos multimedia del estudiante*/\r\n    sendMultimedia(imgCollection, idWriter, idChallenge, type/*, idVersion*/) {\r\n        const form = new FormData();\r\n        for (const key of Object.keys(imgCollection)) {\r\n            form.append('imgCollection', imgCollection[key])\r\n        }\r\n        form.append(\"idWriter\", idWriter);\r\n        form.append(\"idChallenge\", idChallenge);\r\n        // form.append(\"idVersion\", idVersion);\r\n        return axios.post(\"/student/sendMultimedia\", form, { params: { id: idWriter, idFolder: idChallenge, type: type/*, idVersion: idVersion*/ } }, {\r\n            headers: { \"Authorization\": `Bearer ${authHeader()}` }\r\n        }).then(response => {\r\n            return response.data;\r\n        }).catch(error => {\r\n            console.log(error.message);\r\n            window.location.href = '/500';\r\n        })\r\n    }\r\n\r\n    /*Obtiene multimedia del escrito del estudiante */\r\n    getMultimediaWriting(idChallenge, idWriter/*, idVersion*/) {\r\n        return axios.get(\"/student/getMultimediaWriting\", { params: { idChallenge: idChallenge, idWriter: idWriter, /*idVersion: idVersion*/} },\r\n            {\r\n                headers: { \"Authorization\": `Bearer ${authHeader()}` }\r\n            }).then(response => {\r\n                return response;\r\n            }).catch(error => {\r\n                console.log(error.message);\r\n                window.location.href = '/500';\r\n            })\r\n    }\r\n\r\n    /*Edita los archivos multimedia del estudiante*/\r\n    editMultimedia(idMultimedia, idWriter, idChallenge, idVersion, path) {\r\n        const form = new FormData();\r\n        form.append(\"idMultimedia\", idMultimedia);\r\n        form.append(\"idWriter\", idWriter);\r\n        form.append(\"idChallenge\", idChallenge);\r\n        form.append(\"idVersion\", idVersion);\r\n        form.append(\"path\", path);\r\n        return axios.post(\"/student/editMultimedia\", form, {\r\n            headers: { \"Authorization\": `Bearer ${authHeader()}` }\r\n        }).then(response => {\r\n            return response.data;\r\n        }).catch(error => {\r\n            console.log(error.message);\r\n            window.location.href = '/500';\r\n        })\r\n    }\r\n\r\n    /*Elimina fichero multimedia del escrito */\r\n    deleteMultimedia(idMultimedia, path) {\r\n        return axios.post(\"/student/deleteFile\", { idMultimedia: idMultimedia, path: path }, {\r\n            headers: { \"Authorization\": `Bearer ${authHeader()}` }\r\n        }).then(response => {\r\n            return response.data;\r\n        }).catch(error => {\r\n            console.log(error.message);\r\n            window.location.href = '/500';\r\n        })\r\n    }\r\n\r\n    // /*Envia los archivos multimedia del estudiante*/\r\n    // sendMultimedia(imgCollection, idWriter, idChallenge) {\r\n    //     const form = new FormData();\r\n\r\n    //     for (const key of Object.keys(imgCollection)) {\r\n    //         form.append('imgCollection', imgCollection[key])\r\n    //     }\r\n\r\n    //     form.append(\"idWriter\", idWriter);\r\n    //     form.append(\"idChallenge\", idChallenge);\r\n\r\n    //     return axios.post(\"/student/sendMultimedia\", form, { params: { idUser: idWriter, idFolder: idChallenge } }, {\r\n    //         headers: { \"Authorization\": `Bearer ${authHeader()}` }\r\n    //     }).then(response => {\r\n    //         return response.data;\r\n    //     }).catch(error => {\r\n    //         console.log(error.message);\r\n    //     })\r\n    // }\r\n    //-----------------------------------------------------TEAMS----------------------------------------------------------------//\r\n\r\n    //Estudiante crea un equipo\r\n    createTeam(idCreator, idGroup, teamName) {\r\n        return axios.post(\"/student/createTeam\", { idCreator: idCreator, idGroup: idGroup, teamName: teamName }, { headers: { \"Authorization\": `Bearer ${authHeader()}` } })\r\n            .then(response => {\r\n                return response.data;\r\n            }).catch(error => {\r\n                console.log(error.message);\r\n                window.location.href = '/500';\r\n            })\r\n    }\r\n\r\n    /**Obtiene los equipos del estudiante */\r\n    getTeams(idStudent) {\r\n        return axios.get(\"/student/getTeams\", { params: { idStudent: idStudent } }, { headers: { \"Authorization\": `Bearer ${authHeader()}` } })\r\n            .then(response => {\r\n                return response.data;\r\n            }).catch(error => {\r\n                console.log(error.message);\r\n                window.location.href = '/500';\r\n            })\r\n    }\r\n\r\n    /**Obtiene el equipo del estudiante */\r\n    getTeam(idTeam) {\r\n        return axios.get(\"/student/getTeam\", { params: { idTeam: idTeam } }, { headers: { \"Authorization\": `Bearer ${authHeader()}` } })\r\n            .then(response => {\r\n                return response.data;\r\n            }).catch(error => {\r\n                console.log(error.message);\r\n                window.location.href = '/500';\r\n            })\r\n    }\r\n\r\n    /**Obtengo la tabla entera de equipoestudiante */\r\n    getTeamStudent() {\r\n        return axios.get(\"/student/getTeamStudent\", { headers: { \"Authorization\": `Bearer ${authHeader()}` } })\r\n            .then(response => {\r\n                return response.data;\r\n            }).catch(error => {\r\n                console.log(error.message);\r\n                window.location.href = '/500';\r\n            })\r\n    }\r\n\r\n    // Obtiene los integrantes de un equipo\r\n    getMembersTeam(idTeam) {\r\n        return axios.get(\"/student/getMembersTeam\", { params: { idTeam: idTeam } }, { headers: { \"Authorization\": `Bearer ${authHeader()}` } })\r\n            .then(response => {\r\n                return response.data;\r\n            }).catch(error => {\r\n                console.log(error.message);\r\n                window.location.href = '/500';\r\n            })\r\n    }\r\n\r\n    /*Obtiene estudiantes sin equipos del grupo */\r\n    getStudentWithoutTeam(idGroup) {\r\n        return axios.get(\"/student/getStudentWithoutTeam\", { params: { idGroup: idGroup } }, { headers: { \"Authorization\": `Bearer ${authHeader()}` } })\r\n            .then(response => {\r\n                return response.data;\r\n            }).catch(error => {\r\n                console.log(error.message);\r\n                window.location.href = '/500';\r\n            })\r\n    }\r\n\r\n    /*Obtiene equipo del estudiante correspondiente a un grupo en concreto*/\r\n    getTeamStudentGroup(idStudent, idGroup) {\r\n        return axios.get(\"/student/getTeamStudentGroup\", { params: { idStudent: idStudent, idGroup: idGroup } }, { headers: { \"Authorization\": `Bearer ${authHeader()}` } })\r\n            .then(response => {\r\n                return response.data;\r\n            }).catch(error => {\r\n                console.log(error.message);\r\n                window.location.href = '/500';\r\n            })\r\n    }\r\n\r\n    /**Obtengo los equipos del grupo*/\r\n    getTeamsGroup(idGroup) {\r\n        return axios.get(\"/student/getTeamsGroup\", { params: { idGroup: idGroup } }, { headers: { \"Authorization\": `Bearer ${authHeader()}` } })\r\n            .then(response => {\r\n                return response.data;\r\n            }).catch(error => {\r\n                console.log(error.message);\r\n                window.location.href = '/500';\r\n            })\r\n    }\r\n\r\n    /**edita el equipo*/\r\n    editTeam(idTeam, name, idCreator, idGroup) {\r\n        return axios.post(\"/student/editTeam\", { idTeam: idTeam, name: name, idCreator: idCreator, idGroup: idGroup }, { headers: { \"Authorization\": `Bearer ${authHeader()}` } })\r\n            .then(response => {\r\n                return response.data;\r\n            }).catch(error => {\r\n                console.log(error.message);\r\n                window.location.href = '/500';\r\n            })\r\n    }\r\n\r\n    /**edita el equipo*/\r\n    deleteTeam(idTeam) {\r\n        return axios.post(\"/student/deleteTeam\", { idTeam: idTeam }, { headers: { \"Authorization\": `Bearer ${authHeader()}` } })\r\n            .then(response => {\r\n                return response.data;\r\n            }).catch(error => {\r\n                console.log(error.message);\r\n                window.location.href = '/500';\r\n            })\r\n    }\r\n\r\n    //Agrega un estudiante a un equipo\r\n    addStudentTeam(idTeam, idStudent) {\r\n        return axios.post(\"/student/addStudentTeam\", { idTeam: idTeam, idStudent: idStudent }, { headers: { \"Authorization\": `Bearer ${authHeader()}` } })\r\n            .then(response => {\r\n                return response.data;\r\n            }).catch(error => {\r\n                console.log(error.message);\r\n                window.location.href = '/500';\r\n            })\r\n    }\r\n\r\n    //Estudiante abandona equipo\r\n    leaveStudentTeam(idTeam, idStudent) {\r\n        return axios.post(\"/student/leaveStudentTeam\", { idTeam: idTeam, idStudent: idStudent }, { headers: { \"Authorization\": `Bearer ${authHeader()}` } })\r\n            .then(response => {\r\n                return response.data;\r\n            }).catch(error => {\r\n                console.log(error.message);\r\n                window.location.href = '/500';\r\n            })\r\n    }\r\n\r\n    /**Estudiante se une a un equipo */\r\n    joinTeam(idTeam, idStudent) {\r\n        return axios.get(\"/student/joinTeam\", { params: { idTeam: idTeam, idStudent: idStudent } }, { headers: { \"Authorization\": `Bearer ${authHeader()}` } })\r\n            .then(response => {\r\n                return response.data;\r\n            }).catch(error => {\r\n                console.log(error.message);\r\n                window.location.href = '/500';\r\n            })\r\n    }\r\n    //-----------------------------------------------------MESSAGES----------------------------------------------------------------//\r\n\r\n    //Envia un mensaje\r\n    sendMessage(idGroup, idSender, idReceiver, idCreator, message, type) {\r\n        return axios.post(\"/student/sendMessage\", { idGroup: idGroup, idSender: idSender, idReceiver: idReceiver, idCreator: idCreator, message: message, type: type }, { headers: { \"Authorization\": `Bearer ${authHeader()}` } })\r\n            .then(response => {\r\n                return response.data;\r\n            }).catch(error => {\r\n                console.log(error.message);\r\n                window.location.href = '/500';\r\n            })\r\n    }\r\n\r\n    /**Obtiene los mensajes del estudiante */\r\n    getMessages(idStudent) {\r\n        return axios.get(\"/student/getMessages\", { params: { idStudent: idStudent } }, { headers: { \"Authorization\": `Bearer ${authHeader()}` } })\r\n            .then(response => {\r\n                return response.data;\r\n            }).catch(error => {\r\n                console.log(error.message);\r\n                window.location.href = '/500';\r\n            })\r\n    }\r\n\r\n    /**Obtiene mensaje del estudiante */\r\n    getMessage(idMessage) {\r\n        return axios.get(\"/student/getMessage\", { params: { idMessage: idMessage } }, { headers: { \"Authorization\": `Bearer ${authHeader()}` } })\r\n            .then(response => {\r\n                return response.data;\r\n            }).catch(error => {\r\n                console.log(error.message);\r\n                window.location.href = '/500';\r\n            })\r\n    }\r\n\r\n    /**modifica el tipo de mensaje */\r\n    editMessage(idMessage) {\r\n        return axios.post(\"/student/editMessage\", { idMessage: idMessage }, { headers: { \"Authorization\": `Bearer ${authHeader()}` } })\r\n            .then(response => {\r\n                return response.data;\r\n            }).catch(error => {\r\n                console.log(error.message);\r\n                window.location.href = '/500';\r\n            })\r\n    }\r\n\r\n    /*Elimina desafio*/\r\n    deleteMessage(idMessage) {\r\n        return axios.post(\"/student/deleteMessage\", { idMessage: idMessage }, {\r\n            headers: { \"Authorization\": `Bearer ${authHeader()}` }\r\n        }).then(response => {\r\n            return response.data;\r\n        }).catch(error => {\r\n            console.log(error.message);\r\n            window.location.href = '/500';\r\n        })\r\n    }\r\n\r\n    /**busca mensajes por emisor estudiante*/\r\n    searchMessageByIssuer(idGroup, idIssuer, idCreatorTeam) {\r\n        return axios.get(\"/student/searchMessageByIssuer\", { params: { idGroup: idGroup, idIssuer: idIssuer, idCreatorTeam: idCreatorTeam } }, { headers: { \"Authorization\": `Bearer ${authHeader()}` } })\r\n            .then(response => {\r\n                return response.data;\r\n            }).catch(error => {\r\n                console.log(error.message);\r\n                window.location.href = '/500';\r\n            })\r\n    }\r\n\r\n\r\n    /**busca mensajes por emisor estudiante*/\r\n    searchMessageByReceiver(idGroup, idReceiver, idCreatorTeam) {\r\n        return axios.get(\"/student/searchMessageByReceiver\", { params: { idGroup: idGroup, idReceiver: idReceiver, idCreatorTeam: idCreatorTeam } }, { headers: { \"Authorization\": `Bearer ${authHeader()}` } })\r\n            .then(response => {\r\n                return response.data;\r\n            }).catch(error => {\r\n                console.log(error.message);\r\n                window.location.href = '/500';\r\n            })\r\n    }\r\n\r\n\r\n    //----------------------------------COLLECTIONS-----------------------------------------------------//\r\n        // Obtiene las colecciones de un profesor, pudiendo filtrar por nombre de grupo o nombre de colección\r\n        getCollections(idEstudiante, filtroBusqueda)\r\n        {\r\n            return axios.get(\"/student/getCollections\", { params: { idEstudiante: idEstudiante, filtroBusqueda: filtroBusqueda } },\r\n                {\r\n                    headers: { \"Authorization\": `Bearer ${authHeader()}` }\r\n                }).then(response => {\r\n                    return response.data;\r\n                }).catch(error => {\r\n                    console.log(error.message);\r\n                    window.location.href = '/500';\r\n                })\r\n        }\r\n    \r\n        // Obtiene una colección\r\n        getCollection(idCollection)\r\n        {\r\n            return axios.get(\"/student/getCollection\", { params: { idCollection: idCollection } },\r\n                {\r\n                    headers: { \"Authorization\": `Bearer ${authHeader()}` }\r\n                }).then(response => {\r\n                    return response.data;\r\n                }).catch(error => {\r\n                    console.log(error.message);\r\n                    window.location.href = '/500';\r\n                })\r\n        }\r\n    \r\n        // Obtiene los desafíos de una colección\r\n        getChallengesFromCollection(idCollection)\r\n        {\r\n            return axios.get(\"/student/getChallengesFromCollection\", { params: { idCollection: idCollection } },\r\n                {\r\n                    headers: { \"Authorization\": `Bearer ${authHeader()}` }\r\n                }).then(response => {\r\n                    return response.data;\r\n                }).catch(error => {\r\n                    console.log(error.message);\r\n                    window.location.href = '/500';\r\n                })\r\n        }\r\n}\r\n\r\nexport default new StudentService();","/**\r\n *\r\n *  Name_file: EditProfile.js\r\n *  Description: Ventana  de modificación de datos para los usuarios de la aplicación.\r\n *\r\n * */\r\n\r\nimport React, { Component } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport AuthService from \"../../../services/authenticity/auth-service\";\r\nimport StudentService from \"../../../services/student/student-service.js\";\r\nimport { isEmail } from \"validator\";\r\n\r\n\r\n/** Estilos CSS*/\r\nimport '../../../styles/styleGeneral.css';\r\nimport '../../../styles/styleCard.css';\r\n\r\n/**Estilos Bostrap*/\r\nimport Card from 'react-bootstrap/Card';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport Form from \"react-validation/build/form\";\r\nimport Input from \"react-validation/build/input\";\r\nimport CheckButton from \"react-validation/build/button\";\r\nimport Col from 'react-bootstrap/Col';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Alert from \"react-bootstrap/Alert\";\r\n\r\n\r\n\r\nconst required = value => {\r\n    if (!value) {\r\n        return (\r\n            <Alert variant=\"danger\" bsPrefix=\"alert-login\">\r\n                Los campos deben contener algún dato\r\n            </Alert>\r\n        );\r\n    }\r\n};\r\n\r\nconst email = value => {\r\n    if (!isEmail(value)) {\r\n        return (\r\n            <Alert variant=\"danger\" bsPrefix=\"alert-login\">\r\n                Este correo no es valido.\r\n            </Alert>\r\n        );\r\n    }\r\n};\r\n\r\nconst vusername = value => {\r\n    if (value.length < 3 || value.length > 20) {\r\n        return (\r\n            <Alert variant=\"danger\" bsPrefix=\"alert-login\">\r\n                El nombre del usuario debe tener entre 3 a 20 caracteres.\r\n            </Alert>\r\n        );\r\n    }\r\n};\r\n\r\nconst vsurname = value => {\r\n    if (value.length < 3 || value.length > 20) {\r\n        return (\r\n            <Alert variant=\"danger\" bsPrefix=\"alert-login\">\r\n                El Apellido del usuario debe tener entre 3 a 20 caracteres.\r\n            </Alert>\r\n        );\r\n    }\r\n};\r\n\r\nconst vpassword = value => {\r\n    if (value.length < 6 || value.length > 40) {\r\n        return (\r\n            <Alert variant=\"danger\" bsPrefix=\"alert-login\">\r\n                La contraseña debe tener entre 6 y 40 caracteres.\r\n            </Alert>\r\n        );\r\n    }\r\n};\r\n\r\nconst vconfirmpassword = value => {\r\n    if (value.length < 6 || value.length > 40) {\r\n        return (\r\n            <Alert variant=\"danger\" bsPrefix=\"alert-login\">\r\n                La contraseña debe tener entre 6 y 40 caracteres.\r\n            </Alert>\r\n        );\r\n    }\r\n};\r\n\r\nexport default class Profile extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.onChangeUsername = this.onChangeUsername.bind(this);\r\n        this.onChangeSurname = this.onChangeSurname.bind(this);\r\n        this.onChangeEmail = this.onChangeEmail.bind(this);\r\n        this.onChangePassword = this.onChangePassword.bind(this);\r\n        this.onChangeConfirmPassword = this.onChangeConfirmPassword.bind(this);\r\n        // this.onFileChange = this.onFileChange.bind(this);\r\n        this.onModal = this.onModal.bind(this);\r\n        this.onTeamModal = this.onTeamModal.bind(this);\r\n        this.onDeleteModal = this.onDeleteModal.bind(this);\r\n        this.onUpdateModal = this.onUpdateModal.bind(this);\r\n\r\n        this.state = {\r\n\r\n            saveModal: false,\r\n            deleteModal: false,\r\n            teamModal: false,\r\n            updateModal: false,\r\n            currentUser: [],\r\n            StudentTeams: [],\r\n            updateUser: {\r\n                username: '',\r\n                surname: '',\r\n                password: '',\r\n                confirmPassword: '',\r\n                email: '',\r\n                photo: [],\r\n                file: '',\r\n                reader: '',\r\n                name:\"\",//nombre fichero\r\n            }\r\n        };\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        const currentUser = AuthService.getCurrentUser();\r\n       \r\n        if(currentUser.ruta !== null || currentUser.ruta !=\"\"){\r\n            var res = currentUser.ruta.split(\"/\");\r\n            this.setState({\r\n                updateUser: {\r\n                    ...this.state.updateUser,\r\n                    name:res[6],\r\n                }\r\n            });\r\n        }\r\n        \r\n        this.setState({ currentUser: currentUser });\r\n        this.setState({\r\n            updateUser: {\r\n                ...this.state.updateUser,\r\n                username: currentUser.username,\r\n                surname: currentUser.surname,\r\n                email: currentUser.email,\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    onChangeUsername(e) {\r\n\r\n        if (e.target.value != this.state.currentUser.username) {\r\n            this.setState({\r\n                updateUser: {\r\n                    ...this.state.updateUser,\r\n                    username: e.target.value\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    onChangeSurname(e) {\r\n\r\n        if (e.target.value != this.state.currentUser.surname) {\r\n            this.setState({\r\n                updateUser: {\r\n                    ...this.state.updateUser,\r\n                    surname: e.target.value\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n\r\n    onChangeEmail(e) {\r\n\r\n        if (e.target.value != this.state.currentUser.email) {\r\n            this.setState({\r\n                updateUser: {\r\n                    ...this.state.updateUser,\r\n                    email: e.target.value\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    onChangePassword(e) {\r\n\r\n        if (e.target.value != this.state.currentUser.password) {\r\n            this.setState({\r\n                updateUser: {\r\n                    ...this.state.updateUser,\r\n                    password: e.target.value\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    onChangeConfirmPassword(e) {\r\n\r\n        this.setState({\r\n            updateUser: {\r\n                ...this.state.updateUser,\r\n                confirmPassword: e.target.value\r\n            }\r\n        });\r\n    }\r\n\r\n    onModal(modal) {\r\n\r\n        this.setState({\r\n            saveModal: modal\r\n        });\r\n    }\r\n\r\n    onTeamModal(modal) {\r\n\r\n        this.setState({\r\n            teamModal: modal\r\n        });\r\n    }\r\n\r\n    onDeleteModal(modal) {\r\n\r\n        this.setState({\r\n            deleteModal: modal\r\n        });\r\n    }\r\n\r\n    onUpdateModal(modal) {\r\n\r\n        this.setState({\r\n            updateModal: modal\r\n        });\r\n    }\r\n\r\n\r\n    onFileChange2 = (e) => {\r\n        if (e.target.files && e.target.files.length > 0) {\r\n            const file = e.target.files[0];\r\n            if (file.type.includes(\"image\")) {\r\n                const reader = new FileReader();\r\n                reader.readAsDataURL(e.target.files[0]);\r\n                reader.onload = () => {\r\n                    this.setState({\r\n                        updateUser: {\r\n                            ...this.state.updateUser,\r\n                            reader: reader.result\r\n                        }\r\n                    });\r\n                }\r\n                this.setState({\r\n                    updateUser: {\r\n                        ...this.state.updateUser,\r\n                        file: file,\r\n                        name: file.name,\r\n                    }\r\n                });\r\n            }\r\n            else \r\n                console.log(\"there was an error\")\r\n        }\r\n    }\r\n\r\n\r\n    logout() {\r\n        AuthService.logout();\r\n    }\r\n\r\n    editProfile() {\r\n        var aux=\"\";\r\n        if( this.state.currentUser.ruta !=\"\" ){\r\n            var res = this.state.currentUser.ruta.split(\"/\");\r\n            aux=res[6];\r\n        }\r\n        if (this.state.updateUser.surname == this.state.currentUser.surname\r\n            && this.state.updateUser.username == this.state.currentUser.username\r\n            && this.state.updateUser.password == '' && this.state.updateUser.email == this.state.currentUser.email\r\n            && this.state.updateUser.confirmPassword == '' && this.state.updateUser.photo.length == 0 &&\r\n            this.state.updateUser.name == aux) {\r\n            this.onUpdateModal(true);\r\n            this.onModal(false);\r\n        } else {\r\n            if (this.state.updateUser.password == this.state.updateUser.confirmPassword) {\r\n                AuthService.editProfile(this.state.currentUser.id, this.state.updateUser.username, this.state.updateUser.surname,\r\n                    this.state.updateUser.email, this.state.updateUser.password, this.state.updateUser.photo).then(response => {\r\n                        this.logout();\r\n                        window.location.href = '/login';\r\n                    }).catch(error => {\r\n                        console.log(error.message);\r\n                    })\r\n\r\n                //Si ha seleccionado una imagen, actualiza la foto\r\n                if (this.state.updateUser.file !== \"\") {\r\n                    AuthService.updatePhoto(this.state.currentUser.id, this.state.updateUser.file, 3)\r\n                        .then(response => {\r\n                            console.log(\"todo correcto\");\r\n\r\n                        }).catch(error => {\r\n                            console.log(error.message);\r\n                        })\r\n                }\r\n                else {\r\n                    this.onUpdateModal(true);\r\n                    this.onModal(false);\r\n                }\r\n            } else {\r\n                alert(\"Ambas contraseñas no coinciden\");\r\n            }\r\n        }\r\n    }\r\n\r\n    deleteUser() {\r\n\r\n        if (this.state.currentUser.rol == 'S') {\r\n            StudentService.getTeams(this.state.currentUser.id).then(response => {\r\n                this.setState({ StudentTeams: response });\r\n                console.log(this.state.StudentTeams);\r\n                if (this.state.StudentTeams.length > 0) {\r\n                    this.setState({ teamModal: true });\r\n                    this.setState({ deleteModal: false });\r\n                }\r\n\r\n            }).catch(error => {\r\n                console.log(error.message);\r\n            })\r\n        } else {\r\n            AuthService.disableProfile(this.state.currentUser.id).then(response => {\r\n                this.logout();\r\n                window.location.href = '/login';\r\n            }).catch(error => {\r\n                console.log(error.message);\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    render() {\r\n        let media1 = \"\";\r\n        if (this.state.updateUser.file.type !== undefined) {//si hemos previsualizado un archivo\r\n            if (this.state.updateUser.file.type.includes(\"image\"))\r\n                media1 = <img className=\"image\" src={this.state.updateUser.reader} />;\r\n        }\r\n        return (\r\n            <>\r\n                <div className=\"editPerfil-left\">\r\n                    <div className={\"form-button\"}>\r\n                        <Button size={\"sm\"} variant=\"danger\" onClick={() => this.onDeleteModal(true)}>\r\n                            Dar de baja esta cuenta\r\n                        </Button>\r\n                    </div>\r\n                    <img  className={\"img-editprofile-button\"} src=\"/plumaliteratura.png\" alt=\"\"/>\r\n                </div>\r\n                <div className=\"container\">\r\n                    <Card className=\"card-profile\">\r\n                        <Card.Body>\r\n                            <div className={\"row-edit\"}>\r\n                                <div className={\"section-title\"}>\r\n                                    <h2>Modificar Datos</h2>\r\n                                </div>\r\n                            </div>\r\n                            <Form\r\n                                onSubmit={this.handleRegister}\r\n                                ref={c => {\r\n                                    this.form = c;\r\n                                }}\r\n                            >\r\n                                {!this.state.successful && (\r\n                                    <ul className=\"flex-container wrap\">\r\n                                        <li className=\"flex-item\">\r\n                                            <label className=\"form-label\">Nombre</label>\r\n                                            <Input\r\n                                                type=\"text\"\r\n                                                className=\"form-control\"\r\n                                                name=\"username\"\r\n                                                placeholder={this.state.currentUser.username}\r\n                                                value={this.state.updateUser.username}\r\n                                                onChange={this.onChangeUsername}\r\n                                                validations={[required, vusername]}\r\n                                            />\r\n                                        </li>\r\n                                        <li className=\"flex-item\">\r\n                                            <label className=\"form-label\">Apellidos</label>\r\n                                            <Input\r\n                                                type=\"text\"\r\n                                                className=\"form-control\"\r\n                                                name=\"surname\"\r\n                                                placeholder={this.state.currentUser.surname}\r\n                                                value={this.state.updateUser.surname}\r\n                                                onChange={this.onChangeSurname}\r\n                                                validations={[required, vsurname]}\r\n                                            />\r\n                                        </li>\r\n                                        <li className=\"flex-item\">\r\n                                            <label className=\"form-label\">Correo</label>\r\n                                            <Input\r\n                                                type=\"text\"\r\n                                                className=\"form-control\"\r\n                                                name=\"email\"\r\n                                                placeholder={this.state.currentUser.email}\r\n                                                value={this.state.updateUser.email}\r\n                                                onChange={this.onChangeEmail}\r\n                                                validations={[required, email]}\r\n                                            />\r\n                                        </li>\r\n                                        <li className=\"flex-item-file\">\r\n                                            <label className=\"form-label\">Foto de perfil</label>\r\n                                            {media1}\r\n                                            <input type=\"file\" name=\"photo\" onChange={this.onFileChange2} />\r\n                                           \r\n                                        </li>\r\n\r\n                                        <li className=\"flex-item\">\r\n                                            <label className=\"form-label\">Contraseña</label>\r\n                                            <Input\r\n                                                type=\"password\"\r\n                                                className=\"form-control\"\r\n                                                name=\"password\"\r\n                                                placeholder=\"Nueva contraseña\"\r\n                                                value={this.state.updateUser.password}\r\n                                                onChange={this.onChangePassword}\r\n                                                validations={[required, vpassword]}\r\n                                            />\r\n                                        </li>\r\n                                        <li className=\"flex-item\">\r\n                                            <label className=\"form-label\">Confirmar contraseña</label>\r\n                                            <Input\r\n                                                type=\"password\"\r\n                                                className=\"form-control\"\r\n                                                name=\"confirmpassword\"\r\n                                                placeholder=\"Confirmar nueva contraseña\"\r\n                                                value={this.state.updateUser.confirmPassword}\r\n                                                onChange={this.onChangeConfirmPassword}\r\n                                                validations={[required, vconfirmpassword]}\r\n                                            />\r\n                                        </li>\r\n                                    </ul>\r\n\r\n                                )}\r\n\r\n                                {this.state.message && (\r\n                                    <div className=\"form-group\">\r\n                                        <div\r\n                                            className={\r\n                                                this.state.successful\r\n                                                    ? \"alert alert-success\"\r\n                                                    : \"alert alert-danger\"\r\n                                            }\r\n                                            role=\"alert\"\r\n                                        >\r\n                                            {this.state.message}\r\n                                        </div>\r\n                                    </div>\r\n                                )}\r\n                                <CheckButton\r\n                                    style={{ display: \"none\" }}\r\n                                    ref={c => {\r\n                                        this.checkBtn = c;\r\n                                    }}\r\n                                />\r\n                            </Form>\r\n                            <br/>\r\n                            <div className=\"section-card\">\r\n                                <div className=\"form-button\">\r\n                                    <Button onClick={() => this.onModal(true)}>Guardar</Button>\r\n                                </div>\r\n                                <div className=\"form-button\">\r\n                                    <Button href=\"/profile\">Cancelar</Button>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <Modal\r\n                                centered\r\n                                show={this.state.saveModal}\r\n                                onHide={this.state.saveModal}\r\n                            >\r\n                                <Modal.Header>\r\n                                    <h4>Aviso</h4>\r\n                                    <img src=\"exclamation.png\"></img>\r\n                                </Modal.Header>\r\n                                <Modal.Body>\r\n                                    <p>\r\n                                        ¿Esta seguro de aplicar estos cambios?\r\n                                        Deberá iniciar nuevamente sesión de su cuenta\r\n                                    </p>\r\n                                </Modal.Body>\r\n                                <Modal.Footer>\r\n                                    <Button variant=\"primary\" onClick={() => this.editProfile()}>Aceptar</Button>\r\n                                    <Button variant=\"secondary\" onClick={() => this.onModal(false)}>Cancelar</Button>\r\n                                </Modal.Footer>\r\n                            </Modal>\r\n\r\n                            <Modal\r\n                                centered\r\n                                show={this.state.teamModal}\r\n                                onHide={this.state.teamModal}\r\n                            >\r\n                                <Modal.Header>\r\n                                    <Modal.Title>Aviso</Modal.Title>\r\n                                    <img src=\"exclamation.png\"></img>\r\n                                </Modal.Header>\r\n                                <Modal.Body>\r\n                                    <h6>Para poder dar de baja su cuenta, debe darse de baja en los siguientes\r\n                                        equipos</h6>\r\n                                    <ul>\r\n                                        {this.state.StudentTeams.map((team, index) =>\r\n                                            <li>{team.nombreEquipo}</li>\r\n                                        )}\r\n                                    </ul>\r\n                                </Modal.Body>\r\n                                <Modal.Footer>\r\n                                    <Button variant=\"secondary\" onClick={() => this.onTeamModal(false)}>atras</Button>\r\n                                </Modal.Footer>\r\n                            </Modal>\r\n\r\n                            <Modal\r\n                                centered\r\n                                show={this.state.deleteModal}\r\n                                onHide={this.state.deleteModal}\r\n                            >\r\n                                <Modal.Header>\r\n                                    <Modal.Title>\r\n                                        ¿Esta seguro/a?\r\n                                </Modal.Title>\r\n                                    <img src=\"triangle.png\"></img>\r\n                                </Modal.Header>\r\n                                <Modal.Body>\r\n                                    Si en algún momento quieres volver, podrás hacerlo contactando con nuestro equipo de\r\n                                    apoyo o a tu centro de estudio.\r\n                                </Modal.Body>\r\n                                <Modal.Footer>\r\n                                    <Button variant=\"primary\" onClick={() => this.deleteUser()}>aceptar</Button>\r\n                                    <Button variant=\"danger\" onClick={() => this.onDeleteModal(false)}>Cancelar</Button>\r\n                                </Modal.Footer>\r\n                            </Modal>\r\n\r\n                            <Modal\r\n                                centered\r\n                                show={this.state.updateModal}\r\n                                onHide={this.state.updateModal}\r\n                            >\r\n                                <Modal.Header>\r\n                                    <Modal.Title>\r\n                                        Ups...\r\n                                    </Modal.Title>\r\n                                    <img src=\"triangle.png\"></img>\r\n                                </Modal.Header>\r\n                                <Modal.Body>\r\n                                    No hay cambios que modificar\r\n                                </Modal.Body>\r\n                                <Modal.Footer>\r\n                                    <Button variant=\"secondary\" onClick={() => this.onUpdateModal(false)}>atras</Button>\r\n                                </Modal.Footer>\r\n                            </Modal>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n","/*\r\n*  Name_file: Messenger.js\r\n*  Description: Pagina de equipos del estudiante, contiene la vista de todos los equipos \r\n*  que tiene el estudiante\r\n*    \r\n*/\r\nimport React, { Component } from 'react';\r\nimport { Link } from \"react-router-dom\";\r\n\r\n/**Datos del usuario */\r\nimport AuthUser from '../../../services/authenticity/auth-service.js';\r\n\r\n/*Importacion del css*/\r\nimport '../../../styles/Writing.css';\r\nimport '../../../styles/Student.css';\r\n\r\nimport moment from 'moment';\r\n\r\n/**Servicios del estudiante */\r\nimport StudentService from '../../../services/student/student-service.js';\r\n\r\n// Componentes estilos\r\nimport Table from \"react-bootstrap/Table\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport Card from \"react-bootstrap/Card\";\r\nimport Alert from 'react-bootstrap/Alert';\r\n\r\n//Estilos\r\nimport '../../../styles/styleGeneral.css';\r\nimport '../../../styles/styleCard.css';\r\n\r\nclass Messenger extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        //const dataUser = AuthUser.getCurrentUser();\r\n        this.state = {\r\n            dataMessages: [],\r\n            showMessages: false,\r\n            modalDeleteMessage: false,\r\n            // dataTeamStudent: []\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        //Obtiene los mensajes del usuario \r\n        StudentService.getMessages(AuthUser.getCurrentUser().id)\r\n            .then(response => {\r\n                if (response.length > 0) {\r\n                    this.setState({\r\n                        dataMessages: response,\r\n                        showMessages: true,\r\n                        deleteMessage: \"\",\r\n                    });\r\n\r\n                }\r\n\r\n            }).catch(error => {\r\n                console.log(error.message);\r\n            })\r\n\r\n    }\r\n\r\n    deleteMessage = (message) => {\r\n        this.closeModalDeleteMessage();\r\n        var contador = 0;\r\n        var arreglo = this.state.dataMessages;\r\n        arreglo.map((registro) => {\r\n            if (message.id === registro.id) {\r\n                arreglo.splice(contador, 1);\r\n            }\r\n            contador++;\r\n        });\r\n        this.setState({ dataMessages: arreglo });\r\n        if(arreglo.length===0){\r\n            this.setState({ showMessages: false });\r\n        }\r\n        StudentService.deleteMessage(message.id).then(response => {\r\n        }).catch(error => {\r\n            console.log(error.message);\r\n        })\r\n    }\r\n\r\n    askDeleteMessage = (message) => {\r\n        this.setState({\r\n            modalDeleteMessage: true,\r\n            deleteMessage: message\r\n        });\r\n    }\r\n    //Cierra el modal de eliminar fichero\r\n    closeModalDeleteMessage = () => {\r\n        this.setState({ modalDeleteMessage: false });\r\n    };\r\n\r\n    /*Dibuja la pagina  */\r\n    render() {\r\n        const { showMessages } = this.state;\r\n        let formatedDate;\r\n        return (\r\n            <>\r\n                <div className=\"editPerfil-left\">\r\n                    <img  className={\"img-editprofile\"} src=\"/plumaliteratura.png\" alt=\"\"/>\r\n                </div>\r\n                <div className=\"container\">\r\n                    <Card className=\"card-long\">\r\n                        <Card.Body>\r\n                            {showMessages ? (\r\n                                <>\r\n                                     <div className={\"row-edit\"}>\r\n                                        <div className={\"section-title\"}>\r\n                                            <h2>Lista de mensajes</h2>\r\n                                        </div>\r\n                                     </div>\r\n                                    <div className=\"row-edit\">\r\n                                        <Alert variant={\"info\"}>\r\n                                            <img src=\"/message.png\" alt=\"\"/>\r\n                                             mensajeria de  invitaciones para unirte a un equipo.\r\n                                        </Alert>\r\n                                    </div>\r\n                                    <div className=\"row-edit\">\r\n                                        <div className=\"table-margin\">\r\n                                            <Table striped bordered hover responsive>\r\n                                                <thead>\r\n                                                <tr>\r\n                                                    <th>Emisor</th>\r\n                                                    <th>Grupo</th>\r\n                                                    <th>Mensaje</th>\r\n                                                    <th>Fecha</th>\r\n                                                    <th>Hora</th>\r\n                                                    <th>Acciones</th>\r\n                                                    <th></th>\r\n                                                </tr>\r\n                                                </thead>\r\n\r\n                                                <tbody>\r\n                                                {this.state.dataMessages.map(message => {\r\n                                                    return (\r\n                                                        <tr key={message.id}>\r\n                                                            <td>{message.correo}</td>\r\n                                                            <td>{message.nombreGrupo}</td>\r\n                                                            <td><div className=\"message-text\">{message.mensaje}</div></td>\r\n                                                            <td>{formatedDate = moment(message.fecha).format('DD/MM/YYYY')}</td>\r\n                                                            <td>{formatedDate = moment(message.fecha).format('LT')}</td>\r\n                                                            <td>\r\n                                                                <Link to={`/student/message/${message.id}`} >\r\n                                                                    <img  className={\"img-icon\"} src=\"/view.png\" alt=\"\"/>\r\n                                                                    Ver\r\n                                                                </Link>\r\n                                                            </td>\r\n                                                            <td >\r\n                                                                <img\r\n                                                                    className={\"img-icon\"}\r\n                                                                    src=\"/delete.png\"\r\n                                                                    alt=\"\"\r\n                                                                />\r\n                                                                {/* <Link onClick={() => this.askDeleteMessage(message)} >Eliminar</Link> */}\r\n                                                                <Button size={\"sm\"} variant=\"danger\" onClick={() => this.askDeleteMessage(message)}>\r\n                                                                    Eliminar\r\n                                                                </Button>\r\n                                                            </td>\r\n                                                        </tr>\r\n                                                    )\r\n                                                })}\r\n                                                </tbody>\r\n                                            </Table>\r\n                                        </div>\r\n                                     </div>\r\n                                 </>\r\n                            ) : (\r\n                                <div className=\"row-edit\">\r\n                                    <Alert variant={\"danger\"}>\r\n                                        <img src=\"/message.png\" alt=\"\"/>\r\n                                        No hay mensajes que mostrar.\r\n                                    </Alert>\r\n                                </div>\r\n                            )}\r\n                        </Card.Body>\r\n                    </Card>\r\n                </div>\r\n                \r\n\r\n                <Modal show={this.state.modalDeleteMessage}>\r\n                    <Modal.Header>\r\n                        <div><h5>¿Seguro que desea eliminar el mensaje?</h5> </div>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        {/* <FormGroup>\r\n                        </FormGroup> */}\r\n                    </Modal.Body>\r\n\r\n                    <Modal.Footer>\r\n                        <Button onClick={() => this.deleteMessage(this.state.deleteMessage)}>Aceptar</Button>\r\n                        <Button variant=\"danger\" onClick={() => this.closeModalDeleteMessage()}>Cancelar</Button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Messenger;","/*\r\n*  Name_file: Messenger.js\r\n*  Description: Pagina de equipos del estudiante, contiene la vista de todos los equipos \r\n*  que tiene el estudiante\r\n*    \r\n*/\r\n\r\nimport React, { Component } from 'react';\r\nimport { Link } from \"react-router-dom\";\r\n\r\n/**Datos del usuario */\r\nimport AuthUser from '../../../services/authenticity/auth-service.js';\r\n\r\n/*Importacion del css*/\r\nimport '../../../styles/styleGeneral.css';\r\nimport '../../../styles/styleCard.css';\r\n\r\n\r\nimport Modal from 'react-bootstrap/Modal';\r\n\r\n//Componentes css\r\nimport Card from 'react-bootstrap/Card';\r\nimport ListGroup from 'react-bootstrap/ListGroup';\r\nimport Alert from 'react-bootstrap/Alert';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nimport moment from 'moment';\r\n\r\n/**Servicios del estudiante */\r\nimport StudentService from '../../../services/student/student-service.js';\r\n\r\nclass Message extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            message: '',\r\n            team: '',//equipo \r\n            showButtons: false,\r\n            modalAcceptJoinTeam: false,\r\n            modalRefuseJoinTeam: false,\r\n            modalAnswerJoinTeam: false,\r\n            senderHasTeam:false,\r\n            modalSenderHasTeam:false,\r\n            senderHasTeamAsABoss: false,\r\n            idEmisor: -1,\r\n            idBossTeam: -1,\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        //Obtiene el mensaje \r\n        StudentService.getMessage(this.props.match.params.idMessage)\r\n            .then(response => {\r\n                var showButtons = false;\r\n                //si el mensaje es de tipo 0(ya respondio a la solicitud) o 2(no respondio a la solicitud) muestra los botones de \"aceptar\" o \"rechazar\"\r\n                if (response[0].tipo === 0 || response[0].tipo === 2) {\r\n                    showButtons = true;\r\n                }\r\n                this.setState({ message: response[0], showButtons: showButtons, idEmisor: response[0].idEmisor });\r\n                //Obtiene el equipo del mensaje\r\n                StudentService.getTeam(this.state.message.idCreador)\r\n                    .then(response => {\r\n                        if(response.length > 0){//si el mensaje tiene equipo\r\n                            this.setState({ team: response[0], idBossTeam: response[0].idCreador });\r\n\r\n                        // si el líder del equipo es quien envía el mensaje\r\n                        if (response[0].idCreador == this.state.idEmisor)\r\n                        {\r\n                            this.setState({ senderHasTeamAsABoss: true });\r\n                        }\r\n                    }\r\n                    }).catch(error => {\r\n                        console.log(error.message);\r\n                    })\r\n\r\n                //Compruebo si el estudiante emisor del mensaje dispone de equipo\r\n                StudentService.getTeamStudentGroup(response[0].idEmisor,response[0].idGrupo)\r\n                .then(response => {\r\n                    if(response.length !=0){//si el remitente tiene equipo\r\n                        this.setState({ senderHasTeam: true });\r\n                    }\r\n                }).catch(error => {\r\n                    console.log(error.message);\r\n                })\r\n\r\n            }).catch(error => {\r\n                console.log(error.message);\r\n            })\r\n    }\r\n\r\n    askAcceptRequest = () => {\r\n        //Si el mensaje es una solicitud para unirse a un equipo(tipo 2) y (si el estudiante remitente no tiene equipo o si el líder del equipo es quien envía el mensaje)\r\n        if (this.state.message.tipo === 2 && (!this.state.senderHasTeam || this.state.senderHasTeamAsABoss)) {\r\n            this.acceptRequest();\r\n        }\r\n        //Si el mensaje ya fue respondido(tipo 0)\r\n        else if (this.state.message.tipo === 0) {\r\n            this.showModalAnswerJoinTeam();\r\n        }\r\n        else{//en otro caso el estudiante remitente tiene equipo\r\n            this.showModalSenderhasTeam();\r\n            StudentService.editMessage(this.state.message.id)//actualizamos el tipo de mensaje\r\n            .then(response => {\r\n            }).catch(error => {\r\n                console.log(error.message);\r\n            })\r\n        }\r\n    }\r\n\r\n    acceptRequest = () => {\r\n        //si el mensaje es una solicitud de unirse a un equipo\r\n        if (this.state.message.tipo === 2) {\r\n            var idMessage = this.state.message.id;\r\n            var idGroup = this.state.message.idGrupo;\r\n            var idIssuer = this.state.message.idEmisor;\r\n            var idReceiver = this.state.message.idReceptor;\r\n            var idCreatorTeam = this.state.message.idCreador;\r\n            var mensaje = this.state.message.mensaje;\r\n            var date = this.state.message.fecha;\r\n            var active = this.state.message.activo;\r\n            let dataMessage = [{ id: idMessage, idGrupo: idGroup, idEmisor: idIssuer, idReceptor: idReceiver, idCreador: idCreatorTeam, mensaje: mensaje, tipo: 0, fecha: date, activo: active }];\r\n            this.setState({ message: dataMessage[0] });\r\n            var idMember;\r\n            //Obtengo el id del futuro miembro del equipo, identifica si el idEmisor/idReceptor\r\n            //es el futuro miembro\r\n            if (this.state.idBossTeam === dataMessage[0].idEmisor)\r\n                idMember = dataMessage[0].idReceptor;\r\n            else \r\n                idMember = dataMessage[0].idEmisor;\r\n            //estudiante se une al equipo\r\n            StudentService.joinTeam(this.state.team.id, idMember)\r\n                .then(response => {\r\n                    this.showModalAcceptJoinTeam();\r\n                    //modifico el tipo de mensaje \r\n                    StudentService.editMessage(dataMessage[0].id)\r\n                        .then(response => {\r\n\r\n                        }).catch(error => {\r\n                            console.log(error.message);\r\n                        })\r\n                }).catch(error => {\r\n                    console.log(error.message);\r\n                })\r\n        }\r\n        else {\r\n            this.showModalAnswerJoinTeam();\r\n        }\r\n    }\r\n\r\n    refuseRequest = () => {\r\n        if (this.state.message.tipo === 2) {\r\n            this.showModalRefuseJoinTeam();\r\n            StudentService.editMessage(this.state.message.id)\r\n                .then(response => {\r\n                }).catch(error => {\r\n                    console.log(error.message);\r\n                })\r\n        }\r\n        else {\r\n            this.showModalAnswerJoinTeam();\r\n        }\r\n    }\r\n\r\n    showModalAcceptJoinTeam = () => {\r\n        this.setState({\r\n            //   form: dato,\r\n            modalAcceptJoinTeam: true,\r\n        });\r\n        setTimeout(\r\n            () => this.setState({ modalAcceptJoinTeam: false }),\r\n            2000\r\n        );\r\n    };\r\n\r\n    showModalAnswerJoinTeam = () => {\r\n        this.setState({\r\n            //   form: dato,\r\n            modalAnswerJoinTeam: true,\r\n        });\r\n        setTimeout(\r\n            () => this.setState({ modalAnswerJoinTeam: false }),\r\n            2000\r\n        );\r\n    };\r\n\r\n    showModalSenderhasTeam = () => {\r\n        this.setState({\r\n            //   form: dato,\r\n            modalSenderHasTeam : true,\r\n        });\r\n        setTimeout(\r\n            () => this.setState({ modalSenderHasTeam: false }),\r\n            2000\r\n        );\r\n    };\r\n\r\n\r\n    showModalRefuseJoinTeam = () => {\r\n        this.setState({\r\n            modalRefuseJoinTeam: true,\r\n        });\r\n        setTimeout(\r\n            () => this.setState({ modalRefuseJoinTeam: false }),\r\n            2000\r\n        );\r\n    };\r\n\r\n    /*Dibuja la pagina  */\r\n    render() {\r\n        const { message, showButtons } = this.state;\r\n        // let formatedDate;\r\n        return (\r\n            <>\r\n                <div className=\"editPerfil-left\">\r\n                    <img  className={\"img-editprofile\"} src=\"/plumaliteratura.png\" alt=\"\"/>\r\n                </div>\r\n                <div className=\"container\">\r\n                    <Card className=\"card-edit\">\r\n                        <Card.Body >\r\n                            <div className={\"row-edit\"}>\r\n                                <div className={\"section-title\"}>\r\n                                    <h2>Mensaje</h2>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row-edit\">\r\n                                {showButtons ? (\r\n                                    <div class=\"message-inputs\">\r\n                                        <div className={\"row-edit\"}>\r\n                                            <h6>{this.state.message.mensaje}</h6>\r\n                                        </div>\r\n                                        <div className=\"form-select\">\r\n                                            <Button variant=\"outline-primary\"  onClick={() => this.askAcceptRequest()} > Aceptar</Button>\r\n                                        </div>\r\n                                        <div className=\"form-select\">\r\n                                            <div className={\"form-button\"}>\r\n                                                <Button  variant=\"outline-danger\" onClick={() => this.refuseRequest()}> Rechazar</Button>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                ) : (\r\n                                    <div class=\"message-inputs\">\r\n                                        <label className='message-label' > Mensaje </label>\r\n                                        <td><textarea name=\"mensaje\" rows=\"10\" cols=\"70\" value={this.state.message.mensaje} readOnly={true} style={{ resize: \"none\" }} ></textarea></td>\r\n                                    </div>\r\n                                )}\r\n                                <div className=\"form-select\">\r\n                                    <div className={\"form-button-column\"}>\r\n                                        <Button variant=\"secondary\" onClick={() => window.location.href = \"/student/messenger\"}>Volver</Button>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </div>\r\n\r\n                <Modal show={this.state.modalAcceptJoinTeam}>\r\n                    <Modal.Header>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <p> Has aceptado la solicitud</p>\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n\r\n                <Modal show={this.state.modalRefuseJoinTeam}>\r\n                    <Modal.Header>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <p> Has rechazado la solicitud</p>\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n\r\n                <Modal show={this.state.modalAnswerJoinTeam}>\r\n                    <Modal.Header>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <p> Ya has respondido a la solicitud</p>\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n\r\n                <Modal show={this.state.modalSenderHasTeam}>\r\n                    <Modal.Header>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <p> El estudiante ya tiene equipo</p>\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Message;","  /*\r\n*  Name_file :adminService.js\r\n*  Description: contiene las llamadas al servidor de las funcionalidades del Admin\r\n*/\r\nimport axios from '../../axios';\r\nimport authHeader from '../authenticity/auth-header';\r\n\r\n\r\nclass AdminService {\r\n\r\n    \r\n\r\n    getUsers(searchName, searchType) {\r\n        return axios.post(\"/admin/getUsers\", {  clave: searchName, tipo: searchType},{ headers: {\"Authorization\" : `Bearer ${authHeader()}`}\r\n        })\r\n        .then(response => {\r\n            return response.data;\r\n        }).catch(error => {\r\n            console.log(error.message);\r\n            window.location.href = '/500';\r\n        })\r\n\r\n    }\r\n\r\n    getProfile(idUser) {\r\n           \r\n        return axios.get(\"/admin/getProfile\", { params: { idUser: idUser} },{ headers: {\"Authorization\" : `Bearer ${authHeader()}`}})\r\n        .then(response => {\r\n            return response.data;\r\n        }).catch(error => {\r\n            console.log(error.message);\r\n            window.location.href = '/500';\r\n        })\r\n    }\r\n\r\n    getScriptsByStudent(idStudent) {\r\n      \r\n        return axios.get(\"/admin/getScriptsByStudent\", { params: { id:idStudent} },{ headers: {\"Authorization\" : `Bearer ${authHeader()}`}})\r\n        .then(response => {\r\n             return response.data;\r\n        }).catch(error => {\r\n            console.log(error.message);\r\n            window.location.href = '/500';\r\n        })\r\n    }\r\n\r\n    getAllGroups() {\r\n        \r\n        return axios.get(\"/admin/getAllGroups\", { params: {} },{ headers: {\"Authorization\" : `Bearer ${authHeader()}`}})\r\n        .then( response => {\r\n            return response.data;\r\n        }).catch(error => {\r\n            console.log(error.message);\r\n            window.location.href = '/500';\r\n        })\r\n\r\n    }\r\n\r\n    deactivateUser(id){\r\n        return axios.post(\"/admin/deactivateUser/\", { idUser: id  },{ headers: {\"Authorization\" : `Bearer ${authHeader()}`}}).then(response => {\r\n            return response.data;\r\n        }).catch(error => {\r\n            console.log(error.message);\r\n            window.location.href = '/500';\r\n        })\r\n    }\r\n\r\n    deleteUser(id){\r\n        return axios.post(\"/admin/deleteUser/\", { idUser: id  },{ headers: {\"Authorization\" : `Bearer ${authHeader()}`}}).then(response => {\r\n            return response.data;\r\n        }).catch(error => {\r\n            console.log(error.message);\r\n            window.location.href = '/500';\r\n        })\r\n    }\r\n\r\n    getGroupData(idGroup) {\r\n        return axios.get(\"/admin/getGroupData\", { params: { idGroup: idGroup} },{ headers: {\"Authorization\" : `Bearer ${authHeader()}`}})\r\n        .then(response => {\r\n            return response.data;\r\n        }).catch(error => {\r\n            console.log(error.message);\r\n            window.location.href = '/500';\r\n        })\r\n    }\r\n\r\n    renameGroup(id, newName){\r\n        return axios.post(\"/admin/renameGroup\", { id: id, name: newName  },{ headers: {\"Authorization\" : `Bearer ${authHeader()}`}}).then(response => {\r\n            return response.data;\r\n        }).catch(error => {\r\n            console.log(error.message);\r\n            window.location.href = '/500';\r\n        })\r\n    }\r\n\r\n    deactivateGroup(id){\r\n        return axios.post(\"/admin/deactivateGroup\", { id: id },{ headers: {\"Authorization\" : `Bearer ${authHeader()}`}}).then(response => {\r\n            return response.data;\r\n        }).catch(error => {\r\n            console.log(error.message);\r\n            window.location.href = '/500';\r\n        })\r\n    }\r\n\r\n    getStudentsOfGroup(grupo){\r\n        return axios.post(\"/admin/getStudentsOfGroup\", { grupo: grupo },{ headers: {\"Authorization\" : `Bearer ${authHeader()}`}}).then(response => {\r\n            return response.data;\r\n        }).catch(error => {\r\n            console.log(error.message);\r\n            window.location.href = '/500';\r\n        })\r\n    }\r\n\r\n    getGroupsOfTeacher(id){\r\n        return axios.get(\"/admin/getGroupsOfTeacher\", { params:{ idEstudiante: id }},{ headers: {\"Authorization\" : `Bearer ${authHeader()}`}}).then(response => {\r\n            return response.data;\r\n        }).catch(error => {\r\n            console.log(error.message);\r\n            window.location.href = '/500';\r\n        })\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default new AdminService;   ","/*\r\n*  Name_file :GroupList.js\r\n*  Description: Pagina que lista todos los grupos  \r\n*  que tiene el grupo seleccionado por el profesor  \r\n*/\r\nimport React, { Component } from 'react';\r\nimport { Link} from \"react-router-dom\";\r\nimport adminService from '../../../services/admin/adminService';\r\nimport AuthUser from '../../../services/authenticity/auth-service.js';\r\n\r\n/**Estilos CSS*/\r\nimport '../../../styles/styleGeneral.css';\r\nimport '../../../styles/styleCard.css';\r\nimport '../../../styles/Challenge.css';\r\n\r\n/**Estilos Boostrap*/\r\nimport Card from 'react-bootstrap/Card';\r\nimport Button  from 'react-bootstrap/Button';\r\nimport ListGroup from 'react-bootstrap/ListGroup';\r\nimport Alert from 'react-bootstrap/Alert';\r\n\r\n\r\nclass GroupList extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            data: [],\r\n            filteredData: [],\r\n            searchKey: '',\r\n            searchType: 'nombre',\r\n\r\n        };\r\n    }\r\n\r\n\r\n    /*Se hacen peticiones al servidor para que me devuelva todos los grupos del profesor*/\r\n    peticionGet = () => {\r\n        adminService.getAllGroups().then(response => {\r\n            this.setState({ data: response });\r\n            this.filterData();\r\n        }).catch(error => {\r\n            console.log(error.message);\r\n        })\r\n    }\r\n\r\n    /*Si vuelvo a la pagina de login, comprueba si el usuario ya inicio sesion anteriomente\r\n   si es el caso lo redirige a la home segun su rol*/\r\n    componentDidMount() {      \r\n        const dataUser = AuthUser.getCurrentUser();\r\n        this.setState({\r\n            currentUserId: dataUser.id\r\n        });\r\n        this.setState({\r\n            currentUserRole: dataUser.rol\r\n        });\r\n        this.peticionGet();\r\n    }\r\n\r\n    /*Lo que escribamos en el input lo guarda en el state async para que lo veamos en tiempo real */\r\n    handleChangeSearch = async e => {\r\n        await this.setState({\r\n                [e.target.name]: e.target.value\r\n        });\r\n        this.filterData();\r\n    }\r\n\r\n    //Filtra los datos de los escritos buscados para solo buscar en la base de datos una vez\r\n    filterData = () =>{\r\n        let auxArray = [];\r\n        this.state.filteredData = [];\r\n        for(let i = 0; i < this.state.data.length; i++){\r\n                if((new RegExp(this.state.searchKey, 'i' ).test(this.state.data[i].nombre)) )\r\n                {\r\n                    auxArray.push(this.state.data[i]);\r\n                }\r\n        }\r\n        this.setState({ filteredData: auxArray });\r\n    }\r\n\r\n    \r\n    /*Dibuja la pagina  */\r\n    render() {\r\n\r\n        let cartel =<></>;\r\n        let alert = <div className={\"row-edit\"}>\r\n                        <Alert variant={\"info\"}>\r\n                            <img src=\"/info.png\" alt=\"\"/>\r\n                            Espacio para gestionar los grupos activos.\r\n                        </Alert>\r\n                    </div>;\r\n        let tabla =  <ul className={\"flex-items-row-start wrap\"} >\r\n\r\n            {this.state.filteredData.map((group) => \r\n                (\r\n                    <li className={\"items-row\"}>\r\n                        <ul className={\"container-column-list wrap\"}>\r\n                            <li className={\"flex-item-list\"}>\r\n                                <img src=\"/team_black.png\" alt=\"\"/>\r\n                            </li>\r\n                            <li className={\"flex-item-list\"}>\r\n                                {group.nombre}\r\n                            </li>\r\n                            <li className={\"flex-item-list\"}>\r\n                                <Link key={group.id} to={`/admin/viewGroup/${group.id}`}>\r\n                                    <Button text='Ver Grupo'> Ver grupo </Button>\r\n                                </Link>\r\n                            </li>\r\n                        </ul>\r\n                        <hr/>\r\n                    </li>\r\n                )\r\n            )}\r\n        </ul>;\r\n        if(this.state.currentUserRole ===\"T\")\r\n        {\r\n            alert= <></>\r\n            tabla = <ul className={\"flex-items-row-start wrap\"} >\r\n\r\n                        {this.state.filteredData.map((group) => \r\n                            (\r\n                                <li className={\"items-row\"}>\r\n                                    <ul className={\"container-column-list wrap\"}>\r\n                                        <li className={\"flex-item-list\"}>\r\n                                            <img src=\"/team_black.png\" alt=\"\"/>\r\n                                        </li>\r\n                                        <li className={\"flex-item-list\"}>\r\n                                            {group.nombre}\r\n                                        </li>\r\n                                        <li className={\"flex-item-list\"}>\r\n                                            <Link key={group.id} to={`/teacher/viewGroup/${group.id}`}>\r\n                                                <Button text='Ver Grupo'> Ver grupo </Button>\r\n                                            </Link>\r\n                                        </li>\r\n                                    </ul>\r\n                                    <hr/>\r\n                                </li>\r\n                            )\r\n                        )}\r\n                    </ul>;\r\n        }\r\n        if(this.state.filteredData.length === 0)\r\n        {\r\n            cartel = <div className={\"row-edit\"}>\r\n                        <Alert variant={\"danger\"}>\r\n                            <h5> hay resultados para la búsqueda realizada.</h5>\r\n                        </Alert>\r\n\r\n                    </div>;\r\n            tabla = <div></div>;\r\n        }\r\n\r\n        return (\r\n\r\n            <div className=\"container\">\r\n                <Card className=\"card-long\">\r\n                    <Card.Body>\r\n                        <div className={\"row-edit\"}>\r\n                            <div className={\"section-title\"}>\r\n                                <h2>Gestionar grupos</h2>\r\n                            </div>\r\n                        </div>\r\n                        <br/>\r\n                        {alert}\r\n                        <div className={\"row-edit\"}>\r\n                            <ul className={\"container-column-list\"}>\r\n                                <li className={\"items-row\"}>\r\n                                    <label className={\"form-label\"}>Buscar grupo </label>\r\n                                </li>\r\n                                <li className={\"items-row\"}>\r\n                                    <input type=\"text\" name=\"searchKey\" onChange={this.handleChangeSearch} />\r\n                                </li>\r\n                                <li className={\"items-row\"}>\r\n                                    <img src=\"../../search.png\" alt=\"\"/>\r\n                                </li>\r\n                            </ul>\r\n                        </div>\r\n                        <div className={\"row-edit\"}>\r\n                                {cartel}\r\n                                {tabla}\r\n                        </div>\r\n                    </Card.Body>\r\n                </Card>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default GroupList;","import axios from '../../axios';\r\nimport authHeader from '../authenticity/auth-header';\r\n\r\nclass TeacherService {\r\n\r\n    //-------------------------------------------------GROUP------------------------------------------------------------------//\r\n\r\n    /*Obtiene los  grupos del profesor */\r\n    getComments(idWriting){\r\n        return axios.get(\"/teacher/getComments\", { params: { idWriting: idWriting } },\r\n        {\r\n            headers: { \"Authorization\": `Bearer ${authHeader()}` }\r\n        }).then(response => {\r\n            return response;\r\n        }).catch(error => {\r\n            console.log(error.message);\r\n            window.location.href = '/500';\r\n        })\r\n     }\r\n    getGroups(idTeacher) {\r\n        return axios.post(\"/teacher/groups\", { idTeacher: idTeacher }, {\r\n            headers: { \"Authorization\": `Bearer ${authHeader()}` }\r\n        }).then(response => {\r\n            return response.data;\r\n        }).catch(error => {\r\n            console.log(error.message);\r\n            window.location.href = '/500';\r\n        })\r\n    }\r\n\r\n    getProfile(idStudent) {\r\n\r\n        return axios.get(\"/teacher/getProfile\", { params: { idUser: idStudent } }, { headers: { \"Authorization\": `Bearer ${authHeader()}` } })\r\n            .then(response => {\r\n                return response.data;\r\n            }).catch(error => {\r\n                console.log(error.message);\r\n                window.location.href = '/500';\r\n            })\r\n    }\r\n\r\n    getGroupsStudent(idStudent) {\r\n\r\n        return axios.get(\"/teacher/getStudentGroups\", { params: { idEstudiante: idStudent } }, { headers: { \"Authorization\": `Bearer ${authHeader()}` } })\r\n            .then(response => {\r\n                return response.data;\r\n            }).catch(error => {\r\n                console.log(error.message);\r\n                window.location.href = '/500';\r\n            })\r\n\r\n    }\r\n\r\n    showGroupRequest() {\r\n\r\n        return axios.get(\"/teacher/showGroupRequest\", { headers: { \"Authorization\": `Bearer ${authHeader()}` } })\r\n            .then(response => {\r\n                return response.data;\r\n            }).catch(error => {\r\n                console.log(error.message);\r\n                window.location.href = '/500';\r\n            })\r\n\r\n    }\r\n    acceptGroupRequest(idGroup, idStudent) {\r\n\r\n        return axios.post(\"/teacher/acceptGroupRequest\", {id: idGroup, idEstudiante: idStudent } , { headers: { \"Authorization\": `Bearer ${authHeader()}` } })\r\n            .then(response => {\r\n                return response.data;\r\n            }).catch(error => {\r\n                console.log(error.message);\r\n                window.location.href = '/500';\r\n            })\r\n\r\n    }\r\n\r\n    getScriptsByStudent(idStudent) {\r\n\r\n        return axios.get(\"/teacher/getScriptsByStudent\", { params: { id: idStudent } }, { headers: { \"Authorization\": `Bearer ${authHeader()}` } })\r\n            .then(response => {\r\n                return response.data;\r\n            }).catch(error => {\r\n                console.log(error.message);\r\n                window.location.href = '/500';\r\n            })\r\n    }\r\n\r\n\r\n    searchStudent(searchStudent, searchType) {\r\n\r\n        return axios.post(\"/teacher/searchStudent\", { searchStudent: searchStudent, type: searchType }, {\r\n            headers: { \"Authorization\": `Bearer ${authHeader()}` }\r\n        })\r\n            .then(response => {\r\n                return response.data;\r\n            }).catch(error => {\r\n                console.log(error.message);\r\n                window.location.href = '/500';\r\n            })\r\n\r\n    }\r\n\r\n    searchApplicant(searchStudent, searchType) {\r\n\r\n        return axios.post(\"/teacher/searchApplicant\", { clave: searchStudent, tipo :searchType},{ headers: {\"Authorization\" : `Bearer ${authHeader()}`}\r\n        })\r\n        .then(response => {\r\n            return response.data;\r\n        }).catch(error => {\r\n            console.log(error.message);\r\n            window.location.href = '/500';\r\n        })\r\n\r\n    }\r\n\r\n    acceptApplicantStudent(idApplicant) {\r\n\r\n      \r\n        return axios.get(\"/user/acceptApplicant\", { params: { idUser: idApplicant } }, { headers: {\"Authorization\" : `Bearer ${authHeader()}`}})\r\n          .then(response => {\r\n             return response.data;\r\n       }).catch(error => {\r\n           console.log(error.message);\r\n           window.location.href = '/500';\r\n       })\r\n\r\n    }\r\n\r\n    inviteToGroup(idGroup, idStudent) {\r\n\r\n        return axios.post(\"/teacher/inviteStudentToGroup\", { grupo: idGroup, idEstudiante: idStudent }, { headers: { \"Authorization\": `Bearer ${authHeader()}` } })\r\n            .then(response => {\r\n                return response.data;\r\n            }).catch(error => {\r\n                console.log(error.message);\r\n                window.location.href = '/500';\r\n            })\r\n\r\n    }\r\n\r\n    kickFromGroup(idGroup, idStudent) {\r\n\r\n        return axios.post(\"/teacher/kickStudentFromGroup\", { grupo: idGroup, idEstudiante: idStudent }, { headers: { \"Authorization\": `Bearer ${authHeader()}` } })\r\n            .then(response => {\r\n                return response.data;\r\n            }).catch(error => {\r\n                console.log(error.message);\r\n                window.location.href = '/500';\r\n            })\r\n    }\r\n\r\n    createGroup(id, newName){\r\n        return axios.post(\"/teacher/createGroup\", { idTeacher: id, nombre: newName  },{ headers: {\"Authorization\" : `Bearer ${authHeader()}`}}).then(response => {\r\n            return response.data;\r\n        }).catch(error => {\r\n            console.log(error.message);\r\n            window.location.href = '/500';\r\n        })\r\n    }\r\n\r\n    getTeamsOfGroup(grupo){\r\n        return axios.post(\"/teacher/getTeamsOfGroup\", { grupo: grupo },{ headers: {\"Authorization\" : `Bearer ${authHeader()}`}}).then(response => {\r\n            return response.data;\r\n        }).catch(error => {\r\n            console.log(error.message);\r\n            window.location.href = '/500';\r\n        })\r\n    }\r\n\r\n\r\n    //-------------------------------------------------CHALLENGE------------------------------------------------------------------//\r\n\r\n    /*Obtiene todas las categorias de los desafios */\r\n    getCategories() {\r\n        return axios.get(\"/teacher/getCategories\", {\r\n            headers: { \"Authorization\": `Bearer ${authHeader()}` }\r\n        }).then(response => {\r\n            return response.data;\r\n        }).catch(error => {\r\n            console.log(error.message);\r\n            window.location.href = '/500';\r\n        })\r\n    }\r\n\r\n    /*Crea desafio del profesor */\r\n    createChallenge(idGroup, title, description, type, category, qualification, endDate) {\r\n        return axios.post(\"/teacher/createChallenge\", { idGroup: idGroup, title: title, description: description, type: type, category: category, qualification: qualification, endDate: endDate }, {\r\n            headers: { \"Authorization\": `Bearer ${authHeader()}` }\r\n        }).then(response => {\r\n            return response;\r\n        }).catch(error => {\r\n            console.log(error.message);\r\n            window.location.href = '/500';\r\n        })\r\n    }\r\n\r\n    /*Edita el desafio del profesor*/\r\n    editChallenge(idChallenge, idGroup, title, description, type, category, qualification, endDate) {\r\n        return axios.post(\"/teacher/editChallenge\", { idChallenge: idChallenge, idGroup: idGroup, title: title, description: description, type: type, category: category, qualification: qualification, endDate: endDate }, {\r\n            headers: { \"Authorization\": `Bearer ${authHeader()}` }\r\n        }).then(response => {\r\n            return response.data;\r\n        }).catch(error => {\r\n            console.log(error.message);\r\n            window.location.href = '/500';\r\n        })\r\n    }\r\n\r\n    /*Elimina desafio*/\r\n    deleteChallenge(idChallenge) {\r\n        return axios.post(\"/teacher/deleteChallenge\", { idChallenge: idChallenge }, {\r\n            headers: { \"Authorization\": `Bearer ${authHeader()}` }\r\n        }).then(response => {\r\n            return response.data;\r\n        }).catch(error => {\r\n            console.log(error.message);\r\n            window.location.href = '/500';\r\n        })\r\n    }\r\n\r\n    /*Obtiene el desafio del profesor segun su grupo*/\r\n    getChallenge(idChallenge) {\r\n\r\n        return axios.get(\"/teacher/getChallenge\", { params: { idChallenge: idChallenge } }, {\r\n            headers: { \"Authorization\": `Bearer ${authHeader()}` }\r\n        }).then(response => {\r\n            return response.data;\r\n        }).catch(error => {\r\n            console.log(error.message);\r\n            window.location.href = '/500';\r\n        })\r\n    }\r\n\r\n    /*Obtiene los desafios del profesor segun su grupo*/\r\n    getChallenges(idGroup) {\r\n        return axios.get(\"/teacher/Challenges\", { params: { idGroup: idGroup } }, {\r\n            headers: { \"Authorization\": `Bearer ${authHeader()}` }\r\n        }).then(response => {\r\n            return response.data;\r\n        }).catch(error => {\r\n            console.log(error.message);\r\n            window.location.href = '/500';\r\n        })\r\n    }\r\n\r\n    //-------------------------------------------------MULTIMEDIA CHALLENGE------------------------------------------------------------------//\r\n    /*Obtiene multimedia del desafio del profesor */\r\n    getMultimediaChallenge(idChallenge) {\r\n        return axios.get(\"/teacher/getMultimediaChallenge\", { params: { idChallenge: idChallenge } },\r\n            {\r\n                headers: { \"Authorization\": `Bearer ${authHeader()}` }\r\n            }).then(response => {\r\n                return response;\r\n            }).catch(error => {\r\n                console.log(error.message);\r\n                window.location.href = '/500';\r\n            })\r\n    }\r\n\r\n    /*Envia los archivos multimedia del profesor*/\r\n    sendMultimediaChallenge(imgCollection, idTeacher, idChallenge, type) {\r\n        const form = new FormData();\r\n        for (const key of Object.keys(imgCollection)) {\r\n            form.append('imgCollection', imgCollection[key])\r\n        }\r\n\r\n        form.append(\"idTeacher\", idTeacher);\r\n        form.append(\"idChallenge\", idChallenge);\r\n\r\n        return axios.post(\"/teacher/sendMultimediaChallenge\", form, { params: { id: idTeacher, idFolder: idChallenge, type: 1 } }, {\r\n            headers: { \"Authorization\": `Bearer ${authHeader()}` }\r\n        }).then(response => {\r\n            return response.data;\r\n        }).catch(error => {\r\n            console.log(error.message);\r\n            window.location.href = '/500';\r\n        })\r\n    }\r\n\r\n    /*Elimina los archivos multimedia del profesor*/\r\n    deleteMultimedia(idMultimedia, path) {\r\n        return axios.post(\"/teacher/deleteFile\", { idMultimedia: idMultimedia, path: path }, {\r\n            headers: { \"Authorization\": `Bearer ${authHeader()}` }\r\n        }).then(response => {\r\n            return response.data;\r\n        }).catch(error => {\r\n            console.log(error.message);\r\n            window.location.href = '/500';\r\n        })\r\n    }\r\n\r\n    //-------------------------------------------------WRITING------------------------------------------------------------------//\r\n    /*Obtiene escritos de estudiantes */\r\n    getWritingsStudent(idGroup, idChallenge) {\r\n        return axios.get(\"/teacher/getWritingsStudent\", { params: { idGroup: idGroup, idChallenge: idChallenge } },\r\n            {\r\n                headers: { \"Authorization\": `Bearer ${authHeader()}` }\r\n            }).then(response => {\r\n                return response;\r\n            }).catch(error => {\r\n                console.log(error.message);\r\n            })\r\n    }\r\n\r\n    /*Obtiene el escrito del estudiante */\r\n    getWriting(idWriting) {\r\n        return axios.get(\"/teacher/getWriting\", { params: { idWriting: idWriting } },\r\n            {\r\n                headers: { \"Authorization\": `Bearer ${authHeader()}` }\r\n            }).then(response => {\r\n                return response;\r\n            }).catch(error => {\r\n                console.log(error.message);\r\n                window.location.href = '/500';\r\n            })\r\n    }\r\n\r\n    /*Obtiene escritos colaborativos */\r\n    getWritingsTeam(idGroup, idChallenge) {\r\n        return axios.get(\"teacher/getWritingsTeam\", { params: { idGroup: idGroup,idChallenge:idChallenge } }, {\r\n            headers: { \"Authorization\": `Bearer ${authHeader()}` }\r\n        }).then(response => {\r\n            return response.data;\r\n        }).catch(error => {\r\n            console.log(error.message);\r\n            window.location.href = '/500';\r\n        })\r\n    }\r\n\r\n    /*Edito el escrito del estudiante */\r\n    editWriting(idWriting, idGroup, idChallenge, idWriter, title, escrito, score, commentary, type, finish) {\r\n        return axios.post(\"/teacher/editWriting\", { idWriting: idWriting, idGroup: idGroup, idChallenge: idChallenge, idWriter: idWriter, title: title, escrito: escrito, score: score, commentary: commentary, type: type, finish: finish }, {\r\n            headers: { \"Authorization\": `Bearer ${authHeader()}` }\r\n        }).then(response => {\r\n            return response.data;\r\n        }).catch(error => {\r\n            console.log(error.message);\r\n            window.location.href = '/500';\r\n        })\r\n    }\r\n\r\n    //-------------------------------------------------MULTIMEDIA WRITING------------------------------------------------------------------//\r\n    /*Obtiene multimedia del escrito del estudiante */\r\n    getMultimediaWriting(idChallenge, idWriter) {\r\n        return axios.get(\"/teacher/getMultimediaWriting\", { params: { idChallenge: idChallenge, idWriter: idWriter } },\r\n            {\r\n                headers: { \"Authorization\": `Bearer ${authHeader()}` }\r\n            }).then(response => {\r\n                return response;\r\n            }).catch(error => {\r\n                console.log(error.message);\r\n                window.location.href = '/500';\r\n            })\r\n    }\r\n\r\n    //-------------------------------------------------TEAM------------------------------------------------------------------//\r\n\r\n    /*Obtiene equipo del estudiante correspondiente a un grupo en concreto*/\r\n    getTeamStudentGroup(idStudent, idGroup) {\r\n        return axios.get(\"/teacher/getTeamStudentGroup\", { params: { idStudent: idStudent, idGroup: idGroup } }, { headers: { \"Authorization\": `Bearer ${authHeader()}` } })\r\n            .then(response => {\r\n                return response.data;\r\n            }).catch(error => {\r\n                console.log(error.message);\r\n                window.location.href = '/500';\r\n            })\r\n    }\r\n\r\n    getTeam(idTeam) {\r\n        return axios.get(\"/teacher/getTeam\", { params: { idTeam: idTeam } }, { headers: { \"Authorization\": `Bearer ${authHeader()}` } })\r\n            .then(response => {\r\n                return response.data;\r\n            }).catch(error => {\r\n                console.log(error.message);\r\n                window.location.href = '/500';\r\n            })\r\n    }\r\n\r\n    // Obtiene los integrantes de un equipo\r\n    getMembersTeam(idTeam) {\r\n        return axios.get(\"/teacher/getMembersTeam\", { params: { idTeam: idTeam } }, { headers: { \"Authorization\": `Bearer ${authHeader()}` } })\r\n            .then(response => {\r\n                return response.data;\r\n            }).catch(error => {\r\n                console.log(error.message);\r\n                window.location.href = '/500';\r\n            })\r\n    }\r\n\r\n    getScriptsByTeam(idStudent) {\r\n\r\n        return axios.get(\"/teacher/getScriptsByTeam\", { params: { id: idStudent } }, { headers: { \"Authorization\": `Bearer ${authHeader()}` } })\r\n            .then(response => {\r\n                return response.data;\r\n            }).catch(error => {\r\n                console.log(error.message);\r\n                window.location.href = '/500';\r\n            })\r\n    }\r\n\r\n    //-----------------------------------------COLLECTIONS-----------------------------------------//\r\n\r\n    // Crea una colección\r\n    createCollection(nombreColeccion, idProfesor, idGrupo)\r\n    {\r\n        return axios.post(\"/teacher/createCollection\", { nombreColeccion: nombreColeccion, idProfesor: idProfesor, idGrupo: idGrupo }, {\r\n            headers: { \"Authorization\": `Bearer ${authHeader()}` }\r\n            }).then(response => {\r\n                return response.data;\r\n            }).catch(error => {\r\n                console.log(error.message);\r\n                window.location.href = '/500';\r\n            })\r\n    }\r\n\r\n    // Añadir un desafío a una colección\r\n    addChallengeToCollection(idColeccion, idDesafio)\r\n    {\r\n        return axios.post(\"/teacher/addChallengeToCollection\", { idColeccion: idColeccion, idDesafio: idDesafio }, {\r\n            headers: { \"Authorization\": `Bearer ${authHeader()}` }\r\n            }).then(response => {\r\n                return response.data;\r\n            }).catch(error => {\r\n                console.log(error.message);\r\n                window.location.href = '/500';\r\n            })\r\n    }\r\n\r\n    // Obtiene las colecciones de un profesor, pudiendo filtrar por nombre de grupo o nombre de colección\r\n    getCollections(idProfesor, filtroBusqueda)\r\n    {\r\n        return axios.get(\"/teacher/getCollections\", { params: { idProfesor: idProfesor, filtroBusqueda: filtroBusqueda } },\r\n            {\r\n                headers: { \"Authorization\": `Bearer ${authHeader()}` }\r\n            }).then(response => {\r\n                return response.data;\r\n            }).catch(error => {\r\n                console.log(error.message);\r\n                window.location.href = '/500';\r\n            })\r\n    }\r\n\r\n    // Obtiene una colección\r\n    getCollection(idCollection)\r\n    {\r\n        return axios.get(\"/teacher/getCollection\", { params: { idCollection: idCollection } },\r\n            {\r\n                headers: { \"Authorization\": `Bearer ${authHeader()}` }\r\n            }).then(response => {\r\n                return response.data;\r\n            }).catch(error => {\r\n                console.log(error.message);\r\n                window.location.href = '/500';\r\n            })\r\n    }\r\n\r\n    // Obtiene los desafíos de una colección\r\n    getChallengesFromCollection(idCollection)\r\n    {\r\n        return axios.get(\"/teacher/getChallengesFromCollection\", { params: { idCollection: idCollection } },\r\n            {\r\n                headers: { \"Authorization\": `Bearer ${authHeader()}` }\r\n            }).then(response => {\r\n                return response.data;\r\n            }).catch(error => {\r\n                console.log(error.message);\r\n                window.location.href = '/500';\r\n            })\r\n    }\r\n\r\n    // Obtiene los desafíos que no están en una determinada colección\r\n    getChallengesNotInCollection(idGroup, idCollection)\r\n    {\r\n        return axios.get(\"/teacher/getChallengesNotInCollection\", { params: { idGroup: idGroup, idCollection: idCollection } },\r\n        {\r\n            headers: { \"Authorization\": `Bearer ${authHeader()}` }\r\n        }).then(response => {\r\n            return response.data;\r\n        }).catch(error => {\r\n            console.log(error.message);\r\n            window.location.href = '/500';\r\n        })\r\n    }\r\n\r\n    // Elimina un desafío de una colección\r\n    deleteChallengeFromCollection(idColeccion, idDesafio)\r\n    {\r\n        return axios.post(\"/teacher/deleteChallengeFromCollection\", { idCollection: idColeccion, idChallenge: idDesafio }, {\r\n            headers: { \"Authorization\": `Bearer ${authHeader()}` }\r\n            }).then(response => {\r\n                return response.data;\r\n            }).catch(error => {\r\n                console.log(error.message);\r\n                window.location.href = '/500';\r\n            })\r\n    }\r\n\r\n    // Elimina una colección\r\n    deleteCollection(idColeccion)\r\n    {\r\n        return axios.post(\"/teacher/deleteCollection\", { idCollection: idColeccion }, {\r\n            headers: { \"Authorization\": `Bearer ${authHeader()}` }\r\n            }).then(response => {\r\n                return response.data;\r\n            }).catch(error => {\r\n                console.log(error.message);\r\n                window.location.href = '/500';\r\n            })\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\n\r\nexport default new TeacherService;\r\n","/*\r\n*  Name_file :GroupInfo.js\r\n*  Description: Contiene los datos de un grupo segun un ID dado.\r\n*    \r\n*/\r\n\r\nimport React, { Component } from 'react';\r\nimport { Link} from \"react-router-dom\";\r\nimport AuthUser from '../../../services/authenticity/auth-service.js';\r\nimport AdminService from '../../../services/admin/adminService.js';\r\n\r\n/**Estilos Boostrap*/\r\nimport Card from 'react-bootstrap/Card';\r\nimport Button  from 'react-bootstrap/Button';\r\n\r\n\r\n/**Estilos CSS*/\r\nimport '../../../styles/styleGeneral.css';\r\n\r\nclass GroupInfo extends Component {\r\n    \r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            \r\n            data: [],\r\n            currentUserId: '',\r\n            currentUserRole: '',\r\n            teacher: [],\r\n            newName:\"\"\r\n    \r\n        };\r\n    }\r\n\r\n    /*Se hacen peticiones al servidor para que me devuelva los datos del estudiante*/\r\n    peticionGet() {\r\n        AdminService.getGroupData(this.props.idGroup).then(response => {\r\n                this.setState({data:response});\r\n                this.peticionGetTeacher();\r\n                this.props.handler();\r\n                \r\n        }).catch(error => {\r\n            console.log(error.message);\r\n        })\r\n    }\r\n\r\n    /*Se hacen peticiones al servidor para que me devuelva lso datos del prodesor del grupo*/\r\n    peticionGetTeacher = () => {\r\n        AdminService.getProfile(this.state.data.idprofesor ).then(response => {\r\n            this.setState({ teacher: response });\r\n        }).catch(error => {\r\n            console.log(error.message);\r\n        })\r\n    }\r\n\r\n    componentDidMount() {\r\n        const dataUser = AuthUser.getCurrentUser();\r\n        this.setState({\r\n            currentUserId: dataUser.id\r\n        });\r\n        this.setState({\r\n            currentUserRole: dataUser.rol\r\n        });\r\n        this.peticionGet();\r\n    }\r\n\r\n    /*Lo que escribamos en el input lo guarda en el state async para que lo veamos en tiempo real */\r\n    handleChangeRename = async e => {\r\n        await this.setState({\r\n                [e.target.name]: e.target.value\r\n        });\r\n    }\r\n\r\n    /*Se hacen peticiones al servidor renombrar grupo*/\r\n    rename = () => {\r\n        AdminService.renameGroup(this.state.data.id, this.state.newName ).then(response => {\r\n            this.peticionGet();\r\n        }).catch(error => {\r\n            console.log(error.message);\r\n        })\r\n    }\r\n\r\n    /*Se hacen peticiones al servidor para desactivar al grupo*/\r\n    deactivateGroup = () => {\r\n        AdminService.deactivateGroup(this.state.data.id ).then(response => {\r\n            window.location.href = '/homeadmin';\r\n        }).catch(error => {\r\n            console.log(error.message);\r\n        })\r\n    }\r\n\r\n    /*Dibuja la pagina  */\r\n    render() {\r\n\r\n        let campoCambiarNombre = <div className={\"form-select\"}>\r\n                                        <label className={\"form-label\"}>Cambiar nombre</label>\r\n                                        <input type=\"text\" name=\"newName\" onChange={this.handleChangeRename} />\r\n                                    </div>;\r\n        \r\n        let botonCambiarNombre = <Button size={\"sm\"} text='Cambiar' onClick={() => this.rename()}>Cambiar</Button>;\r\n\r\n        if(this.state.newName === \"\")\r\n        {\r\n            botonCambiarNombre= <Button size={\"sm\"} disabled text='Cambiar' onClick={() => this.rename()}>Cambiar</Button>;\r\n        }\r\n\r\n        let botonDesactivar =  <Button size={\"sm\"} text='Desactivar grupo' onClick={() => this.deactivateGroup()}>Desactivar grupo</Button>;\r\n\r\n        let fotoSource = \"\";\r\n        let imagenProfe = <></>\r\n        let textoProfe = <></>\r\n        let name = <></>\r\n\r\n        if(this.state.teacher != undefined)\r\n        {\r\n            textoProfe =\r\n                <Button size ={\"sm\"} href={`/admin/users/viewProfile/${this.state.teacher.id}`} text='Ver Perfil'>\r\n                    Ver perfil\r\n                </Button>;\r\n\r\n            name = <label className={\"form-label\"}>{this.state.teacher.nombre} {this.state.teacher.apellidos}</label>;\r\n\r\n            if(this.state.currentUserRole === \"T\"){\r\n                textoProfe = <h4>{this.state.teacher.nombre} {this.state.teacher.apellidos}</h4>;\r\n\r\n            }\r\n            if(this.state.teacher.foto != undefined)\r\n            {\r\n                fotoSource = this.state.teacher.ruta;\r\n                imagenProfe = <img src={fotoSource} alt=\"\" style={{ width: '4rem', borderRadius: '80%' }}></img>\r\n            }\r\n        }\r\n\r\n        if(this.state.currentUserRole != \"A\")\r\n        {\r\n            campoCambiarNombre = <div></div>;\r\n            botonCambiarNombre = <div></div>;\r\n            botonDesactivar = <div></div>;\r\n        }\r\n        if(this.state.currentUserRole === \"T\" && this.state.currentUserId === this.state.data.idprofesor)\r\n        {\r\n            campoCambiarNombre = <div className={\"form-select\"}>\r\n                                    <label className={\"form-label\"}>Cambiar nombre</label>\r\n                                    <input type=\"text\" name=\"newName\" onChange={this.handleChangeRename} />\r\n                                </div>;\r\n        \r\n            botonCambiarNombre =  <Button text='Cambiar' onClick={() => this.rename()}>Cambiar</Button>;\r\n        }\r\n\r\n\r\n     \r\n        return (\r\n\r\n                <Card className=\"card-long\">\r\n                    <Card.Body>\r\n                        <div className={\"row-edit\"}>\r\n                            <h3> Grupo {this.state.data.nombre}</h3>\r\n                                {campoCambiarNombre}\r\n                                <div className={\"form-button-team\"}>\r\n                                    {botonCambiarNombre}\r\n                                </div>\r\n                                <div className={\"form-button-team\"}>\r\n                                    {botonDesactivar}\r\n                                </div>\r\n                        </div>\r\n                        <hr/>\r\n                        <div className={\"row-edit\"}>\r\n                            <div className={\"form-button-team\"}>\r\n                                <label className={\"form-label\"} htmlFor=\"\">\r\n                                    <h5> Creado por</h5>\r\n                                </label>\r\n                            </div>\r\n\r\n                            {imagenProfe}\r\n                            <div className={\"form-button-team\"}>\r\n                                {name}\r\n                            </div>\r\n                            <div className={\"form-button-team\"}>\r\n                                {textoProfe}\r\n                            </div>\r\n                        </div>\r\n                    </Card.Body>\r\n                </Card>\r\n\r\n        );\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default GroupInfo;","/*\r\n*  Name_file :MyGroups.js\r\n*  Description: Pagina que lista todos los grupos que ha creado el profesor \r\n*/\r\nimport React, { Component } from 'react';\r\nimport { Link} from \"react-router-dom\";\r\nimport adminService from '../../../services/admin/adminService';\r\nimport teacherService from '../../../services/teacher/teacherService';\r\nimport authHeader from '../../../services/authenticity/auth-header.js';\r\nimport AuthUser from '../../../services/authenticity/auth-service.js';\r\nimport '../../../styles/styleGeneral.css';\r\nimport '../../../styles/styleCard.css';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Button  from 'react-bootstrap/Button';\r\nimport ListGroup from 'react-bootstrap/ListGroup';\r\n\r\n\r\nclass MyGroups extends Component {\r\n\r\n    state = {\r\n        data: [],\r\n        filteredData: [],\r\n        searchKey: '',\r\n        searchType: 'nombre',\r\n\r\n    }\r\n\r\n    /*Se hacen peticiones al servidor para que me devuelva todos los grupos del profesor*/\r\n    peticionGetTeacher = (idTeacher) => {\r\n        adminService.getGroupsOfTeacher(idTeacher).then(response => {\r\n            this.setState({ data: response });\r\n            this.filterData();\r\n        }).catch(error => {\r\n            console.log(error.message);\r\n        })\r\n    }\r\n\r\n    /*Si vuelvo a la pagina de login, comprueba si el usuario ya inicio sesion anteriomente\r\n   si es el caso lo redirige a la home segun su rol*/\r\n    componentDidMount() {      \r\n        const dataUser = AuthUser.getCurrentUser();\r\n        this.setState({\r\n            currentUserId: dataUser.id\r\n        });\r\n        this.setState({\r\n            currentUserRole: dataUser.rol\r\n        });\r\n\r\n        this.peticionGetTeacher(dataUser.id);\r\n    }\r\n\r\n    /*Lo que escribamos en el input lo guarda en el state async para que lo veamos en tiempo real */\r\n    handleChangeSearch = async e => {\r\n        await this.setState({\r\n                [e.target.name]: e.target.value\r\n        });\r\n        this.filterData();\r\n    }\r\n\r\n    //Filtra los datos de los escritos buscados para solo buscar en la base de datos una vez\r\n    filterData = () =>{\r\n        let auxArray = [];\r\n        this.state.filteredData = [];\r\n        for(let i = 0; i < this.state.data.length; i++){\r\n                if((new RegExp(this.state.searchKey, 'i' ).test(this.state.data[i].nombre)) )\r\n                {\r\n                    auxArray.push(this.state.data[i]);\r\n                }\r\n        }\r\n        this.setState({ filteredData: auxArray });\r\n    }\r\n\r\n    \r\n    /*Dibuja la pagina  */\r\n    render() {\r\n\r\n        let cartel =<div> </div>;\r\n        let tabla = <ListGroup variant=\"flush\">\r\n\r\n            {this.state.filteredData.map((group) => \r\n                (\r\n                    <React.Fragment>\r\n                    <ListGroup.Item>\r\n                        {group.nombre}\r\n                        <Link key={group.id} to={`/teacher/viewGroup/${group.id}`}><button text='Ver Grupo'> Ver grupo </button></Link>\r\n                    </ListGroup.Item>\r\n                    </React.Fragment>\r\n                )\r\n            )}\r\n        </ListGroup>;\r\n        if(this.state.filteredData.length === 0)\r\n        {\r\n            cartel = <nav>\r\n                        <h2>No hay resultados para la búsqueda realizada.</h2>\r\n                    </nav>;\r\n            tabla = <div></div>;\r\n        }\r\n\r\n        return (\r\n\r\n            <div className=\"container\">\r\n             <Card className=\"card-edit\">\r\n                    <Card.Body>\r\n                    \r\n            <h1>Mis Grupos:</h1>\r\n            \r\n            \r\n            <div>\r\n                <label>Buscar grupo: </label>\r\n                <br />\r\n                <input type=\"text\" name=\"searchKey\" onChange={this.handleChangeSearch} />\r\n            </div>\r\n\r\n\r\n                 <div>\r\n\r\n                        {cartel}\r\n\r\n\r\n                        {tabla}\r\n\r\n\r\n                    </div>\r\n                    </Card.Body>\r\n                </Card>\r\n            </div>\r\n          \r\n           \r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default MyGroups;","/*\r\n*  Name_file :GroupStudents.js\r\n*  Description: Contiene una lista de estudiantes de un grupo. Vive dentro de Group.js\r\n*    \r\n*/\r\nimport React, { Component } from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport AdminService from '../../../services/admin/adminService.js';\r\nimport AuthUser from '../../../services/authenticity/auth-service.js';\r\nimport '../../../styles/styleGeneral.css';\r\nimport '../../../styles/styleCard.css';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Alert from 'react-bootstrap/Alert';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\n\r\nclass GroupStudents extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            data: [],\r\n            filteredData: [],\r\n            currentUserId: '',\r\n            currentUserRole: '',\r\n            searchStudent: '',\r\n            searchType: 'nombre',\r\n            showListStudents: false,//muestra lista estudiantes\r\n        };\r\n    }\r\n\r\n    //Filtra los datos de los estudiantes buscados para solo buscar en la base de datos una vez\r\n    filterData = () => {\r\n        let auxArray = [];\r\n        //this.state.filteredData = [];\r\n        for (let i = 0; i < this.state.data.length; i++) {\r\n            if (this.state.searchType == \"email\") {\r\n                if (new RegExp(this.state.searchStudent, 'i').test(this.state.data[i].correo)) {\r\n                    auxArray.push(this.state.data[i]);\r\n                }\r\n            }\r\n            else {\r\n                if ((new RegExp(this.state.searchStudent, 'i').test(this.state.data[i].nombre)) || (new RegExp(this.state.searchStudent, 'i').test(this.state.data[i].apellidos))) {\r\n                    auxArray.push(this.state.data[i]);\r\n                }\r\n            }\r\n        }\r\n        this.setState({ filteredData: auxArray });\r\n    }\r\n\r\n    /*Lo que escribamos en el input lo guarda en el state async para que lo veamos en tiempo real */\r\n    handleChangeSearch = async e => {\r\n        await this.setState({\r\n            [e.target.name]: e.target.value\r\n        });\r\n        this.filterData();\r\n    }\r\n\r\n    /*Lo que escribamos en el input lo guarda en el state async para que lo veamos en tiempo real */\r\n    handleChangeSearchType = async e => {\r\n        await this.setState({\r\n            [e.target.name]: e.target.value\r\n        });\r\n        this.filterData();\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n        const dataUser = AuthUser.getCurrentUser();\r\n        this.setState({\r\n            currentUserId: dataUser.id\r\n        });\r\n        this.setState({\r\n            currentUserRole: dataUser.rol\r\n        });\r\n\r\n        AdminService.getStudentsOfGroup(this.props.idGroup).then(response => {\r\n\r\n            if (response.length > 0) {\r\n                this.setState({ data: response });\r\n                this.setState({ filteredData: response });\r\n                this.setState({ showListStudents: true });\r\n                this.filterData();\r\n            }\r\n\r\n        })\r\n    }\r\n\r\n    /*Dibuja la pagina  */\r\n    render() {\r\n\r\n        let cartel = <> </>;\r\n        let tabla = <ul className={\"flex-items-row-start wrap\"}>\r\n            {this.state.filteredData.map((student) =>\r\n            (\r\n                <li className={\"items-row\"}>\r\n                    <div className={\"form-items-row\"}>\r\n                        <img src={(student.ruta !=\"\") ? (student.ruta) : \"/chicaliteratura.png\"}\r\n                            alt=\"\"\r\n                            style={{ width: '40%', borderRadius: '80%' }} >\r\n                        </img>\r\n                    </div>\r\n\r\n                    <div className={\"form-items-row\"}>\r\n                        {student.nombre} {student.apellidos}\r\n                    </div>\r\n                    <div className={\"form-items-row\"}>\r\n                        {student.correo}\r\n                    </div>\r\n                    <div className={\"form-items-row\"}>\r\n                        <Link key={student.id} to={`/admin/users/viewProfile/${student.id}`}>\r\n                            <Button variant={\"outline-secondary\"} text='Ver Perfil'> Ver perfil </Button>\r\n                        </Link>\r\n                    </div>\r\n                    <hr/>\r\n                </li>\r\n            )\r\n            )}\r\n        </ul>\r\n\r\n        if (this.state.currentUserRole === \"T\") {\r\n            tabla = <ul className={\"flex-items-row-start wrap\"}>\r\n                {this.state.filteredData.map((student) =>\r\n                (\r\n                    <li className={\"items-row\"}>\r\n                        <ul className={\"container-column-list wrap\"}>\r\n                            <li className={\"flex-item-list\"}>\r\n                                <img src={(student.ruta == \"\") ? \"/chicaliteratura.png\" : (student.ruta) }\r\n                                    alt=\"\"\r\n                                    style={{ width: '60px', borderRadius: '80%', margin: \"0 1rem 0 1rem\" }}\r\n                                >\r\n                                </img>\r\n                            </li>\r\n                            <li className={\"flex-item-list\"}>\r\n                                {student.nombre}\r\n                            </li>\r\n                            <li className={\"flex-item-list\"}>\r\n                                {student.apellidos}\r\n                            </li>\r\n                            <li className={\"flex-item-list\"}>\r\n                                {student.correo}\r\n                            </li>\r\n                            <li className={\"flex-item-list\"}>\r\n                                <Link key={student.id} to={`/teacher/students/viewProfile/${student.id}`}>\r\n                                    <Button size={\"sm\"} variant={\"outline-secondary\"} text='Ver Perfil'> Ver perfil </Button>\r\n                                </Link>\r\n                            </li>\r\n                        </ul>\r\n                        <hr></hr>\r\n                    </li>\r\n                )\r\n                )}\r\n            </ul>\r\n        }\r\n        if (this.state.filteredData.length === 0) {\r\n            cartel = <div className=\"row-edit\">\r\n                                <Alert variant={\"danger\"}>\r\n                                    No hay estudiantes con esos parámetros.\r\n                                </Alert>\r\n                    </div>\r\n            tabla = <></>;\r\n        }\r\n\r\n        const { showListStudents } = this.state;\r\n        return (\r\n\r\n            <Card className=\"card-long\">\r\n                <Card.Body>\r\n                    {showListStudents ? (\r\n                        <div>\r\n                            <ul className={\"container-column-list\"}>\r\n                                <li className={\"items-row\"}>\r\n                                    <label className={\"form-label\"}>Buscar estudiante</label>\r\n                                </li>\r\n                                <li className={\"items-row\"}>\r\n                                    <input type=\"text\" name=\"searchStudent\" onChange={this.handleChangeSearch} />\r\n                                </li>\r\n                                <li className={\"items-row\"}>\r\n                                    <img src=\"../../search.png\" alt=\"\" />\r\n                                </li>\r\n                                <li className={\"items-row\"}>\r\n                                    <label className={\"form-label\"}>Escoja cómo buscar</label>\r\n                                </li>\r\n                                <li className={\"items-row\"}>\r\n                                    <select name=\"searchType\" id=\"searchType\" onChange={this.handleChangeSearchType}>\r\n                                        <option value=\"nombre\">Nombre</option>\r\n                                        <option value=\"email\">Email</option>\r\n                                    </select>\r\n                                </li>\r\n                            </ul>\r\n                            <br />\r\n                            {cartel}\r\n                            {tabla}\r\n                        </div>\r\n                    ) : (\r\n                        <div className=\"row-edit\">\r\n                                    <Alert variant={\"danger\"}>\r\n                                        No hay estudiantes con esos parámetros.\r\n                                    </Alert>\r\n                        </div>\r\n                    )}\r\n                </Card.Body>\r\n            </Card>\r\n        );\r\n    }\r\n}\r\n\r\nexport default GroupStudents;","/*\r\n*  Name_file :Group.js\r\n*  Description: Contiene los datos de un grupo segun un ID dado.\r\n*    \r\n*/\r\nimport React, { Component } from 'react';\r\nimport AdminService from '../../../services/admin/adminService.js';\r\nimport Datos from \"./GroupInfo\";\r\nimport Estudiantes from \"./GroupStudents\";\r\n\r\n/** Estilos CSS*/\r\nimport '../../../styles/styleGeneral.css';\r\n\r\n/**Estilos importados*/\r\nimport Card from 'react-bootstrap/Card';\r\nimport { Tab, Tabs, TabList, TabPanel } from 'react-tabs';\r\nimport 'react-tabs/style/react-tabs.css';\r\n\r\nclass Group extends Component {\r\n    \r\n        constructor(props){\r\n            super(props);\r\n    \r\n            this.state = {\r\n                ventana: 1,\r\n                data: [],\r\n            }\r\n            this.handler = this.handler.bind(this)\r\n        }\r\n    \r\n        //Permite refrescar la página desde abajo\r\n        handler() {\r\n           this.peticionGet();\r\n          }\r\n    \r\n        cambiaVentana = (opcion) =>{\r\n            this.setState({ventana : opcion});\r\n        }\r\n\r\n        /*Se hacen peticiones al servidor para que me devuelva los datos del estudiante*/\r\n    peticionGet() {\r\n       \r\n        AdminService.getGroupData(this.props.match.params.idGroup).then(response => {\r\n              this.setState({data:response});\r\n        }).catch(error => {\r\n            console.log(error.message);\r\n        })\r\n    }\r\n\r\n    componentDidMount() {\r\n         this.peticionGet();\r\n       }\r\n\r\n    /*Dibuja la pagina  */\r\n    render() {\r\n        \r\n       let idGroup = this.props.match.params.idGroup;\r\n\r\n       let tabs =   <TabList>\r\n                        <Tab>DATOS</Tab>\r\n                        <Tab>ESTUDIANTES</Tab>\r\n                    </TabList>;\r\n\r\n        let secondTab = <Estudiantes key={idGroup} idGroup={idGroup}/>;\r\n\r\n\r\n        return (\r\n           <div className=\"container\">\r\n               <Card className={\"card-long\"}>\r\n                   <Card.Body>\r\n                       <div className={\"row-edit\"}>\r\n                            <div className={\"section-title\"}>\r\n                                <h2> Información del grupo </h2>\r\n                            </div>\r\n                       </div>\r\n                       <Tabs>\r\n                           {tabs}\r\n                           <TabPanel>\r\n                               <Datos key={idGroup} idGroup={idGroup} handler ={this.handler}/>\r\n                           </TabPanel>\r\n                           <TabPanel>\r\n                               {secondTab}\r\n                           </TabPanel>\r\n                       </Tabs>\r\n                   </Card.Body>\r\n               </Card>\r\n           </div>\r\n        );\r\n\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default Group;","/*\r\n*  Name_file :CreateGroup.js\r\n*  Description: Pagina que sirve para crear grupos nuevos\r\n*/\r\n\r\nimport React, { Component } from 'react';\r\nimport teacherService from '../../../services/teacher/teacherService';\r\nimport AuthUser from '../../../services/authenticity/auth-service.js';\r\n\r\n/**Estilos CSS*/\r\nimport '../../../styles/styleGeneral.css';\r\nimport '../../../styles/styleCard.css';\r\n\r\n/**Estilos*/\r\nimport Card from 'react-bootstrap/Card';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport Alert from 'react-bootstrap/Alert';\r\n\r\nclass CreateGroup extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.onModal = this.onModal.bind(this);\r\n\r\n        this.state = {\r\n            data: [],\r\n            onModal: false,\r\n            modalCreateGroup: false,\r\n            filteredData: [],\r\n            groupName: '',\r\n            currentUserId: '',\r\n            currentUserRole: '',\r\n\r\n        };\r\n    }\r\n\r\n    /*Si vuelvo a la pagina de login, comprueba si el usuario ya inicio sesion anteriomente\r\n   si es el caso lo redirige a la home segun su rol*/\r\n    componentDidMount() {\r\n\r\n        const dataUser = AuthUser.getCurrentUser();\r\n        this.setState({\r\n            currentUserId: dataUser.id\r\n        });\r\n        this.setState({\r\n            currentUserRole: dataUser.rol\r\n        });\r\n\r\n    }\r\n\r\n    /*Lo que escribamos en el input lo guarda en el state async para que lo veamos en tiempo real */\r\n    handleChangeName = async e => {\r\n        await this.setState({\r\n            [e.target.name]: e.target.value\r\n        });\r\n    }\r\n\r\n    /*Crea un grupo*/\r\n    createGroup = () => {\r\n        this.onModalCreateGroup(false);\r\n        this.onModalCreateGroup(false);\r\n        teacherService.createGroup(this.state.currentUserId, this.state.groupName).then(response => {\r\n            console.log(response);\r\n            window.location.href = '/teacher/createGroup';\r\n        }).catch(error => {\r\n            console.log(error.message);\r\n        })\r\n    }\r\n\r\n    /*Cambia estado del modal*/\r\n    onModal(modal) {\r\n        this.setState({\r\n            onModal: modal\r\n        });\r\n    }\r\n\r\n    //Comprueba si el nombre del grupo es bacio\r\n    checkCreateGroup() {\r\n        //Comprueba si el campo está vacío\r\n        if (this.state.groupName == '')\r\n            this.onModal(true);\r\n        else\r\n            this.onModalCreateGroup(true);\r\n    }\r\n\r\n    //modal de crearGrupo\r\n    onModalCreateGroup = (modal) => {\r\n        this.setState({\r\n            modalCreateGroup: modal,\r\n        });\r\n    };\r\n\r\n    /*Dibuja la pagina  */\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <Card className=\"card-long\">\r\n                    <Card.Body>\r\n                        <div className={\"row-edit\"}>\r\n                            <div className={\"section-title\"}>\r\n                                <h2>Crear un grupo</h2>\r\n                            </div>\r\n                            <br />\r\n                            <Alert variant={\"info\"}>\r\n                                <img src=\"/info.png\" alt=\"\" />\r\n                                 Introduzca el nombre del nuevo grupo que desea crear.\r\n                            </Alert>\r\n                        </div>\r\n                        <div className={\"row-edit\"}>\r\n                            <label className=\"form-label\">Nombre del grupo nuevo : </label>\r\n                            <input placeholder=\"Ingrese un nombre\"\r\n                                className=\"form-control\" type=\"text\"\r\n                                name=\"groupName\"\r\n                                onChange={this.handleChangeName}\r\n                            />\r\n                            <br />\r\n                            <Button variant=\"primary\" onClick={() => this.checkCreateGroup()}>Aceptar</Button>\r\n                        </div>\r\n                    </Card.Body>\r\n                </Card>\r\n                <Modal\r\n                    centered\r\n                    show={this.state.onModal}\r\n                    onHide={this.state.onModal}\r\n                >\r\n                    <Modal.Header>\r\n                        <Modal.Title>\r\n                            Ups...\r\n                                </Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        No ha ingresado un nombre\r\n                            </Modal.Body>\r\n                    <Modal.Footer>\r\n                        <Button variant=\"secondary\" onClick={() => this.onModal(false)}>Atras</Button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n\r\n                <Modal show={this.state.modalCreateGroup}>\r\n                    <Modal.Header>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <p> ¿Está seguro de crear el grupo?</p>\r\n                    </Modal.Body>\r\n\r\n                    <Modal.Footer>\r\n                        <Button onClick={() => this.createGroup()}>Aceptar</Button>\r\n                        <Button variant=\"danger\" onClick={() => this.onModalCreateGroup(false)}>Cancelar</Button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CreateGroup;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport '../../styles/styleSidebar.css';\r\nimport '../../styles/styleGeneral.css';\r\n\r\n\r\nexport default function Sidebar(props) {\r\n\r\n  let {links,url} = props;\r\n  return(\r\n     <div className=\"sidebar-left\">\r\n           <ul className=\"container-column-list\">\r\n                   {links.map((link)=>(\r\n                       <li className=\"item-column-list wrap\">\r\n                           <Link key={link.id} to={`${url}${link.path}`}>\r\n                               <img className={\"img-icon\"} src={link.icon}/>\r\n                               {link.name}\r\n                           </Link>\r\n                       </li>\r\n                   ))}\r\n           </ul>\r\n     </div>\r\n ); \r\n}","/**\r\n *  Name_file :dates.js\r\n *  Description: Componente sobre selecion de fechas\r\n */\r\n\r\n\r\nimport React from 'react';\r\n\r\n/**Importaciones del time*/\r\nimport Grid from '@material-ui/core/Grid';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport {\r\n    MuiPickersUtilsProvider,\r\n    KeyboardTimePicker,\r\n    KeyboardDatePicker,\r\n} from '@material-ui/pickers';\r\n\r\n/**Estilos CSS*/\r\nimport '../../styles/styleGeneral.css';\r\n\r\nconst Dates = ({ handleDateChange,param}) => {\r\n    return (\r\n        <ul className={\"flex-row\"}>\r\n            <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                <Grid container justify=\"space-around\">\r\n                  <li className={\"flex-item-form\"}>\r\n                    <KeyboardDatePicker\r\n                        disableToolbar\r\n                        variant=\"inline\"\r\n                        format=\"dd/MM/yyyy\"\r\n                        margin=\"normal\"\r\n                        id=\"date-picker-inline\"\r\n                       // label=\"Date picker inline\"\r\n                        value={param}\r\n                        onChange={handleDateChange}\r\n                        KeyboardButtonProps={{\r\n                            'aria-label': 'change date',\r\n                        }}\r\n                    />\r\n                  </li>\r\n                  <li className={\"flex-item-form\"}>\r\n                    <KeyboardTimePicker\r\n                        margin=\"normal\"\r\n                        id=\"time-picker\"\r\n                       // label=\"Time picker\"\r\n                        value={param}\r\n                        onChange={handleDateChange}\r\n                        KeyboardButtonProps={{\r\n                            'aria-label': 'change time',\r\n                        }}\r\n                    />\r\n                  </li>\r\n                </Grid>\r\n            </MuiPickersUtilsProvider>\r\n        </ul>\r\n    )\r\n};\r\n\r\nexport default Dates;","/*\r\n*  Name_file :CreateChallenge.js\r\n*  Description: Pagina de crear desafio\r\n*/\r\nimport React, { Component } from 'react';\r\n\r\n/**Importaciones del editor **/\r\nimport { Editor } from \"react-draft-wysiwyg\";\r\nimport { EditorState, convertToRaw } from \"draft-js\";\r\nimport \"react-draft-wysiwyg/dist/react-draft-wysiwyg.css\";\r\nimport draftToHtml from \"draftjs-to-html\";\r\n\r\n/**Importacion del calendario */\r\nimport Dates from '../../dates/dates.js';\r\n\r\n/**Datos de Sesion del usuario */\r\nimport AuthUser from '../../../services/authenticity/auth-service.js';\r\n\r\n/**Servicios del profesor */\r\nimport TeacherService from '../../../services/teacher/teacherService';\r\n\r\n/**Importaciones del css*/\r\nimport '../../../styles/Challenge.css';\r\nimport '../../../styles/styleGeneral.css';\r\nimport '../../../styles/styleCard.css';\r\nimport '../../../styles/Writing.css';\r\n\r\n/**Componentes de estilo Bootstrap*/\r\nimport Card from 'react-bootstrap/Card';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport Button from 'react-bootstrap/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport ListGroup from 'react-bootstrap/ListGroup';\r\nimport Alert from 'react-bootstrap/Alert';\r\n\r\nclass CreateChallenge extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.onFileChange = this.onFileChange.bind(this);\r\n        // this.onDeleteMultimedia = this.onDeleteMultimedia.bind(this);\r\n        this.state = {\r\n            imgCollection: [],\r\n            // imgNamesCollection: [],\r\n            editorState: EditorState.createEmpty(),\r\n            data: [],\r\n            categories: [],\r\n            formErrors: {\r\n                title: '',\r\n                description: '',\r\n                date: '',\r\n                idCategory: '',\r\n                type: '',\r\n            },\r\n            form: {\r\n                title: '',\r\n                description: '',\r\n                type: '1', //individual o colaborativo\r\n                typeQualification: '1',//tipo de calificación numerica o conceptual\r\n                idCategory: '1',\r\n                date: new Date(), //fecha\r\n            }\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        /*Obtiene todas las categorias de los desafios */\r\n        TeacherService.getCategories().then(response => {\r\n            this.setState({ categories: response });\r\n        }).catch(error => {\r\n            console.log(error.message);\r\n        })\r\n    }\r\n\r\n    //Envio del desafio al server\r\n    createChallenge = () => {\r\n        TeacherService.createChallenge(this.props.match.params.idGroup, this.state.form.title, this.state.form.description,\r\n            this.state.form.type, this.state.form.idCategory, this.state.form.typeQualification, this.state.form.date)\r\n            .then(response => {\r\n                const idChallenge = response.data;\r\n                if (this.state.imgCollection.length > 0) {\r\n                    TeacherService.sendMultimediaChallenge(this.state.imgCollection, AuthUser.getCurrentUser().id, idChallenge, this.state.form.type)\r\n                        .then(response => {\r\n                            window.location.href = '/teacher/groups';\r\n                        })\r\n                        .catch(error => {\r\n                            console.log(error.message);\r\n                        });\r\n                }\r\n                else {\r\n                    window.location.href = '/teacher/groups';\r\n                }\r\n            })\r\n            .catch(error => {\r\n                console.log(error.message);\r\n            });\r\n\r\n\r\n    };\r\n\r\n    /*Lo que escribamos en el input lo guarda en el state async para que lo veamos en tiempo real */\r\n    handleChange = async e => {\r\n        await this.setState({\r\n            form: {\r\n                ...this.state.form,\r\n                [e.target.name]: e.target.value\r\n            }\r\n        });\r\n        console.log(this.state.form);//visualizar consola navegador lo que escribimos en el input\r\n    }\r\n\r\n    handleErrors = e => {\r\n        e.preventDefault();\r\n        const { name, value } = e.target;\r\n        let formErrors = { ...this.state.formErrors };\r\n        switch (name) {\r\n            case \"title\":\r\n                formErrors.title =\r\n                    value.length < 1 ? \"Campo obligatorio requerido\" : \"\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        this.setState({\r\n            formErrors,\r\n            form: {\r\n                ...this.state.form,\r\n                [name]: value\r\n            }\r\n        });\r\n    }\r\n\r\n    onEditorStateChange = (editorState) => {\r\n        this.setState({\r\n            editorState,\r\n        });\r\n    };\r\n\r\n    changeView = () => {\r\n        window.location.href = \"/teacher/groups\";\r\n    }\r\n\r\n    onModal(modal) {\r\n        this.setState({\r\n            stateModal: modal\r\n        });\r\n    }\r\n\r\n    handleDateChange = (date) => {\r\n\r\n        var dateActual = new Date();\r\n        let formErrors = { ...this.state.formErrors };\r\n        //Si la fecha actual es mayor que la fecha seleccionada\r\n        if (dateActual > date) {\r\n            formErrors.date = \"Campo fecha no válida\";\r\n        }\r\n        else {\r\n            formErrors.date = \"\";\r\n        }\r\n        this.setState({\r\n            formErrors,\r\n            form: {\r\n                ...this.state.form,\r\n                date: date\r\n            }\r\n        });\r\n    }\r\n\r\n    qualificationSelection = event => {\r\n        this.setState({\r\n            form: {\r\n                ...this.state.form,\r\n                typeQualification: event.target.value\r\n            }\r\n        });\r\n    };\r\n\r\n    handleSelectionChange = event => {\r\n        this.setState({\r\n            form: {\r\n                ...this.state.form,\r\n                type: event.target.value\r\n            }\r\n        });\r\n    };\r\n\r\n    handleSelectionCategory = event => {\r\n        this.setState({\r\n            form: {\r\n                ...this.state.form,\r\n                idCategory: event.target.value\r\n            }\r\n        });\r\n    };\r\n\r\n    onFileChange(e) {\r\n        this.setState({ imgCollection: e.target.files });\r\n    }\r\n\r\n    //Desactiva boton\r\n    disabledButton = () => {\r\n        var dateActual = new Date();\r\n        if (this.state.form.title.length === 0 || dateActual > this.state.form.date || this.state.form.description.length === 0) {\r\n            return true;//desactivar\r\n        }\r\n        else\r\n            return false;\r\n    };\r\n\r\n    /*Dibuja la pagina */\r\n    render() {\r\n        const { formErrors } = this.state;\r\n        const { editorState } = this.state;\r\n        return (\r\n            <div className=\"container\">\r\n                <Card className=\"card-edit\">\r\n                    <Card.Body>\r\n                        <div className={\"row-edit\"}>\r\n                            <div className={\"section-title\"}>\r\n                                <h2>Crear desafío</h2>\r\n                            </div>\r\n                        </div>\r\n                        <div className={\"row-edit\"}>\r\n                            <label className='form-label'>Titulo</label>\r\n                            <input\r\n                                className={formErrors.title.length > 0 ? \"error\" : \"form-control\"}\r\n                                type=\"text\"\r\n                                name=\"title\"\r\n                                placeholder=\"Escribe el título\"\r\n                                onChange={this.handleErrors}\r\n                            />\r\n                        \r\n                            {formErrors.title.length > 0 && (\r\n                                    <span className=\"alert-login\">{formErrors.title}</span>\r\n                                )}\r\n                        </div>\r\n\r\n                        <div className=\"row-edit\">\r\n                            <label className='form-label'>Descripción</label>\r\n                            <Editor\r\n\r\n                                editorState={editorState}\r\n                                // toolbarClassName=\"toolbarClassName\"\r\n                                // wrapperClassName=\"demo-wrapper\"\r\n                                // editorClassName=\"border-edit\"\r\n                                wrapperClassName=\"wrapperClassName1\"\r\n                                editorClassName=\"editorClassName1\"\r\n                                toolbarClassName=\"toolbarClassName1\"\r\n                                onEditorStateChange={this.onEditorStateChange}\r\n                                onChange={\r\n                                    (event, editor) => {\r\n                                        let formErrors = { ...this.state.formErrors };\r\n                                        if(!editorState.getCurrentContent().hasText()){\r\n                                            formErrors.description=\"Campo texto vacío\";\r\n                                        }\r\n                                        else{\r\n                                            formErrors.description=\"\";\r\n                                        }\r\n                                        this.setState({\r\n                                            formErrors,\r\n                                            form: {\r\n                                                ...this.state.form,\r\n                                                description: draftToHtml(convertToRaw(editorState.getCurrentContent()))\r\n                                            }\r\n                                        });\r\n                                    }\r\n                                }\r\n                                className={formErrors.description.length > 0 ? \"error\" : \"form-control\"}\r\n                            />\r\n                             {formErrors.description.length > 0 && (\r\n                                <span className=\"alert-login\">{formErrors.description}</span>\r\n                            )}        \r\n                        </div>\r\n\r\n                        <ul className={\"flex-row\"}>\r\n                            <li className={\"flex-item-form\"}>\r\n                                <div className=\"form-select\">\r\n                                    <label className='form-label'> Tipo de Desafío </label>\r\n                                    <select onChange={this.handleSelectionChange}>\r\n                                        {/* <option value=\"\" selected disabled hidden> Seleccionar</option> */}\r\n                                        <option value=\"1\"> Individual</option>\r\n                                        <option value=\"2\"> Colaborativo</option>\r\n                                    </select>\r\n                                </div>\r\n                            </li>\r\n                            <li className={\"flex-item-form\"}>\r\n                                <div className=\"form-select\">\r\n                                    <label className='form-label'>Categoría</label>\r\n                                    <select onChange={this.handleSelectionCategory} >\r\n                                        {/* <option value=\"\" selected disabled hidden > Seleccionar</option> */}\r\n                                        {this.state.categories.map(elemento => (\r\n                                            <option key={elemento.id} value={elemento.id} > { elemento.nombre} </option>\r\n                                        ))}\r\n                                    </select>\r\n                                </div>\r\n                            </li>\r\n                            <li className={\"flex-item-form\"}>\r\n                                <div className=\"form-select\">\r\n                                    <label className='form-label'> Tipo de Calificación </label>\r\n                                    <select onChange={this.qualificationSelection}>\r\n                                        {/* <option value=\"\" selected disabled hidden>Seleccionar</option> */}\r\n                                        <option value=\"1\"> Numerica</option>\r\n                                        <option value=\"2\"> Conceptual</option>\r\n                                    </select>\r\n                                </div>\r\n                            </li>\r\n                        </ul>\r\n                        <div className=\"row-edit\">\r\n                            <label className='form-label'>Selecciona la fecha y hora final </label>\r\n                        </div>\r\n                        <div className=\"form-select\">\r\n                            <Dates\r\n                                className={formErrors.date.length > 0 ? \"error\" : \"form-control\"}\r\n                                handleDateChange={this.handleDateChange}\r\n                                param={this.state.form.date}\r\n                            />\r\n\r\n                            {formErrors.date.length > 0 && (\r\n                                <span className=\"alert-login\">{formErrors.date}</span>\r\n                            )}\r\n\r\n                        </div>\r\n                        <div class=\"row-edit\">\r\n                            <div className=\"form-select\">\r\n                                <label className='form-label'>Puedes agregar un fichero multimedia si lo deseas (imagen,video o audio): </label>\r\n                                <input type=\"file\" name=\"imgCollection\" onChange={this.onFileChange} multiple />\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"row-edit\">\r\n                            <div className=\"form-button\">\r\n                                <Button onClick={() => this.onModal(true)} disabled={this.disabledButton()}>Enviar</Button>\r\n                            </div>\r\n                            <div className=\"form-button\">\r\n                                <Button onClick={() => this.changeView()}>Cancelar</Button>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <Modal size=\"lg\" aria-labelledby=\"contained-modal-title-vcenter\" centered show={this.state.stateModal} onHide={this.state.stateModal}>\r\n                            <Modal.Header >\r\n                                <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                                    Aviso\r\n                                </Modal.Title>\r\n                            </Modal.Header>\r\n                            <Modal.Body>\r\n                                ¿Esta seguro de enviar este desafío?\r\n                            </Modal.Body>\r\n                            <Modal.Footer>\r\n                                <Button onClick={() => this.createChallenge()}>Si</Button>\r\n                                <Button onClick={() => this.onModal(false)}>No</Button>\r\n                            </Modal.Footer>\r\n                        </Modal>\r\n                    </Card.Body>\r\n                </Card>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CreateChallenge;","/*\r\n*  Name_file :EditChallenge.js\r\n*  Description: Pagina de editar desafio\r\n*/\r\nimport React, { Component } from 'react';\r\n\r\n/*Importaciones del editor */\r\nimport { Editor } from \"react-draft-wysiwyg\";\r\nimport { EditorState, convertToRaw, convertFromRaw } from \"draft-js\";\r\nimport \"react-draft-wysiwyg/dist/react-draft-wysiwyg.css\";\r\nimport draftToHtml from \"draftjs-to-html\";\r\nimport { stateFromHTML } from 'draft-js-import-html';// escribe el 'html' en el editor\r\n\r\n/**Importacion del calendario */\r\nimport Dates from \"../../dates/dates.js\";\r\n\r\n/**Datos de Sesion del usuario */\r\nimport AuthUser from '../../../services/authenticity/auth-service.js';\r\n\r\n/**Servicios del profesor */\r\nimport TeacherService from '../../../services/teacher/teacherService';\r\n\r\n/*Importaciones del css*/\r\nimport '../../../styles/Challenge.css';\r\nimport '../../../styles/styleGeneral.css';\r\nimport '../../../styles/styleCard.css';\r\nimport '../../../styles/Writing.css';\r\nimport Card from 'react-bootstrap/Card';\r\n\r\n/*Componentes de estilo Bootstrap*/\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport Button from 'react-bootstrap/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport ListGroup from 'react-bootstrap/ListGroup';\r\nimport Alert from 'react-bootstrap/Alert';\r\n\r\nclass EditChallenge extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.onFileChange = this.onFileChange.bind(this);\r\n        this.onModalSave = this.onModalSave.bind(this);\r\n\r\n        this.state = {\r\n            imgCollection: [],//array de ficheros multimedia\r\n            editorState: EditorState.createEmpty(),\r\n            contentState: null,\r\n            dataMediaChallenge: [], //contiene todo el multimedia del desafio\r\n            categories: [],//contiene todas las categorias\r\n            challenge: '',//contiene el desafio\r\n            modalDeleteFile: false,\r\n            nameDeleteFileMedia: '',//nombre del fichero multimedia del escrito que desea ser borrado\r\n            deleteFileMedia: '',//fichero multimedia del escrito que desea ser borrado\r\n            formErrors: {\r\n                title: '',\r\n                description: '',\r\n                date: '',\r\n            },\r\n            form: {\r\n                title: '',\r\n                description: '',\r\n                type: '',//tipo de desafio (invididual o colaborativo)\r\n                typeQualification: '1',//tipo de calificacion numerica o conceptual\r\n                idCategory: '',\r\n                date: '',\r\n            }\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        //Obtiene todas las categorias de los desafios\r\n        TeacherService.getCategories().then(response => {\r\n            this.setState({ categories: response });\r\n        }).catch(error => {\r\n            console.log(error.message);\r\n        })\r\n        //Obtiene los datos del desafio al iniciar\r\n        TeacherService.getChallenge(this.props.match.params.idChallenge).then(response => {\r\n            var contentState = stateFromHTML(response[0].descripcion);\r\n            let editorState = EditorState.createWithContent(contentState);\r\n            this.setState({\r\n                editorState: editorState,\r\n                challenge: response[0],\r\n                form: {\r\n                    ...this.state.form,\r\n                    title: response[0].titulo,\r\n                    description: response[0].descripcion,\r\n                    type: response[0].colaborativo,\r\n                    typeQualification: response[0].tipoCalificacion,\r\n                    idCategory: response[0].idCategoria,\r\n                    date: response[0].fechaFin\r\n                }\r\n            });\r\n        }).catch(error => {\r\n            console.log(error.message);\r\n        })\r\n        //Obtiene multimedia del desafio del profesor\r\n        TeacherService.getMultimediaChallenge(this.props.match.params.idChallenge)\r\n            .then(response => {\r\n                this.setState({\r\n                    dataMediaChallenge: response.data,\r\n                });\r\n            }).catch(error => {\r\n                console.log(error.message);\r\n            });\r\n    }\r\n\r\n    //Envio el desafio editado\r\n    editChallenge = () => {\r\n        TeacherService.editChallenge(this.state.challenge.id, this.props.match.params.idGroup, this.state.form.title, this.state.form.description, this.state.form.type, this.state.form.idCategory, this.state.form.typeQualification, this.state.form.date)\r\n            .then(response => {\r\n                if (this.state.imgCollection.length > 0) {\r\n                    TeacherService.sendMultimediaChallenge(this.state.imgCollection, AuthUser.getCurrentUser().id, this.props.match.params.idChallenge, this.state.form.type)\r\n                        .then(response => {\r\n                            window.location.href = \"/teacher/groups\";\r\n                        })\r\n                        .catch(error => {\r\n                            console.log(error.message);\r\n                        });\r\n                }\r\n                else\r\n                    window.location.href = \"/teacher/groups\";\r\n            })\r\n            .catch(error => {\r\n                console.log(error.message);\r\n            });\r\n    };\r\n\r\n    //Elimina el fichero multimedia del desafio\r\n    deleteFile = (mediaChallenge) => {\r\n        this.onModalDeleteFile(false);\r\n        var contador = 0;\r\n        var arreglo = this.state.dataMediaChallenge;\r\n        arreglo.map((registro) => {\r\n            if (mediaChallenge.id === registro.id) {\r\n                arreglo.splice(contador, 1);\r\n            }\r\n            contador++;\r\n        });\r\n        this.setState({ dataMediaChallenge: arreglo });\r\n        TeacherService.deleteMultimedia(mediaChallenge.id, mediaChallenge.ruta)\r\n            .then(response => {\r\n\r\n            })\r\n            .catch(error => {\r\n                console.log(error.message);\r\n            });\r\n    }\r\n\r\n    /*Lo que escribamos en el input lo guarda en el state async para que lo veamos en tiempo real */\r\n    handleChange = async e => {\r\n        await this.setState({\r\n            form: {\r\n                ...this.state.form,\r\n                [e.target.name]: e.target.value\r\n            }\r\n        });\r\n    }\r\n\r\n    /* manejador para validar formulario*/\r\n    handleErrors = e => {\r\n        e.preventDefault();\r\n        const { name, value } = e.target;\r\n        let formErrors = { ...this.state.formErrors };\r\n        switch (name) {\r\n            case \"title\":\r\n                formErrors.title =\r\n                    value.length < 1 ? \"Campo obligatorio requerido\" : \"\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        this.setState({\r\n            formErrors,\r\n            form: {\r\n                ...this.state.form,\r\n                [name]: value\r\n            }\r\n        });\r\n    }\r\n\r\n    onContentStateChange = contentState => {\r\n        this.setState({\r\n            contentState\r\n        });\r\n    };\r\n\r\n    onEditorStateChange = (editorState) => {\r\n        this.setState({\r\n            editorState,\r\n        });\r\n    };\r\n\r\n    /**modal guardar cambios */\r\n    onModalSave(modal) {\r\n        this.setState({\r\n            stateModal: modal\r\n        });\r\n    }\r\n\r\n    /**modal eliminar Fichero */\r\n    onModalDeleteFile(modal) {\r\n        this.setState({\r\n            modalDeleteFile: modal\r\n        });\r\n    }\r\n\r\n    //redireccion a una pagina\r\n    changeView = () => {\r\n        window.location.href = \"/teacher/groups\";\r\n    }\r\n\r\n    qualificationSelection = event => {\r\n        this.setState({\r\n            form: {\r\n                ...this.state.form,\r\n                typeQualification: event.target.value\r\n            }\r\n        });\r\n    };\r\n\r\n    /* manejador de fechas*/\r\n    handleDateChange = (date) => {\r\n        var dateActual = new Date();\r\n        let formErrors = { ...this.state.formErrors };\r\n        //Si la fecha actual es mayor que la fecha seleccionada\r\n        if (dateActual > date) {\r\n            formErrors.date = \"Campo Fecha no válida\";\r\n        }\r\n        else {\r\n            formErrors.date = \"\";\r\n        }\r\n        this.setState({\r\n            formErrors,\r\n            form: {\r\n                ...this.state.form,\r\n                date: date\r\n            }\r\n        });\r\n    };\r\n\r\n    /* manejador de tipo desafio */\r\n    handleSelectionChange = event => {\r\n        this.setState({\r\n            form: {\r\n                ...this.state.form,\r\n                type: event.target.value\r\n            }\r\n        });\r\n    };\r\n\r\n    /* manejador de categoria */\r\n    handleSelectionCategory = event => {\r\n        this.setState({\r\n            form: {\r\n                ...this.state.form,\r\n                idCategory: event.target.value\r\n            }\r\n        });\r\n    };\r\n\r\n    onFileChange(e) {\r\n        this.setState({ imgCollection: e.target.files });\r\n    }\r\n\r\n    //Obtiene el nombre del desafio/escrito\r\n    showTitle = (mediaChallenge) => {\r\n        var str = mediaChallenge.ruta;\r\n        var res = str.split(\"/\");\r\n        return res[8];\r\n    }\r\n\r\n    editorChange = (editorState) => {\r\n        let formErrors = { ...this.state.formErrors };\r\n        if (!editorState.getCurrentContent().hasText()) {\r\n            formErrors.description = \"Texto Vacío\";\r\n        }\r\n        else {\r\n            formErrors.description = \"\";\r\n        }\r\n\r\n        this.setState({\r\n            form: {\r\n                formErrors,\r\n                ...this.state.form,\r\n                description: draftToHtml(convertToRaw(this.state.editorState.getCurrentContent()))\r\n            }\r\n        });\r\n    };\r\n\r\n    //Muestra modal para eliminar fichero multimedia\r\n    askDeleteFile = (mediaChallenge) => {\r\n        var str = mediaChallenge.ruta;\r\n        var res = str.split(\"/\");\r\n        this.setState({\r\n            nameDeleteFileMedia: res[8],\r\n            deleteFileMedia: mediaChallenge,\r\n            modalDeleteFile: true,\r\n        });\r\n    }\r\n\r\n    //Desactiva boton\r\n    disabledButton = () => {\r\n        var dateActual = new Date();//\"<p></p>\\n\"\r\n        if (this.state.form.title.length === 0 || dateActual > this.state.form.date || this.state.form.description.length === 0 || this.state.form.description === \"<p></p>\\n\") {\r\n            return true;//desactivar\r\n        }\r\n        else\r\n            return false;\r\n    };\r\n\r\n    /*Dibuja la pagina */\r\n    render() {\r\n        const { editorState, formErrors, dataMediaChallenge } = this.state;\r\n        return (\r\n            <div className=\"container\">\r\n                <Card className=\"card-edit\">\r\n                    <Card.Body>\r\n                        <div className={\"row-edit\"}>\r\n                            <div className={\"section-title\"}>\r\n                                <h2> Modificar desafío </h2>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row-edit\">\r\n                            <div className=\"form-inputs\">\r\n                                <label className='form-label'>Título </label>\r\n                                <input\r\n                                    className={formErrors.title.length > 0 ? \"error\" : \"form-input\"}\r\n                                    type=\"text\"\r\n                                    name=\"title\"\r\n                                    placeholder=\"escribe el título\"\r\n                                    value={this.state.form.title}\r\n                                    onChange={this.handleErrors}\r\n                                />\r\n                                {formErrors.title.length > 0 && (\r\n                                    <span className=\"alert-login\">{formErrors.title}</span>\r\n                                )}\r\n                            </div>\r\n\r\n                        </div>\r\n                        <div className=\"row-edit\">\r\n                            <label className='form-label'>Descripción</label>\r\n                            <Editor\r\n                                editorState={editorState}\r\n                                // wrapperClassName=\"demo-wrapper\"\r\n                                // editorClassName=\"border-edit\"\r\n                                // toolbarClassName=\"rdw-emoji-wrapper\"\r\n                                wrapperClassName=\"wrapperClassName1\"\r\n                                editorClassName=\"editorClassName1\"\r\n                                toolbarClassName=\"toolbarClassName1\"\r\n                                onEditorStateChange={this.onEditorStateChange}\r\n                                onContentStateChange={this.onContentStateChange}\r\n                                // onChange={this.editorChange(editorState)}\r\n                                onChange={\r\n                                    (event, editor) => {\r\n                                        let formErrors = { ...this.state.formErrors };\r\n                                        if (!editorState.getCurrentContent().hasText()) {\r\n                                            formErrors.description = \"Campo texto vacío\";\r\n                                        }\r\n                                        else {\r\n                                            formErrors.description = \"\";\r\n                                        }\r\n                                        this.setState({\r\n                                            formErrors,\r\n                                            form: {\r\n                                                ...this.state.form,\r\n                                                description: draftToHtml(convertToRaw(this.state.editorState.getCurrentContent()))\r\n                                            }\r\n                                        });\r\n                                    }\r\n                                }\r\n                                className={formErrors.description.length > 0 ? \"error\" : \"form-control\"}\r\n                            />\r\n                            {formErrors.description.length > 0 && (\r\n                                <span className=\"alert-login\">{formErrors.description}</span>\r\n                            )}\r\n                        </div>\r\n                        <ul className={\"flex-row\"}>\r\n                            <li className={\"flex-item-form\"}>\r\n                                <div className=\"form-select\">\r\n                                    <label className='form-label'>Categoría</label>\r\n                                    <select value={this.state.form.idCategory} onChange={this.handleSelectionCategory}>\r\n                                        {this.state.categories.map(elemento => (\r\n                                            <option key={elemento.id} value={elemento.id}>{elemento.nombre}</option>\r\n                                        ))}\r\n                                    </select>\r\n                                </div>\r\n                            </li>\r\n                            <li className={\"flex-item-form\"}>\r\n                                <div className=\"form-select\">\r\n                                    <label className='form-label'>Tipo de desafio</label>\r\n                                    <select value={this.state.form.type} onChange={this.handleSelectionChange}>\r\n                                        <option value=\"1\">Individual</option>\r\n                                        <option value=\"2\">Colaborativo</option>\r\n                                    </select>\r\n                                </div>\r\n                            </li>\r\n                            <li className={\"flex-item-form\"}>\r\n                                <div className=\"form-select\">\r\n                                    <label className='form-label'> Tipo de Calificación </label>\r\n                                    <select value={this.state.form.typeQualification} onChange={this.qualificationSelection} >\r\n                                        <option value=\"1\"> Numerica</option>\r\n                                        <option value=\"2\"> Conceptual</option>\r\n                                    </select>\r\n                                </div>\r\n                            </li>\r\n                        </ul>\r\n\r\n                        <div className=\"row-edit\">\r\n                            <label className='form-label'> Fecha y hora de fin del desafío </label>\r\n                        </div>\r\n                        <div className=\"form-select\">\r\n                            <Dates\r\n                                className={formErrors.date.length > 0 ? \"error\" : \"form-control\"}\r\n                                handleDateChange={this.handleDateChange}\r\n                                param={this.state.form.date} />\r\n                            {formErrors.date.length > 0 && (\r\n                                <span className=\"alert-login\">{formErrors.date}</span>\r\n                            )}\r\n                        </div>\r\n                        <div className=\"row-edit\">\r\n                            <label className='form-label'> Ficheros Multimedia </label>\r\n                            {dataMediaChallenge.length > 0 ? (\r\n                                <table>\r\n                                    <tbody>\r\n                                        <div className={\"table-multi\"}>\r\n                                            {dataMediaChallenge.map((mediaChallenge) => (\r\n                                                <tr key={mediaChallenge.id}>\r\n                                                    <td>\r\n                                                        {this.showTitle(mediaChallenge)}\r\n                                                    </td>\r\n                                                    <td>\r\n                                                        <div className=\"form-button\">\r\n                                                            <Button onClick={() => window.open(mediaChallenge.ruta)}>Ver</Button>\r\n                                                        </div>\r\n                                                    </td>\r\n                                                    <td>\r\n                                                        <div className=\"form-button\">\r\n                                                            <Button onClick={() => this.askDeleteFile(mediaChallenge)}>Eliminar</Button>\r\n                                                        </div>\r\n                                                    </td>\r\n                                                </tr>\r\n                                            ))}\r\n                                        </div>\r\n                                    </tbody>\r\n                                </table>\r\n                            ) : (\r\n                                <div className=\"row-edit\">\r\n                                    <p>No hay ficheros para mostrar</p>\r\n                                </div>\r\n                            )}\r\n                        </div>\r\n                        <div className=\"row-edit\">\r\n                            <div className={\"form-select\"}>\r\n                                <label className='form-label'>\r\n                                    Puedes agregar un fichero multimedia si lo deseas (imagen,video o audio)\r\n                                </label>\r\n                                <input type=\"file\" name=\"imgCollection\" onChange={this.onFileChange} multiple />\r\n                            </div>\r\n                        </div>\r\n                        <div className={\"row-edit\"}>\r\n                            <div className=\"form-button\">\r\n                                <Button onClick={() => this.onModalSave(true)} disabled={this.disabledButton()}>Guardar</Button>\r\n                            </div>\r\n                            <div className=\"form-button\">\r\n                                <Button onClick={() => this.changeView()}>Cancelar</Button>\r\n                            </div>\r\n                        </div>\r\n                        <Modal\r\n                            centered\r\n                            show={this.state.stateModal}\r\n                            onHide={this.state.stateModal}\r\n                        >\r\n                            <Modal.Header >\r\n                                <Modal.Title>Aviso</Modal.Title>\r\n                                <img src={\"../../../exclamation.png\"} />\r\n                            </Modal.Header>\r\n                            <Modal.Body>\r\n                                ¿Desea guardar los cambios?\r\n                            </Modal.Body>\r\n                            <Modal.Footer>\r\n                                <Button onClick={() => this.editChallenge()}>Aceptar</Button>\r\n                                <Button variant={\"danger\"} onClick={() => this.onModalSave(false)}>Cancelar</Button>\r\n                            </Modal.Footer>\r\n                        </Modal>\r\n\r\n                        <Modal\r\n                            centered\r\n                            show={this.state.modalDeleteFile}\r\n                            onHide={this.state.modalDeleteFile}\r\n                        >\r\n                            <Modal.Header >\r\n                                <Modal.Title>\r\n                                    Aviso\r\n                                    <img src={\"../../../triangle.png\"} />\r\n                                </Modal.Title>\r\n                            </Modal.Header>\r\n                            <Modal.Body>\r\n                                ¿Desea eliminar {this.state.nameDeleteFileMedia}?\r\n                            </Modal.Body>\r\n                            <Modal.Footer>\r\n                                <Button onClick={() => this.deleteFile(this.state.deleteFileMedia)}>Aceptar</Button>\r\n                                <Button variant={\"danger\"} onClick={() => this.onModalDeleteFile(false)}>Cancelar</Button>\r\n                            </Modal.Footer>\r\n                        </Modal>\r\n\r\n                    </Card.Body>\r\n                </Card>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default EditChallenge;","/*\r\n*  Name_file :ViewTeamInfo.js\r\n*  Description: Contiene los datos de un equipo segun un ID dado.\r\n*    \r\n*/\r\n\r\nimport React, { Component } from 'react';\r\nimport TeacherService from '../../../services/teacher/teacherService.js';\r\nimport { Link} from \"react-router-dom\";\r\n\r\n/** Estilo CSS*/\r\nimport Button from \"react-bootstrap/Button\";\r\n\r\n\r\n\r\nclass ViewTeamInfo extends Component {\r\n    \r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            data: [],\r\n            memberData: [],\r\n        };\r\n    }\r\n\r\n\r\n    /*Se hacen peticiones al servidor para que me devuelva los datos del estudiante*/\r\n    peticionGet() {\r\n        TeacherService.getTeam(this.props.idTeam).then(response => {\r\n              this.setState({data:response});\r\n              this.peticionGetMembers();\r\n        }).catch(error => {\r\n            console.log(error.message);\r\n        })\r\n    }\r\n\r\n    /*Se hacen peticiones al servidor para que me devuelva los datos del estudiante*/\r\n    peticionGetMembers() {\r\n        TeacherService.getMembersTeam(this.props.idTeam).then(response => {\r\n              this.setState({memberData:response});\r\n        }).catch(error => {\r\n            console.log(error.message);\r\n        })\r\n    }\r\n\r\n    /*Cargo todos los datos que necesito nada más cargar la página, como los datos del usuario o los grupos.*/\r\n   componentDidMount() {\r\n        this.peticionGet();\r\n     \r\n   }\r\n\r\n    /*Dibuja la pagina  */\r\n    render() {\r\n        \r\n        let cartel =<> </>;\r\n        let contenido = <>\r\n                            <ul className={\"flex-items-row-start wrap\"}>\r\n                                {this.state.memberData.map((user) =>\r\n                                    (\r\n                                        <li className={\"items-row\"}>\r\n                                            <br/>\r\n                                            <ul className={\"container-column-list wrap\"}>\r\n                                                <li className={\"flex-item-list\"}>\r\n                                                    <img src={(user.ruta != \"\" ) ? (user.ruta) : \"/chicaliteratura.png\" }\r\n                                                         alt=\"\"\r\n                                                         style={{width: '60px',  borderRadius: '80%',margin:\"0 1rem 0 1rem\"}}\r\n                                                    >\r\n                                                    </img>\r\n                                                </li>\r\n                                                <li className={\"flex-item-list\"}>\r\n                                                    {user.nombreEstudiante}\r\n                                                </li>\r\n                                                <li className={\"flex-item-list\"}>\r\n                                                    {user.apellidoEstudiante}\r\n                                                </li>\r\n                                                <li className={\"flex-item-list\"}>\r\n                                                    <Link key={user.id} to={`/teacher/students/viewProfile/${user.idEstudiante}`}>\r\n                                                        <Button text='Ver Perfil'> Ver perfil </Button>\r\n                                                    </Link>\r\n                                                </li>\r\n                                            </ul>\r\n                                            <hr/>\r\n                                        </li>\r\n\r\n                                    )\r\n                                )}\r\n                            </ul>\r\n                    </>;\r\n\r\n\r\n        return (\r\n\r\n                <div>\r\n                    {cartel}\r\n                    {contenido}\r\n                </div>\r\n        );\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default ViewTeamInfo;","/*\r\n*  Name_file :ViewTeamScripts.js\r\n*  Description: Componente que contiene la lista de escritos del equipo\r\n*/\r\n\r\n\r\nimport React, { Component } from 'react';\r\nimport TeacherService from \"../../../services/teacher/teacherService.js\";\r\nimport '../../../styles/ScriptList.css';\r\nimport { Link } from \"react-router-dom\";\r\n\r\n\r\n/**Estilos Boostrap*/\r\nimport Button from \"react-bootstrap/Button\";\r\nimport  Alert from 'react-bootstrap/Alert';\r\n\r\n/**Estilos CSS*/\r\nimport '../../../styles/styleGeneral.css';\r\nimport '../../../styles/styleCard.css';\r\nimport '../../../styles/ScriptList.css';\r\nimport Card from \"react-bootstrap/Card\";\r\n\r\nclass GroupTeacher extends Component {\r\n\r\n     constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            data: [],\r\n            filteredData:[],\r\n            searchKey: '',\r\n            searchType: 'nombre'\r\n        };\r\n\r\n     }\r\n    \r\n\r\n    /*Se hacen peticiones al servidor para que me devuelva la tabla desafios, me muestra todos los desafios del grupo seleccioando \r\n    por el profesor*/\r\n    peticionGet = () => {\r\n        TeacherService.getScriptsByTeam(this.props.idTeam).then(response => {\r\n            console.log(response);//muestra consola navegador\r\n            this.setState({ data: response });\r\n            console.log(response);\r\n            this.setState({ filteredData: response });\r\n        }).catch(error => {\r\n            console.log(error.message);\r\n        })\r\n    }\r\n\r\n    //Filtra los datos de los escritos buscados para solo buscar en la base de datos una vez\r\n    filterData = () =>{\r\n        let auxArray = [];\r\n        this.state.filteredData = [];\r\n        for(let i = 0; i < this.state.data.length; i++){\r\n            if(this.state.searchType == \"titulo\")\r\n            {\r\n                if(new RegExp( this.state.searchKey, 'i'  ).test(this.state.data[i].titulo))\r\n                {\r\n                    auxArray.push(this.state.data[i]);\r\n                }\r\n            }\r\n            else\r\n            {\r\n                if((new RegExp(this.state.searchKey, 'i' ).test(this.state.data[i].nombre)) )\r\n                {\r\n                    auxArray.push(this.state.data[i]);\r\n                }\r\n            }\r\n        }\r\n        this.setState({ filteredData: auxArray });\r\n    }\r\n\r\n    /*Lo que escribamos en el input lo guarda en el state async para que lo veamos en tiempo real */\r\n    handleChangeSearch = async e => {\r\n        await this.setState({\r\n                [e.target.name]: e.target.value\r\n        });\r\n        this.filterData();\r\n    }\r\n\r\n    /*Lo que escribamos en el input lo guarda en el state async para que lo veamos en tiempo real */\r\n    handleChangeSearchType = async e => {\r\n        await this.setState({\r\n                [e.target.name]: e.target.value\r\n        });\r\n        this.filterData();\r\n    }\r\n\r\n\r\n    /*Si vuelvo a la pagina de login, comprueba si el usuario ya inicio sesion anteriomente\r\n   si es el caso lo redirige a la home segun su rol*/\r\n    componentDidMount() {\r\n        this.peticionGet();\r\n    }\r\n\r\n    /*Dibuja la pagina  */\r\n    render() {\r\n        let cartel =<> </>;\r\n        let tabla =\r\n        <div className =\"scriptList\">\r\n            {this.state.filteredData.map(script => {\r\n                return (\r\n                <div className =\"scriptCardContainer\">\r\n                        <Card\r\n                            key={script.idGrupo}\r\n                            style={{ width: '19rem' , padding:'0 !important'}}\r\n                            clclassName=\"mb-2\"\r\n                            bg={'Light'}\r\n                        >\r\n                        <Card.Header>\r\n                            <Link\r\n                                to={`/teacher/editWriting/${script.idGrupo}/${script.idDesafio}/${script.id}/${script.idEstudiante}`}>\r\n                                <h5>{script.nombre}</h5>\r\n                            </Link>\r\n                        </Card.Header>\r\n                        <Card.Body>\r\n                            <Card.Title>\r\n                               <h6>Desafío</h6>\r\n                            </Card.Title>\r\n                            <Card.Text>\r\n                                <h5>{script.titulo}</h5>\r\n                            </Card.Text>\r\n                        </Card.Body>\r\n                     </Card>\r\n                </div>\r\n                )\r\n            })}\r\n    </div>\r\n    ;\r\n        if(this.state.filteredData.length === 0)\r\n        {\r\n            cartel = <div className={\"row-edit\"}>\r\n                        <Alert variant={\"danger\"}>\r\n                            <h6>No hay resultados para la búsqueda realizada.</h6>\r\n                        </Alert>\r\n                    </div>;\r\n            tabla = <></>;\r\n        }\r\n\r\n\r\n        return (\r\n            <>\r\n                <br/>\r\n                <ul className={\"container-column-list\"}>\r\n                    <li className={\"items-row\"}>\r\n                        <label className={\"form-label\"}>Buscar escrito</label>\r\n                    </li>\r\n                    <li className={\"items-row\"}>\r\n                        <input type=\"text\" name=\"searchKey\" onChange={this.handleChangeSearch} />\r\n                    </li>\r\n                    <li className={\"items-row\"}>\r\n                        <img src=\"../../search.png\" alt=\"\"/>\r\n                    </li>\r\n                    <li className={\"items-row\"}>\r\n                        <label className={\"form-label\"} htmlFor=\"searchType\">Escoja cómo buscar</label>\r\n                    </li>\r\n                    <li className={\"items-row\"}>\r\n                        <select name=\"searchType\" id=\"searchType\" onChange={this.handleChangeSearchType}>\r\n                            <option value=\"nombre\">Nombre</option>\r\n                            <option value=\"titulo\">Título</option>\r\n                        </select>\r\n                    </li>\r\n                </ul>\r\n                <div className={\"row-edit\"}>\r\n                    <h6> Resultados de buscar escritos por {this.state.searchType} similar a {this.state.searchKey}</h6>\r\n                </div>\r\n                    {cartel}\r\n                    {tabla}\r\n            </>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default GroupTeacher;","/*\r\n*  Name_file :ViewTeam.js\r\n*  Description: Contiene los datos de un equipo segun un ID dado.\r\n*    \r\n*/\r\nimport React, { Component } from 'react';\r\nimport TeacherService from '../../../services/teacher/teacherService.js';\r\nimport Datos from \"./ViewTeamInfo\";\r\nimport Escritos from \"./ViewTeamScripts\";\r\n\r\n/** Estilos*/\r\nimport { Tab, Tabs, TabList, TabPanel } from 'react-tabs';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Alert from 'react-bootstrap/Alert';\r\n\r\n/**Estilos CSS*/\r\nimport 'react-tabs/style/react-tabs.css';\r\nimport '../../../styles/styleGeneral.css';\r\n\r\nclass ViewTeam extends Component {\r\nt\r\n    constructor(props){\r\n        super(props);\r\n        this.handler = this.handler.bind(this)\r\n        this.state = {\r\n            ventana: 1,\r\n            data: [],\r\n        }\r\n\r\n    }\r\n\r\n    //Permite refrescar la página desde abajo\r\n    handler() {\r\n       this.peticionGet();\r\n      }\r\n\r\n    cambiaVentana = (opcion) =>{\r\n        this.setState({ventana : opcion});\r\n    }\r\n\r\n    /*Se hacen peticiones al servidor para que me devuelva los datos del estudiante*/\r\n    peticionGet() {\r\n\r\n        TeacherService.getTeam(this.props.match.params.idTeam).then(response => {\r\n              this.setState({data:response});\r\n        }).catch(error => {\r\n            console.log(error.message);\r\n        })\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n         this.peticionGet();\r\n       }\r\n\r\n    /*Dibuja la pagina  */\r\n    render() {\r\n        \r\n       let idTeam = this.props.match.params.idTeam;\r\n       let tabs =\r\n               <TabList>\r\n                    <Tab>MIEMBROS</Tab>\r\n                    <Tab>ESCRITOS</Tab>\r\n                </TabList>;\r\n        \r\n        let secondTab = <Escritos key={idTeam} idTeam={idTeam}/>;\r\n\r\n        return (\r\n           <div className=\"container\">\r\n              <Card className={\"card-long\"}>\r\n                <Card.Body>\r\n                    <div className={\"row-edit\"}>\r\n                        <div className={\"section-title\"}>\r\n                            <h2>Infomación del equipo</h2>\r\n                        </div>\r\n                        <br/>\r\n                        <Alert variant={\"info\"}>\r\n                            <img src=\"/info.png\" alt=\"\"/>\r\n                            Desde este espacio puede ver a los miembros y escritos de un equipo.\r\n                        </Alert>\r\n                    </div>\r\n                    <div className={\"row-edit\"}>\r\n                        <Tabs>\r\n                            {tabs}\r\n                            <TabPanel>\r\n                                <Datos key={idTeam} idTeam={idTeam} handler ={this.handler}/>\r\n                            </TabPanel>\r\n                            <TabPanel>\r\n                                {secondTab}\r\n                            </TabPanel>\r\n                        </Tabs>\r\n                    </div>\r\n                </Card.Body>\r\n              </Card>\r\n           </div>\r\n        );\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default ViewTeam;","/*\r\n*  Name_file :SearchStudentRes.js\r\n*  Description: Contiene una lista de resultado de la búsqueda de los estudiantes.\r\n*    \r\n*/\r\n\r\nimport React, { Component } from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport TeacherService from '../../../services/teacher/teacherService.js';\r\n\r\n/** Estilos CSS*/\r\nimport '../../../styles/styleGeneral.css';\r\nimport '../../../styles/styleCard.css';\r\n\r\n/** Estilos*/\r\nimport Card from 'react-bootstrap/Card';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Table from 'react-bootstrap/Table';\r\nimport Alert from \"react-bootstrap/Alert\";\r\n\r\nclass SearchStudentRes extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            data: [],\r\n            filteredData: [],\r\n            searchStudent: '',\r\n            searchType: 'nombre',\r\n            showListStudents: false,//muestra lista estudiantes\r\n        };\r\n    }\r\n\r\n\r\n    //Filtra los datos de los estudiantes buscados para solo buscar en la base de datos una vez\r\n    filterData = () => {\r\n        let auxArray = [];\r\n        //this.state.filteredData = [];\r\n        for (let i = 0; i < this.state.data.length; i++) {\r\n            if (this.state.searchType == \"email\") {\r\n                if (new RegExp(this.state.searchStudent, 'i').test(this.state.data[i].correo)) {\r\n                    auxArray.push(this.state.data[i]);\r\n                }\r\n            }\r\n            else {\r\n                if ((new RegExp(this.state.searchStudent, 'i').test(this.state.data[i].nombre)) || (new RegExp(this.state.searchStudent, 'i').test(this.state.data[i].apellidos))) {\r\n                    auxArray.push(this.state.data[i]);\r\n                }\r\n            }\r\n        }\r\n        this.setState({ filteredData: auxArray });\r\n    }\r\n\r\n    /*Lo que escribamos en el input lo guarda en el state async para que lo veamos en tiempo real */\r\n    handleChangeSearch = async e => {\r\n        await this.setState({\r\n            [e.target.name]: e.target.value\r\n        });\r\n        this.filterData();\r\n    }\r\n\r\n    /*Lo que escribamos en el input lo guarda en el state async para que lo veamos en tiempo real */\r\n    handleChangeSearchType = async e => {\r\n        await this.setState({\r\n            [e.target.name]: e.target.value\r\n        });\r\n        this.filterData();\r\n    }\r\n\r\n    changeViewStudentProfile = (idStudent) => {\r\n        window.location.href = '/teacher/students/viewProfile/' + idStudent;\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n\r\n        TeacherService.searchStudent(this.state.searchStudent, this.state.searchType).then(response => {\r\n            if (response.length > 0) {//si existen estudiantes\r\n                this.setState({ data: response });\r\n                this.setState({ filteredData: response });\r\n                this.setState({ showListStudents: true });\r\n                this.filterData();\r\n            }\r\n\r\n        })\r\n\r\n    }\r\n\r\n\r\n    /*Dibuja la pagina  */\r\n    render() {\r\n\r\n\r\n        let cartel = <div> </div>;\r\n        let tabla = <ul className={\"flex-items-row-start wrap\"}>\r\n            {this.state.filteredData.map((student) => (\r\n                <li className={\"items-row\"}>\r\n                    <ul className={\"container-column-list wrap\"}>\r\n                        <li className={\"flex-item-list\"}>\r\n                            <img src={(student.ruta !=\"\") ? (student.ruta) : \"/chicaliteratura.png\"}\r\n                                alt=\"\" style={{ width: '2rem', borderRadius: '80%' }} >\r\n                            </img>\r\n                        </li>\r\n                        <li className={\"flex-item-list\"}>\r\n                            {student.nombre}\r\n                        </li>\r\n                        <li className={\"flex-item-list\"}>\r\n                            {student.apellidos}\r\n                        </li>\r\n                        <li className={\"flex-item-list\"}>\r\n                            {student.correo}\r\n                        </li>\r\n                        <li className={\"flex-item-list\"}>\r\n                            <Link key={student.id} to={`/teacher/students/viewProfile/${student.id}`}>\r\n                                <Button size={\"sm\"} variant={\"primary\"} text='Ver Perfil'> Ver perfil </Button>\r\n                            </Link>\r\n                        </li>\r\n                    </ul>\r\n                    <hr />\r\n                </li>\r\n            ))}\r\n        </ul>;\r\n\r\n        if (this.state.filteredData.length === 0) {\r\n            cartel = <div className={\"row-edit\"}>\r\n                <br />\r\n                <h4>No hay resultados para la búsqueda realizada.</h4>\r\n            </div>;\r\n            tabla = <></>;\r\n        }\r\n\r\n        const { showListStudents } = this.state;\r\n        return (\r\n            <div className=\"container\">\r\n                <Card className=\"card-long\">\r\n                    <Card.Body>\r\n                        <div className={\"row-edit\"}>\r\n                            <div className={\"section-title\"}>\r\n                                <h2>Lista de estudiantes</h2>\r\n                            </div>\r\n                            <br />\r\n                            <Alert variant={\"info\"}>\r\n                                <img src=\"/info.png\" alt=\"\" />\r\n                               Desde este espacio puede ver la lista de sus estudiantes participantes.\r\n                           </Alert>\r\n                        </div>\r\n                        {showListStudents ? (\r\n                            <div>\r\n                                <div className={\"row-edit\"}>\r\n                                    <ul className={\"container-column-list\"}>\r\n                                        <li className={\"items-row\"}>\r\n                                            <label className={\"form-label\"}>Buscar estudiante: </label>\r\n                                        </li>\r\n                                        <li className={\"items-row\"}>\r\n                                            <input type=\"text\" name=\"searchStudent\" onChange={this.handleChangeSearch} />\r\n                                        </li>\r\n                                        <li className={\"items-row\"}>\r\n                                            <img src=\"../../search.png\" alt=\"\" />\r\n                                        </li>\r\n                                        <li className={\"items-row\"}>\r\n                                            <label className={\"form-label\"} htmlFor=\"searchType\">Escoja cómo buscar:</label>\r\n                                        </li>\r\n                                        <li className={\"items-row\"}>\r\n                                            <select name=\"searchType\" id=\"searchType\" onChange={this.handleChangeSearchType}>\r\n                                                <option value=\"nombre\">Nombre</option>\r\n                                                <option value=\"email\">Email</option>\r\n                                            </select>\r\n                                        </li>\r\n                                    </ul>\r\n                                </div>\r\n                                <div className={\"row-edit\"}>\r\n                                    <Card className={\"card-long\"}>\r\n                                        <Card.Body >\r\n                                            {cartel}\r\n                                            {tabla}\r\n                                        </Card.Body>\r\n                                    </Card>\r\n                                </div>\r\n                            </div>\r\n                        ) : (\r\n                            <div className=\"table-margin\">\r\n                                <p>No hay estudiantes para mostrar</p>\r\n                            </div>\r\n                        )}\r\n                    </Card.Body>\r\n                </Card>\r\n            </div>\r\n        );\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default SearchStudentRes;","/*\r\n*  Name_file :SearchStudentRes.js\r\n*  Description: Contiene una lista de resultado de la búsqueda de los estudiantes.\r\n*    \r\n*/\r\n\r\nimport React, { Component } from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport AuthUser from '../../../services/authenticity/auth-service.js';\r\nimport TeacherService from '../../../services/teacher/teacherService.js';\r\n\r\n/** Estilos CSS*/\r\nimport '../../../styles/styleGeneral.css';\r\nimport '../../../styles/styleCard.css';\r\n\r\n/**Estilos*/\r\nimport Card from 'react-bootstrap/Card';\r\nimport Button from 'react-bootstrap/Button';\r\nimport ListGroup from 'react-bootstrap/ListGroup';\r\nimport Alert from \"react-bootstrap/Alert\";\r\n\r\nclass SearchStudentRes extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            data: [],\r\n            filteredData: [],\r\n            searchName: '',\r\n            currentUserId: '',\r\n            currentUserRole: '',\r\n            searchType: 'nombre',\r\n            searchRole: \"none\",\r\n            showListApplicants: false,//muestra solicitantes\r\n            dataGroups: [],\r\n            showApplicantsGroups: false,\r\n        };\r\n    }\r\n\r\n\r\n    //Filtra los datos de los estudiantes buscados para solo buscar en la base de datos una vez\r\n    filterData = () => {\r\n        let auxArray = [];\r\n        this.state.filteredData = [];\r\n        for (let i = 0; i < this.state.data.length; i++) {\r\n            if (this.state.searchType == \"email\") {\r\n                if (new RegExp(this.state.searchName, 'i').test(this.state.data[i].correo)) {\r\n                    auxArray.push(this.state.data[i]);\r\n                }\r\n            }\r\n            else {\r\n                if ((new RegExp(this.state.searchName, 'i').test(this.state.data[i].nombre)) || (new RegExp(this.state.searchName, 'i').test(this.state.data[i].apellidos))) {\r\n                    auxArray.push(this.state.data[i]);\r\n                }\r\n            }\r\n        }\r\n        let finalArray = [];\r\n        if (this.state.searchRole != \"none\") {\r\n            for (let i = 0; i < auxArray.length; i++) {\r\n                if (auxArray[i].rol === this.state.searchRole) {\r\n                    finalArray.push(auxArray[i]);\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            finalArray = auxArray;\r\n        }\r\n\r\n        this.setState({ filteredData: finalArray });\r\n    }\r\n\r\n    //Aceptar solicitud de grupo\r\n    acceptGroupRequest = (idGrupo, idEstudiante) => {\r\n        /*Edita escrito del estudiante*/\r\n        TeacherService.acceptGroupRequest(idGrupo, idEstudiante)\r\n            .then(response => {\r\n                    window.location.href = '/teacher/applicants';\r\n            })\r\n            .catch(error => {\r\n                console.log(error.message);\r\n            });\r\n    }\r\n\r\n    /*Lo que escribamos en el input lo guarda en el state async para que lo veamos en tiempo real */\r\n    handleChangeSearch = async e => {\r\n        await this.setState({\r\n            [e.target.name]: e.target.value\r\n        });\r\n        this.filterData();\r\n    }\r\n\r\n    /*Lo que escribamos en el input lo guarda en el state async para que lo veamos en tiempo real */\r\n    handleChangeSearchType = async e => {\r\n        await this.setState({\r\n            [e.target.name]: e.target.value\r\n        });\r\n        this.filterData();\r\n    }\r\n\r\n    /*Lo que escribamos en el input lo guarda en el state async para que lo veamos en tiempo real */\r\n    handleChangeSearchRole = async e => {\r\n        await this.setState({\r\n            [e.target.name]: e.target.value\r\n        });\r\n        this.filterData();\r\n    }\r\n\r\n    changeViewStudentProfile = (idStudent) => {\r\n        window.location.href = '/teacher/students/viewProfile/' + idStudent;\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n\r\n        const dataUser = AuthUser.getCurrentUser();\r\n        this.setState({\r\n            currentUserRole: dataUser.rol\r\n        });\r\n\r\n        if (dataUser.rol == \"T\") {\r\n            this.setState({ searchRole: \"S\" });\r\n        }\r\n\r\n        TeacherService.searchApplicant(this.state.searchName, this.state.searchType)\r\n            .then(response => {\r\n                if (response.length > 0) {//Si existen solicitantes\r\n                    this.setState({ data: response });\r\n                    this.setState({ filteredData: response });\r\n                    this.setState({\r\n                        currentUserRole: dataUser.rol\r\n                    });\r\n                    this.setState({ showListApplicants: true });//muestra lista de solicitantes\r\n                    this.filterData();\r\n                }\r\n            })\r\n\r\n        TeacherService.showGroupRequest()\r\n        .then(response => {\r\n            if (response.length > 0) {//Si existen solicitantes\r\n                this.setState({ dataGroups: response, showApplicantsGroups: true });\r\n                this.filterData();\r\n            }\r\n        })\r\n        \r\n    }\r\n\r\n\r\n    /*Dibuja la pagina  */\r\n    render() {\r\n        let cartel = <> </>;\r\n        let header = <> </>;\r\n        let tabla = <> </>;\r\n        if (this.state.currentUserRole === \"T\") {\r\n            header = <div><label className={\"form-label\"}>Listado de estudiantes que quieren unirse a Creativa: </label></div>;\r\n            tabla = <ul className={\"flex-items-row-start wrap\"}  >\r\n\r\n                {this.state.filteredData.map((student) =>\r\n                (\r\n                     <li className={\"items-row\"}>\r\n                         <ul className={\"container-column-list wrap\"}>\r\n                             <li className={\"flex-item-list\"}>\r\n                                 <img src={(student.ruta!= \"\") ? (student.ruta) : \"../chicaliteratura.png\"}\r\n                                      alt=\"\"\r\n                                      style={{ width: '40%', borderRadius: '80%' }} >\r\n\r\n                                 </img>\r\n                             </li>\r\n                             <li className={\"flex-item-list\"}>\r\n                                 {student.nombre}\r\n                             </li>\r\n                             <li className={\"flex-item-list\"}>\r\n                                 {student.apellidos}\r\n                             </li>\r\n                             <li className={\"flex-item-list\"}>\r\n                                 {student.correo}\r\n                             </li>\r\n                             <li className={\"flex-item-list\"}>\r\n                                 <Link key={student.id} to={`/teacher/students/viewProfile/${student.id}`}>\r\n                                     <Button size={\"sm\"} text='Ver Perfil'> Ver perfil </Button>\r\n                                 </Link>\r\n                             </li>\r\n                         </ul>\r\n                         <hr/>\r\n                    </li>\r\n\r\n                )\r\n                )}\r\n\r\n            </ul>;\r\n        }\r\n\r\n        let headerGroups = <> </>;\r\n        let tablaGroups = <> </>;\r\n        if (this.state.currentUserRole === \"T\") {\r\n            headerGroups = <div><label className={\"form-label\"}>Listado de estudiantes que quieren unirse a un grupo: </label></div>;\r\n            tablaGroups = <ul className={\"flex-items-row-start wrap\"}  >\r\n\r\n                {this.state.dataGroups.map((student) =>\r\n                (\r\n                     <li className={\"items-row\"}>\r\n                         <ul className={\"container-column-list wrap\"}>\r\n                             <li className={\"flex-item-list\"}>\r\n                                 <img src={(student.ruta!= \"\") ? (student.ruta) : \"../chicaliteratura.png\"}\r\n                                      alt=\"\"\r\n                                      style={{ width: '40%', borderRadius: '80%' }} >\r\n\r\n                                 </img>\r\n                             </li>\r\n                              <li className={\"flex-item-list\"}>\r\n                                 {student.nombre}\r\n                             </li>\r\n                             <li className={\"flex-item-list\"}>\r\n                                 {student.apellidos}\r\n                             </li>\r\n                             <li className={\"flex-item-list\"}>\r\n                                 {student.nombregrupo}\r\n                             </li> \r\n                             <li className={\"flex-item-list\"}>\r\n                             <div className=\"form-button\">\r\n                                <Button variant=\"success\" onClick={() => this.acceptGroupRequest(student.idGrupo, student.idEstudiante)}>Aceptar</Button>\r\n                            </div>\r\n                             </li>\r\n                         </ul>\r\n                         <hr/>\r\n                    </li>\r\n\r\n                )\r\n                )}\r\n\r\n            </ul>;\r\n        }\r\n\r\n\r\n        if (this.state.currentUserRole === \"A\") {\r\n            header = <div><label className={\"form-label\"}>Listado de estudiantes que quieren unirse a Creativa: </label></div>;\r\n            tabla = <ul className={\"flex-items-row-start wrap\"}>\r\n                {this.state.filteredData.map((student) =>\r\n                (\r\n                    <li className={\"items-row\"}>\r\n                        <ul className={\"container-column-list wrap\"}>\r\n                            <li className={\"flex-item-list\"}>\r\n                                <img src={(student.ruta != \"\") ? (student.ruta) : \"/chicaliteratura_sizebig.png\"}\r\n                                     alt=\"\"\r\n                                     style={{ width: '40%', borderRadius: '80%' ,marginLeft:'2rem'}} >\r\n\r\n                                </img>\r\n                            </li>\r\n                            <li className={\"flex-item-list\"}>\r\n                                {student.nombre}\r\n                            </li>\r\n                            <li className={\"flex-item-list\"}>\r\n                                {student.apellidos}\r\n                            </li>\r\n                            <li className={\"flex-item-list\"}>\r\n                                {student.correo}\r\n                            </li>\r\n                            <li className={\"flex-item-list\"}>\r\n                                <Link key={student.id} to={`/admin/users/viewProfile/${student.id}`}>\r\n                                    <Button  size={\"sm\"} text='Ver Perfil'> Ver perfil </Button>\r\n                                </Link>\r\n                            </li>\r\n                        </ul>\r\n                        <hr/>\r\n                    </li>\r\n                  )\r\n                )}\r\n            </ul>;\r\n        }\r\n\r\n\r\n        if (this.state.filteredData.length === 0) {\r\n            cartel = <div className={\"row-edit\"}>\r\n                        <Alert variant={\"danger\"}>\r\n                            No hay resultados para la búsqueda realizada\r\n                        </Alert>\r\n                    </div>\r\n\r\n            tabla = <></>;\r\n        }\r\n\r\n        let searchtools =\r\n            <ul className={\"container-column-list\"}>\r\n                <li className={\"items-row\"}>\r\n                    <label className={\"form-label\"}>Buscar estudiante</label>\r\n                </li>\r\n                <li className={\"items-row\"}>\r\n                    <input type=\"text\" name=\"searchName\" onChange={this.handleChangeSearch} />\r\n                </li>\r\n                <li className={\"items-row\"}>\r\n                    <img src=\"../../search.png\" alt=\"\" />\r\n                </li>\r\n                <li className={\"items-row\"}>\r\n                    <label className={\"form-label\"}>Escoja cómo buscar</label>\r\n                </li>\r\n                <li className={\"items-row\"}>\r\n                    <select name=\"searchType\" id=\"searchType\" onChange={this.handleChangeSearchType}>\r\n                        <option value=\"nombre\">Nombre</option>\r\n                        <option value=\"email\">Email</option>\r\n                    </select>\r\n                </li>\r\n            </ul>;\r\n\r\n        if (this.state.currentUserRole == \"A\") {\r\n            searchtools =\r\n                <ul className={\"flex-row\"}>\r\n                    <li className={\"flex-item-form\"}>\r\n                        <div className={\"form-select\"}>\r\n                            <label className={\"form-label\"}>Buscar estudiante<img src=\"../../search.png\" alt=\"\" /></label>\r\n                            <input type=\"text\" name=\"searchName\" onChange={this.handleChangeSearch} />\r\n                        </div>\r\n                    </li>\r\n                    <li className={\"flex-item-form\"}>\r\n                        <div className={\"form-select\"}>\r\n                            <label className={\"form-label\"}>Escoja cómo buscar</label>\r\n                            <select name=\"searchType\" id=\"searchType\" onChange={this.handleChangeSearchType}>\r\n                                <option value=\"nombre\">Nombre</option>\r\n                                <option value=\"email\">Email</option>\r\n                            </select>\r\n                        </div>\r\n                    </li>\r\n                    <li className={\"flex-item-form\"}>\r\n                        <div className={\"form-select\"}>\r\n                            <label className={\"form-label\"}>Buscar por rol</label>\r\n                            <select name=\"searchRole\" id=\"searchRole\" onChange={this.handleChangeSearchRole}>\r\n                                <option value=\"none\">Todos</option>\r\n                                <option value=\"S\">Estudiantes</option>\r\n                                <option value=\"T\">Profesores</option>\r\n                                <option value=\"A\">Administradores</option>\r\n                            </select>\r\n                        </div>\r\n                    </li>\r\n                </ul>\r\n        }\r\n        const { showListApplicants, showApplicantsGroups } = this.state;\r\n        return (\r\n            <div className=\"container\">\r\n                <Card className=\"card-long\">\r\n                    <Card.Body>\r\n                        <div className={\"row-edit\"}>\r\n                            <div className={\"section-title\"}>\r\n                                <h2>Lista de solicitantes</h2>\r\n                            </div>\r\n                            <br />\r\n                            <Alert variant={\"info\"}>\r\n                                <img src=\"/info.png\" alt=\"\" />\r\n                                Desde este espacio puede ver las solicitudes.\r\n                            </Alert>\r\n                            <br />\r\n                        </div>\r\n\r\n                        {header}\r\n                        {showListApplicants ? (\r\n\r\n                                <div className={\"row-edit\"}>\r\n                                    {searchtools}\r\n                                    <Card className={\"card-long\"}>\r\n                                    <Card.Body>\r\n                                        {cartel}\r\n                                        {tabla}\r\n                                    </Card.Body>\r\n                                    </Card>\r\n                                </div>\r\n                        ) : (\r\n                            <div className=\"row-edit\">\r\n                                <Alert variant={\"danger\"}>\r\n                                    No hay solicitantes para mostrar\r\n                                </Alert>\r\n                            </div>\r\n                        )}\r\n                        <br/>\r\n\r\n                        {headerGroups}\r\n                        {showApplicantsGroups ? (\r\n\r\n                                <div className={\"row-edit\"}>\r\n                                    <Card className={\"card-long\"}>\r\n                                    <Card.Body>\r\n                                        {tablaGroups}\r\n                                    </Card.Body>\r\n                                    </Card>\r\n                                </div>\r\n                        ) : (\r\n                            <div className=\"row-edit\">\r\n                                <Alert variant={\"danger\"}>\r\n                                    No hay solicitantes para mostrar\r\n                                </Alert>\r\n                            </div>\r\n                        )}\r\n                        <br/>\r\n                    </Card.Body>\r\n                </Card>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SearchStudentRes;","const linksTeacher = [\r\n\r\n    {\r\n        path: \"/groups\",\r\n        name: \"Grupos\",\r\n        icon:\"/group.png\",\r\n        id: \"groups\"\r\n\r\n    },\r\n    {\r\n        path: \"/students\",\r\n        name: \"Estudiantes\",\r\n        icon:\"/students.png\",\r\n        id: \"Estudiantes\"\r\n    },\r\n    {\r\n        path: \"/applicants\",\r\n        name: \"Solicitantes\",\r\n        icon:\"/add-user.png\",\r\n        id: \"Solicitantes\"\r\n    },\r\n    {\r\n        path: \"/createGroup\",\r\n        name: \"Crear Grupo\",\r\n        icon: \"/add-member.png\",\r\n        id: \"createGroup\"\r\n    },\r\n    {\r\n        path: \"/collections\",\r\n        name: \"Colecciones\",\r\n        icon: \"/collection.png\",\r\n        id: \"coleccionesProfesor\"\r\n    }\r\n];\r\n\r\nexport default linksTeacher;","/*\r\n*  Name_file :ProfileInfo.js\r\n*  Description: Contiene los datos de un usuario segun un ID dado.\r\n*    \r\n*/\r\n\r\nimport React, { Component } from 'react';\r\nimport AuthUser from '../../../services/authenticity/auth-service.js';\r\nimport TeacherService from '../../../services/teacher/teacherService.js';\r\nimport AdminService from '../../../services/admin/adminService.js';\r\n\r\n/**Estilos */\r\nimport Card from 'react-bootstrap/Card';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Alert from 'react-bootstrap/Alert';\r\n\r\n/**Estilos CSS*/\r\nimport '../../../styles/styleGeneral.css';\r\nimport '../../../styles/styleCard.css';\r\n\r\nclass ProfileInfo extends Component {\r\n    \r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            data: [],\r\n            teacherGroupData: [],\r\n            studentGroupData: [],\r\n            finalGroupData:[],\r\n            finalGroupKickData:[],\r\n            currentUserId: '',\r\n            currentUserRole: '',\r\n            groupSelect: \"-1\",\r\n            groupKickSelect: \"-1\"\r\n    \r\n        };\r\n    }\r\n\r\n\r\n    /*Se hacen peticiones al servidor para que me devuelva los datos del estudiante*/\r\n    peticionGet() {\r\n        TeacherService.getProfile(this.props.idStudent).then(response => {\r\n              this.setState({data:response});\r\n              this.props.handler();\r\n        }).catch(error => {\r\n            console.log(error.message);\r\n        })\r\n    }\r\n\r\n    /*Se hacen peticiones al servidor para que me devuelva todos los grupos del profesor*/\r\n    peticionGetGruposTeacher(id) {\r\n      \r\n        TeacherService.getGroups(id).then(response => {\r\n            this.setState({ teacherGroupData: response });\r\n            this.peticionGetGruposStudent();\r\n        }).catch(error => {\r\n            console.log(error.message);\r\n        })\r\n    }\r\n\r\n    /*Se hacen peticiones al servidor para que me devuelva todos los grupos (FUNCION ADMIN)*/\r\n    peticionGetAllGroups() {\r\n      \r\n        AdminService.getAllGroups().then(response => {\r\n            this.setState({ teacherGroupData: response });\r\n            this.peticionGetGruposStudent();\r\n        }).catch(error => {\r\n            console.log(error.message);\r\n        })\r\n    }\r\n\r\n    /*Se hacen peticiones al servidor para que me devuelva todos los grupos del alumno*/\r\n    peticionGetGruposStudent() {\r\n\r\n        TeacherService.getGroupsStudent(this.props.idStudent).then(response =>{ \r\n            this.setState({ studentGroupData: response });\r\n            this.filterGroupData();\r\n        }).catch(error => {\r\n            console.log(error.message);\r\n        })\r\n\r\n    }\r\n\r\n    //Filtra los grupos para eliminar los mismos que ya tiene el estudiante\r\n    filterGroupData = () =>{\r\n        let finalGroups = [];\r\n\r\n        for(let i = 0; i < this.state.teacherGroupData.length; i++){\r\n            let unico = true;\r\n            for(let j = 0; j < this.state.studentGroupData.length; j++){\r\n                if(this.state.teacherGroupData[i].id == this.state.studentGroupData[j].id){\r\n                    unico = false;\r\n                }\r\n            }\r\n            if(unico){\r\n                finalGroups.push(this.state.teacherGroupData[i]);\r\n            }\r\n        }\r\n        this.setState({finalGroupData: finalGroups})\r\n        this.filterGroupKickData();\r\n    }\r\n\r\n    //Filtra los grupos para dejar sólo los mismos que ya tiene el estudiante\r\n    filterGroupKickData = () =>{\r\n        let finalGroups = [];\r\n\r\n        for(let i = 0; i < this.state.teacherGroupData.length; i++){\r\n            let unico = true;\r\n            for(let j = 0; j < this.state.studentGroupData.length; j++){\r\n                if(this.state.teacherGroupData[i].id == this.state.studentGroupData[j].id){\r\n                    unico = false;\r\n                }\r\n            }\r\n            if(unico === false){\r\n                finalGroups.push(this.state.teacherGroupData[i]);\r\n            }\r\n        }\r\n        this.setState({finalGroupKickData: finalGroups})\r\n        \r\n    }\r\n\r\n    /*Detecta un cambio en el valor del grupo a escoger */\r\n    handleChangeGroupSelect = async e => {\r\n        await this.setState({\r\n                [e.target.name]: e.target.value\r\n        });\r\n    }\r\n\r\n    /*Detecta un cambio en el valor del grupo a escoger */\r\n    handleChangeGroupKickSelect = async e => {\r\n        await this.setState({\r\n                [e.target.name]: e.target.value\r\n        });\r\n    }\r\n\r\n    /*Detecta un cambio en el valor del grupo a escoger */\r\n    handleChangeCurrentUserId = (dataUser)=> {\r\n        this.setState({\r\n            currentUserId: dataUser.id\r\n        });\r\n        this.handleChangeCurrentUserRole(dataUser);\r\n    }\r\n\r\n    /*Detecta un cambio en el valor del grupo a escoger */\r\n    handleChangeCurrentUserRole = (dataUser)=> {\r\n        this.setState({\r\n            currentUserRole: dataUser.rol\r\n        });\r\n\r\n        this.peticionGet();\r\n        if(dataUser.rol == \"A\"){//ADMIN\r\n            this.peticionGetAllGroups();\r\n        }\r\n        else{//PROFESOR\r\n            this.peticionGetGruposTeacher(dataUser.id);\r\n        }\r\n        \r\n    }\r\n\r\n    /*Cargo todos los datos que necesito nada más cargar la página, como los datos del usuario o los grupos.*/\r\n   componentDidMount() {\r\n    const dataUser = AuthUser.getCurrentUser();\r\n    this.handleChangeCurrentUserId(dataUser);\r\n     \r\n   }\r\n\r\n    //Acepta al estudiante como usuario de la aplicación.\r\n    acceptApplicant(idApplicant) {\r\n        \r\n        TeacherService.acceptApplicantStudent(idApplicant)\r\n        .then(response=>{\r\n            this.peticionGet();\r\n        }).catch(error => {\r\n            console.log(error.message);\r\n        })\r\n     }\r\n\r\n     /*Se hacen peticiones al servidor para invitar al estudiante al grupo*/\r\n     inviteToGroup = (idGroup) => {\r\n        TeacherService.inviteToGroup(idGroup,this.props.idStudent).then(response =>{\r\n            if(this.state.currentUserRole ==\"A\")\r\n            {\r\n                this.peticionGetAllGroups();\r\n            }\r\n            else{\r\n                this.peticionGetGruposTeacher(this.state.currentUserId);\r\n            }\r\n            this.setState({groupSelect: \"-1\"});\r\n            this.peticionGet();\r\n        }).catch(error => {\r\n              console.log(error.message);\r\n        })\r\n     }\r\n\r\n    /*Se hacen peticiones al servidor para expulsar al estudiante del grupo*/\r\n    kickFromGroup = (idGroup) => {\r\n         \r\n        TeacherService.kickFromGroup(idGroup,this.props.idStudent).then(response => {\r\n            if(this.state.currentUserRole ==\"A\")\r\n            {\r\n                this.peticionGetAllGroups();\r\n            }\r\n            else{\r\n                this.peticionGetGruposTeacher(this.state.currentUserId);\r\n            }\r\n            this.setState({groupKickSelect: \"-1\"});\r\n            this.peticionGet();\r\n        }).catch(error => {\r\n             console.log(error.message);\r\n        })\r\n    }\r\n\r\n    /*Se hacen peticiones al servidor para desactivar al usuario*/\r\n    deactivateUser = (id) => {\r\n        AdminService.deactivateUser(id).then(response => {\r\n            this.peticionGet();\r\n        }).catch(error => {\r\n            console.log(error.message);\r\n        })\r\n    }\r\n\r\n    /*Se hacen peticiones al servidor para eliminar al usuario*/\r\n    deleteUser = (id) => {\r\n        AdminService.deleteUser(id).then(response => {\r\n            window.location.href = '/homeadmin';\r\n        }).catch(error => {\r\n            console.log(error.message);\r\n        })\r\n    }\r\n\r\n    /*Dibuja la pagina  */\r\n    render() {\r\n\r\n        let fotoSource = \"/chicaliteratura.png\";\r\n        let imagenUser = <img src={fotoSource} alt=\"\" className={\"figure-profile\"} ></img>\r\n\r\n        if(this.state.data.ruta != undefined)\r\n        {\r\n            if(this.state.data.ruta != \"\")\r\n            {\r\n                fotoSource = this.state.data.ruta;\r\n                imagenUser = <img src={fotoSource} alt=\"\" className={\"figure-profile\"} ></img>\r\n            }\r\n        }\r\n\r\n        let cartel =<></>;\r\n        let contenido = <div className={\"row-edit\"}>\r\n                            <br/>\r\n                             <ul className={\"flex-row\"}>\r\n                                <li className={\"items-row\"}>\r\n                                    {imagenUser}\r\n                                 </li>\r\n                                 <li className={\"items-row\"}>\r\n                                     <ul className={\"container-column-list wrap\"}>\r\n                                        <li className={\"flex-item-data\"}>\r\n                                            <h3>{this.state.data.nombre}</h3>  <h3>{this.state.data.apellidos}</h3>\r\n                                        </li>\r\n                                     </ul>\r\n                                     <div className={\"email-profile\"}>\r\n                                         <h5>{this.state.data.correo}</h5>\r\n                                     </div>\r\n                                 </li>\r\n                             </ul>\r\n                        </div>;\r\n\r\n        let invitaGrupo = <div className={\"row-edit\"}>\r\n            <ul className={\"container-column-list wrap\"}>\r\n                <li className={\"flex-item-profile\"}>\r\n                    <label className={\"form-label\"} htmlFor=\"groupSelect\">Invitar a un grupo</label>\r\n                </li>\r\n                <li className={\"flex-item-profile\"}>\r\n                    <select name=\"groupSelect\" id=\"groupSelect\" onChange={this.handleChangeGroupSelect}>\r\n                        <option value= \"-1\" >Elija un grupo</option>\r\n                        {this.state.finalGroupData.map(group => {\r\n                            return (\r\n                                <option value={group.id}>{group.nombre}</option>\r\n                            )\r\n                        })}\r\n                    </select>\r\n                </li>\r\n                <li className={\"flex-item-profile\"}>\r\n                    <Button size={\"sm\"}  text='Invitar a grupo' onClick={() => this.inviteToGroup(this.state.groupSelect)}>\r\n                        Invitar\r\n                    </Button>\r\n                </li>\r\n            </ul>\r\n        </div>;\r\n\r\n\r\n        if(this.state.groupSelect === \"-1\"){\r\n            invitaGrupo =\r\n            <div className={\"row-edit\"}>\r\n                <ul className={\"container-column-list wrap\"}>\r\n                    <li className={\"flex-item-profile\"}>\r\n                        <label className={\"form-label\"} htmlFor=\"groupSelect\">Invitar a un grupo</label>\r\n                    </li>\r\n                    <li className={\"flex-item-profile\"}>\r\n                        <select name=\"groupSelect\" id=\"groupSelect\" onChange={this.handleChangeGroupSelect}>\r\n                            <option selected value= \"-1\" >Elija un grupo</option>\r\n                            {this.state.finalGroupData.map(group => {\r\n                                return (\r\n                                    <option value={group.id}>{group.nombre}</option>\r\n                                )\r\n                            })}\r\n                        </select>\r\n                    </li>\r\n                    <li className={\"flex-item-profile\"}>\r\n                        <Button  size={\"sm\"} disabled text='Invitar a grupo' onClick={() => this.inviteToGroup(this.state.groupSelect)}>\r\n                            Invitar\r\n                        </Button>\r\n                    </li>\r\n                </ul>\r\n            </div>;\r\n        }\r\n\r\n        let echaGrupo = \r\n        <div className={\"row-edit\"}>\r\n            <ul className={\"container-column-list wrap\"}>\r\n                <li className={\"flex-item-profile\"}>\r\n                    <label className={\"form-label\"} htmlFor=\"groupKickSelect\">Expulsar de un grupo</label>\r\n                </li>\r\n                <li className={\"flex-item-profile\"}>\r\n                    <select name=\"groupKickSelect\" id=\"groupKickSelect\" onChange={this.handleChangeGroupKickSelect}>\r\n                        <option value= \"-1\" >Elija un grupo</option>\r\n                        {this.state.finalGroupKickData.map(group => {\r\n                            return (\r\n                                <option value={group.id}>{group.nombre}</option>\r\n                            )\r\n                        })}\r\n                    </select>\r\n                </li>\r\n                <li className={\"flex-item-profile\"}>\r\n                    <Button size={\"sm\"} text='Expulsar del grupo' onClick={() => this.kickFromGroup(this.state.groupKickSelect)}>\r\n                        Expulsar\r\n                    </Button>\r\n                </li>\r\n            </ul>\r\n        </div>;\r\n\r\n        if(this.state.groupKickSelect === \"-1\"){\r\n            echaGrupo = \r\n                <div className={\"row-edit\"}>\r\n                    <ul className={\"container-column-list wrap\"}>\r\n                        <li className={\"flex-item-profile\"}>\r\n                            <label className={\"form-label\"} htmlFor=\"groupKickSelect\">Expulsar del grupo</label>\r\n                        </li>\r\n                        <li className={\"flex-item-profile\"}>\r\n                            <select name=\"groupKickSelect\" id=\"groupKickSelect\" onChange={this.handleChangeGroupKickSelect}>\r\n                                <option selected value= \"-1\" >Elija un grupo</option>\r\n                                {this.state.finalGroupKickData.map(group => {\r\n                                    return (\r\n                                        <option value={group.id}>{group.nombre}</option>\r\n                                    )\r\n                                })}\r\n                            </select>\r\n                        </li>\r\n                        <li className={\"flex-item-profile\"}>\r\n                            <Button  size={\"sm\"} disabled text='Expulsar del grupo' onClick={() => this.kickFromGroup(this.state.groupKickSelect)}>\r\n                                Expulsar\r\n                            </Button>\r\n                        </li>\r\n                    </ul>\r\n                </div>;\r\n        }\r\n\r\n        let botonDesactivar = <></>;\r\n        let botonEliminar = <></>;\r\n\r\n\r\n        //      RESTRICCIONES POR USUARIO LOGUEADO\r\n\r\n        if(this.state.currentUserRole == \"A\")\r\n        {\r\n\r\n            botonDesactivar =\r\n                    <div className={\"form-button\"}>\r\n                        <Button size={\"sm\"} text='Desactivar usuario' onClick={() => this.deactivateUser(this.state.data.id)}>\r\n                            Desactivar usuario\r\n                        </Button>\r\n                    </div>\r\n\r\n\r\n            botonEliminar =\r\n                    <div className={\"form-button\"}>\r\n                        <Button\r\n                            variant={\"danger\"}\r\n                            size={\"sm\"}\r\n                            text='Eliminar usuario'\r\n                            onClick={() =>\r\n                        {if(window.confirm('El usuario '+ this.state.data.nombre + ' '+ this.state.data.apellidos\r\n                            +' y todos sus grupos, escritos, equipos y desafíos se eliminarán de forma permanente de la base de datos. ESTA ACCIÓN ES IRREVERSIBLE. ¿Eliminar usuario?'))\r\n                        {this.deleteUser(this.state.data.id)};}}>\r\n                           Denegar solicitud\r\n                        </Button>\r\n                    </div>\r\n\r\n        }\r\n        if(this.state.currentUserRole == \"S\")\r\n        {\r\n            invitaGrupo = <></>;\r\n            echaGrupo = <></>;\r\n        }\r\n\r\n        //      RESTRICCIONES POR EL USUARIO QUE VEO\r\n\r\n        if(this.state.data.rol == \"A\")\r\n            //SI EL USUARIO QUE VEO ES ADMIN NO LO PUEDO MODIFICAR\r\n        {\r\n            invitaGrupo = <></>;\r\n            echaGrupo = <></>;\r\n            botonDesactivar = <></>;\r\n            botonEliminar =<></>;\r\n        }\r\n\r\n        if(this.state.data.rol == \"T\")\r\n            //SI EL USUARIO QUE VEO ES PROFESOR NO PUEDO MODIFICAR A QUE GRUPOS PERTENECE\r\n        {\r\n            invitaGrupo = <></>;\r\n            echaGrupo = <></>;\r\n        }\r\n\r\n        // RESTRICCIONES PARA SOLICITANTES\r\n        if(this.state.data.activo === 0)\r\n        {\r\n            cartel = <div className={\"row-edit\"}>\r\n                         <div className={\"form-select\"}>\r\n                             <label className={\"form-label\"} htmlFor=\"\">Estudiantes aún en espera de ser aceptados.</label>\r\n                         </div>\r\n                     </div>;\r\n            contenido = <div className={\"row-edit\"}>\r\n                            <ul className={\"container-column-list wrap\"} >\r\n                                <li className={\"flex-item-list\"}>\r\n                                    {this.state.data.nombre} {this.state.data.apellidos}\r\n                                </li>\r\n                                <li  className={\"flex-item-list\"} >\r\n                                    {this.state.data.correo}\r\n                                </li>\r\n                                <li className={\"flex-item-list\"} >\r\n                                    <div className={\"form-button-column\"}>\r\n                                        <Button size={\"sm\"} text='Aceptar solicitud' onClick={() => this.acceptApplicant(this.state.data.id)}>\r\n                                            Aceptar solicitud\r\n                                        </Button>\r\n                                    </div>\r\n                                </li>\r\n                            </ul>\r\n                        </div>;\r\n\r\n            invitaGrupo = <></>;\r\n            echaGrupo = <></>;\r\n            botonDesactivar = <></>;\r\n        }\r\n\r\n        return (\r\n            <Card className={\"card-long\"}>\r\n                <Card.Body>\r\n                        {cartel}\r\n                        {contenido}\r\n                        {invitaGrupo}\r\n                        {echaGrupo}\r\n                        <div className={\"row-edit\"}>\r\n                            <hr/>\r\n                            {botonDesactivar}\r\n                            {botonEliminar}\r\n                        </div>\r\n                </Card.Body>\r\n            </Card>\r\n        );\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default ProfileInfo;","/*\r\n*  Name_file :ProfileScripts.js\r\n*  Description: Componente que contiene la lista de escritos del estudiante\r\n*/\r\nimport React, { Component } from 'react';\r\nimport TeacherService from \"../../../services/teacher/teacherService.js\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n/**Estilos CSS*/\r\nimport '../../../styles/ScriptList.css';\r\n\r\n/**Estilos bootstrap*/\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Alert from \"react-bootstrap/Alert\";\r\nimport Card from \"react-bootstrap/Card\";\r\n\r\nclass GroupTeacher extends Component {\r\n\r\n     constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            data: [],\r\n            filteredData:[],\r\n            searchKey: '',\r\n            searchType: 'nombre'\r\n        };\r\n\r\n     }\r\n    \r\n\r\n    /*Se hacen peticiones al servidor para que me devuelva la tabla desafios, me muestra todos los desafios del grupo seleccioando \r\n    por el profesor*/\r\n    peticionGet = () => {\r\n        TeacherService.getScriptsByStudent(this.props.idStudent).then(response => {\r\n            console.log(response);//muestra consola navegador\r\n            this.setState({ data: response });\r\n            console.log(response);\r\n            this.setState({ filteredData: response });\r\n        }).catch(error => {\r\n            console.log(error.message);\r\n        })\r\n    }\r\n\r\n    //Filtra los datos de los escritos buscados para solo buscar en la base de datos una vez\r\n    filterData = () =>{\r\n        let auxArray = [];\r\n        this.state.filteredData = [];\r\n        for(let i = 0; i < this.state.data.length; i++){\r\n            if(this.state.searchType == \"titulo\")\r\n            {\r\n                if(new RegExp( this.state.searchKey, 'i'  ).test(this.state.data[i].titulo))\r\n                {\r\n                    auxArray.push(this.state.data[i]);\r\n                }\r\n            }\r\n            else\r\n            {\r\n                if((new RegExp(this.state.searchKey, 'i' ).test(this.state.data[i].nombre)) )\r\n                {\r\n                    auxArray.push(this.state.data[i]);\r\n                }\r\n            }\r\n        }\r\n        this.setState({ filteredData: auxArray });\r\n    }\r\n\r\n    /*Lo que escribamos en el input lo guarda en el state async para que lo veamos en tiempo real */\r\n    handleChangeSearch = async e => {\r\n        await this.setState({\r\n                [e.target.name]: e.target.value\r\n        });\r\n        this.filterData();\r\n    }\r\n\r\n    /*Lo que escribamos en el input lo guarda en el state async para que lo veamos en tiempo real */\r\n    handleChangeSearchType = async e => {\r\n        await this.setState({\r\n                [e.target.name]: e.target.value\r\n        });\r\n        this.filterData();\r\n    }\r\n\r\n\r\n    /*Si vuelvo a la pagina de login, comprueba si el usuario ya inicio sesion anteriomente\r\n   si es el caso lo redirige a la home segun su rol*/\r\n    componentDidMount() {\r\n        this.peticionGet();\r\n    }\r\n\r\n    /*Dibuja la pagina  */\r\n    render() {\r\n        let cartel =<></>;\r\n        let tabla =\r\n        <div className = \"scriptList\">\r\n        \r\n            {this.state.filteredData.map(script => {\r\n                return (\r\n                <div className =\"scriptCardContainer\">\r\n                    <Link to={`/teacher/editWriting/${script.idGrupo}/${script.idDesafio}/${script.id}/${script.idEscritor}`}>\r\n                        <Card\r\n                            key={script.idGrupo}\r\n                            style={{ width: '18rem' }}\r\n                            className=\"mb-2\"\r\n                            bg={'Light'}\r\n                        >\r\n                            <Card.Header>\r\n                                <h5>{script.nombre}</h5>\r\n                            </Card.Header>\r\n                            <Card.Body>\r\n                                <Card.Title>\r\n                                    <h6>Desafío</h6>\r\n                                </Card.Title>\r\n                                <Card.Text>\r\n                                    <h5>{script.titulo}</h5>\r\n                                </Card.Text>\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </Link>\r\n                </div>\r\n                )\r\n            })}\r\n\r\n    </div>\r\n    ;\r\n        if(this.state.filteredData.length === 0)\r\n        {\r\n            cartel = <div className={\"row-edit\"}>\r\n                        <Alert variant={\"danger\"}>\r\n                            No hay resultados para la búsqueda realizada.\r\n                        </Alert>\r\n                    </div>;\r\n            tabla = <></>;\r\n        }\r\n\r\n\r\n        return (\r\n            <>\r\n                <ul className={\"container-column-list\"}>\r\n                    <li className={\"items-row\"}>\r\n                        <label className={\"form-label\"}>Buscar estudiante</label>\r\n                    </li>\r\n                    <li className={\"items-row\"}>\r\n                        <input type=\"text\" name=\"searchKey\" onChange={this.handleChangeSearch} />\r\n                    </li>\r\n                    <li className={\"items-row\"}>\r\n                        <img src=\"/search.png\" alt=\"\" />\r\n                    </li>\r\n                    <li className={\"items-row\"}>\r\n                        <label  className={\"form-label\"} htmlFor=\"searchType\">Escoja cómo buscar</label>\r\n                    </li>\r\n                    <li className={\"items-row\"}>\r\n                        <select name=\"searchType\" id=\"searchType\" onChange={this.handleChangeSearchType}>\r\n                            <option value=\"nombre\">Nombre</option>\r\n                            <option value=\"titulo\">Título</option>\r\n                        </select>\r\n                    </li>\r\n                </ul>\r\n                <div className={\"row-edit\"}>\r\n                    {cartel}\r\n                    {tabla}\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default GroupTeacher;","/*\r\n*  Name_file :TeacherGroups.js\r\n*  Description: Pagina que lista los grupos creados por un profesor\r\n*  que tiene el grupo seleccionado por el profesor  \r\n*/\r\n\r\nimport React, { Component } from 'react';\r\nimport { Link} from \"react-router-dom\";\r\nimport adminService from '../../../services/admin/adminService';\r\n\r\n/** Estilos CSS*/\r\nimport '../../../styles/styleGeneral.css';\r\nimport '../../../styles/styleCard.css';\r\n\r\n/**Estilos bootstrap*/\r\nimport Card from 'react-bootstrap/Card';\r\nimport Button  from 'react-bootstrap/Button';\r\nimport Alert from 'react-bootstrap/Alert';\r\n\r\n\r\nclass GroupList extends Component {\r\n\r\n    state = {\r\n        data: [],\r\n        filteredData: [],\r\n        searchKey: '',\r\n        searchType: 'nombre'\r\n\r\n    }\r\n\r\n    /*Se hacen peticiones al servidor para que me devuelva todos los grupos del profesor*/\r\n    peticionGet = () => {\r\n        adminService.getGroupsOfTeacher(this.props.idStudent).then(response => {\r\n            this.setState({ data: response });\r\n            this.filterData();\r\n        }).catch(error => {\r\n            console.log(error.message);\r\n        })\r\n    }\r\n\r\n    /*Se llama a esta función nada más cargar la página*/\r\n    componentDidMount() {\r\n        this.peticionGet();\r\n    }\r\n\r\n    /*Lo que escribamos en el input lo guarda en el state async para que lo veamos en tiempo real */\r\n    handleChangeSearch = async e => {\r\n        await this.setState({\r\n                [e.target.name]: e.target.value\r\n        });\r\n        this.filterData();\r\n    }\r\n\r\n    //Filtra los datos de los escritos buscados para solo buscar en la base de datos una vez\r\n    filterData = () =>{\r\n        let auxArray = [];\r\n        this.state.filteredData = [];\r\n        for(let i = 0; i < this.state.data.length; i++){\r\n                if((new RegExp(this.state.searchKey, 'i' ).test(this.state.data[i].nombre)) )\r\n                {\r\n                    auxArray.push(this.state.data[i]);\r\n                }\r\n        }\r\n        this.setState({ filteredData: auxArray });\r\n    }\r\n\r\n    \r\n    /*Dibuja la pagina  */\r\n    render() {\r\n\r\n        let cartel =<> </>;\r\n        let tabla = <ul className={\"flex-items-row-start wrap\"}>\r\n\r\n            {this.state.filteredData.map((group) => \r\n                (\r\n\r\n                    <li className={\"items-row\"}>\r\n                        <ul className={\"container-column-list wrap\"}>\r\n                            <li className={\"flex-item-list\"}>\r\n                                <img src=\"/team_black.png\" alt=\"\"/>\r\n                            </li>\r\n                            <li className={\"flex-item-list\"}>\r\n                                {group.nombre}\r\n                            </li>\r\n                            <li className={\"flex-item-list\"}>\r\n                                <Link key={group.id} to={`/admin/viewGroup/${group.id}`}>\r\n                                    <Button  size={\"sm\"} text='Ver Grupo'> Ver grupo </Button>\r\n                                </Link>\r\n                            </li>\r\n                        </ul>\r\n                        <hr/>\r\n                    </li>\r\n\r\n                )\r\n            )}\r\n        </ul>;\r\n\r\n        if(this.state.filteredData.length === 0)\r\n        {\r\n            cartel = <div className={\"row-edit\"}>\r\n                         <Alert variant={\"danger\"}>\r\n                             <h6>No hay resultados para la búsqueda realizada.</h6>\r\n                         </Alert>\r\n                    </div>;\r\n            tabla = <div></div>;\r\n        }\r\n\r\n        return (\r\n\r\n             <Card className=\"card-long\">\r\n                 <Card.Body>\r\n                    <div  className={\"row-edit\"}>\r\n                        <label className={\"form-label\"}>Buscar grupo</label>\r\n                        <br />\r\n                        <input type=\"text\" name=\"searchKey\" onChange={this.handleChangeSearch} />\r\n                        <img src=\"/search.png\" alt=\"\"/>\r\n                    </div>\r\n                     <br/>\r\n                        <div className={\"row-edit\"}>\r\n                            {cartel}\r\n                            {tabla}\r\n                        </div>\r\n                     <img src=\"./group.png\" alt=\"\"/>\r\n                    </Card.Body>\r\n                </Card>\r\n\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default GroupList;","/*\r\n*  Name_file :Profile.js\r\n*  Description: Contiene los datos de un usuario segun un ID dado.\r\n*    \r\n*/\r\n\r\nimport React, { Component } from 'react';\r\nimport TeacherService from '../../../services/teacher/teacherService.js';\r\nimport Datos from \"./ProfileInfo\";\r\nimport Escritos from \"./ProfileScripts\";\r\nimport Grupos from \"./TeacherGroups\";\r\n\r\n/**Estilos bibliotecas externas*/\r\nimport  Card from 'react-bootstrap/Card';\r\nimport { Tab, Tabs, TabList, TabPanel } from 'react-tabs';\r\nimport Alert from 'react-bootstrap/Alert';\r\n\r\n/**Estilos css*/\r\nimport 'react-tabs/style/react-tabs.css';\r\nimport '../../../styles/styleGeneral.css';\r\nimport '../../../styles/styleCard.css';\r\n\r\n\r\nclass Profile extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.handler = this.handler.bind(this);\r\n        this.state = {\r\n            ventana: 1,\r\n            data: [],\r\n        };\r\n    }\r\n\r\n    //Permite refrescar la página desde abajo\r\n    handler() {\r\n       this.peticionGet();\r\n      }\r\n\r\n    cambiaVentana = (opcion) =>{\r\n        this.setState({ventana : opcion});\r\n    }\r\n\r\n    /*Se hacen peticiones al servidor para que me devuelva los datos del estudiante*/\r\n    peticionGet() {\r\n       \r\n        TeacherService.getProfile(this.props.match.params.idStudent).then(response => {\r\n              this.setState({data:response});\r\n        }).catch(error => {\r\n            console.log(error.message);\r\n        })\r\n    }\r\n\r\n    componentDidMount() {\r\n         this.peticionGet();\r\n       }\r\n\r\n    /*Dibuja la pagina  */\r\n    render() {\r\n        \r\n       let idStudent = this.props.match.params.idStudent;\r\n\r\n       let tabs =   <TabList>\r\n                        <Tab>DATOS</Tab>\r\n                        <Tab>ESCRITOS</Tab>\r\n                    </TabList>;\r\n\r\n        if(this.state.data.rol == \"T\"){\r\n            tabs =   <TabList>\r\n                        <Tab>DATOS</Tab>\r\n                        <Tab>GRUPOS</Tab>\r\n                    </TabList>;\r\n        }\r\n\r\n        if(this.state.data.rol == \"A\"){\r\n            tabs =   <TabList>\r\n                        <Tab>DATOS</Tab>\r\n                    </TabList>;\r\n        }\r\n\r\n        if(this.state.data.activo === 0){\r\n            tabs =   <TabList>\r\n                        <Tab>DATOS</Tab>\r\n                    </TabList>;\r\n        }\r\n\r\n        let secondTab = <Escritos key={idStudent} idStudent={idStudent}/>;\r\n\r\n        if(this.state.data.rol == \"T\"){ //COMPLETAR LUEGO CON LA VISTA DE GRUPOS \r\n            secondTab = <Grupos key={idStudent} idStudent={idStudent}/> ;\r\n        }\r\n\r\n        return (\r\n           <div className=\"container\">\r\n               <Card className=\"card-long\">\r\n                   <Card.Body>\r\n                       <div className={\"row-edit\"}>\r\n                           <div className={\"section-title\"}>\r\n                               <h2>Perfil del estudiante</h2>\r\n                           </div>\r\n                           <br/>\r\n                           <Alert variant={\"info\"}>\r\n                               <img src=\"/info.png\" alt=\"\"/>\r\n                                Puede usar este espacio para ver los escritos del estudiantes o aplicar otras opciones.\r\n                           </Alert>\r\n                       </div>\r\n                       <div className={\"row-edit\"}>\r\n                           <Tabs>\r\n                               {tabs}\r\n                               <TabPanel>\r\n                                   <Datos key={idStudent} idStudent={idStudent} handler ={this.handler}/>\r\n                               </TabPanel>\r\n                               <TabPanel>\r\n                                   {secondTab}\r\n                               </TabPanel>\r\n                           </Tabs>\r\n                       </div>\r\n                   </Card.Body>\r\n               </Card>\r\n           </div>\r\n        );\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default Profile;","/*\r\n*  Name_file :EditWriting.js\r\n*  Description: Pagina de editar Escrito\r\n*/\r\n\r\nimport React, { Component } from 'react';\r\nimport { Link } from \"react-router-dom\";\r\n\r\n/*Importaciones del editor */\r\nimport { Editor } from \"react-draft-wysiwyg\";\r\nimport { EditorState, convertToRaw } from \"draft-js\";\r\nimport \"react-draft-wysiwyg/dist/react-draft-wysiwyg.css\";\r\nimport draftToHtml from \"draftjs-to-html\";\r\nimport { stateFromHTML } from 'draft-js-import-html';// escribe el 'html' en el editor\r\n// import EditorText from '../../TextEditor/TextEditor.js';\r\n\r\n/**Datos del usuario */\r\nimport AuthUser from '../../../services/authenticity/auth-service.js';\r\n\r\n/**Servicios del estudiante */\r\nimport TeacherService from '../../../services/teacher/teacherService.js';\r\n\r\n/*Importacion del css*/\r\nimport '../../../styles/Writing.css';\r\nimport '../../../styles/Challenge.css';\r\nimport '../../../styles/styleGeneral.css';\r\nimport '../../../styles/styleCard.css';\r\n\r\n/*Componentes de estilo Bootstrap*/\r\nimport ListGroup from 'react-bootstrap/ListGroup';\r\nimport Alert from 'react-bootstrap/Alert';\r\nimport Card from 'react-bootstrap/Card';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Modal from 'react-bootstrap/Modal';\r\n\r\nclass EditWriting extends Component {\r\n    \r\n    constructor(props) {\r\n        super(props);\r\n        this.onFileChange = this.onFileChange.bind(this);\r\n        this.state = {\r\n            imgCollection: [],//array de ficheros multimedia\r\n            dataTeamStudent: [],//contiene el equipo del estudiante\r\n            contentState: null,//editor\r\n            editorState: EditorState.createEmpty(),\r\n            challenge: '',//contiene el desafio \r\n            dataMediaChallenge: [],//array de multimedia del desafio\r\n            dataMediaWriting: [],//array de multimedia del escrito\r\n            modalDeleteFile: false,\r\n            deleteFileMedia: '',//fichero multimedia del escrito que desea ser borrado\r\n            nameDeleteFileMedia: '',//nomnbre del fichero multimedia del escrito que desea ser borrado\r\n            writing: '',\r\n            form: {\r\n                idWriter: '',\r\n                title: '',\r\n                escrito: '',\r\n                score: '',\r\n                commentary: '',\r\n                finishWriting: '',\r\n            }\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        \r\n\r\n        /*Obtiene el desafio seleccionado*/\r\n        TeacherService.getChallenge(this.props.match.params.idChallenge)\r\n            .then(response => {\r\n                this.setState({\r\n                    challenge: response[0]\r\n                });\r\n                //Si es colaborativo\r\n                if (response[0].colaborativo === 2) {\r\n                    /*Obtiene equipo del estudiante correspondiente a un grupo en concreto*/\r\n                    TeacherService.getTeamStudentGroup(this.props.match.params.idStudent, this.props.match.params.idGroup)\r\n                        .then(response => {\r\n                            this.setState({\r\n                                dataTeamStudent: response,\r\n                                form: {\r\n                                    ...this.state.form,\r\n                                    idWriter: response[0].idEquipo\r\n                                }\r\n                            });\r\n\r\n                            /*Obtiene multimedia del escrito del equipo */\r\n                            TeacherService.getMultimediaWriting(this.props.match.params.idChallenge, response[0].idEquipo)\r\n                                .then(response => {\r\n                                    this.setState({ dataMediaWriting: response.data });\r\n                                }).catch(error => {\r\n                                    console.log(error.message);\r\n                                });\r\n\r\n                        }).catch(error => {\r\n                            console.log(error.message);\r\n                        })\r\n                }\r\n                else {//si es individual\r\n                    this.setState({\r\n                        dataTeamStudent: response,\r\n                        form: {\r\n                            ...this.state.form,\r\n                            idWriter: this.props.match.params.idStudent\r\n                        }\r\n                    });\r\n\r\n                    /*Obtiene multimedia del escrito del estudiante */\r\n                    TeacherService.getMultimediaWriting(this.props.match.params.idChallenge, this.props.match.params.idStudent)\r\n                        .then(response => {\r\n                            this.setState({ dataMediaWriting: response.data });\r\n                        }).catch(error => {\r\n                            console.log(error.message);\r\n                        });\r\n                }\r\n\r\n            }).catch(error => {\r\n                console.log(error.message);\r\n            });\r\n\r\n        /*Obtiene multimedia del desafio*/\r\n        TeacherService.getMultimediaChallenge(this.props.match.params.idChallenge)\r\n            .then(response => {\r\n                this.setState({ dataMediaChallenge: response.data, });\r\n            }).catch(error => {\r\n                console.log(error.message);\r\n            });\r\n\r\n        /*Obtiene el escrito del estudiante */\r\n        TeacherService.getWriting(this.props.match.params.idWriting)\r\n            .then(response => {\r\n                var contentState = stateFromHTML(response.data[0].texto);\r\n                let editorState = EditorState.createWithContent(contentState);\r\n                // this.setState({ editorState: editorState });\r\n                this.setState({\r\n                    writing: response.data[0],\r\n                    editorState: editorState,\r\n                    form: {\r\n                        ...this.state.form,\r\n                        title: response.data[0].nombre,\r\n                        escrito: response.data[0].texto,\r\n                        score: response.data[0].puntuacion,\r\n                        commentary: response.data[0].comentario,\r\n                        finishWriting:response.data[0].finalizado\r\n                    }\r\n                });\r\n            }).catch(error => {\r\n                console.log(error.message);\r\n            });\r\n    }\r\n\r\n    //Envia el escrito editado \r\n    editWriting = () => {\r\n        /*Edita escrito del estudiante*/\r\n        TeacherService.editWriting(this.props.match.params.idWriting, this.props.match.params.idGroup, this.props.match.params.idChallenge, this.state.form.idWriter, this.state.form.title, this.state.form.escrito, this.state.form.score,this.state.form.commentary,this.state.challenge.colaborativo,this.state.form.finishWriting)\r\n            .then(response => {\r\n                window.location.href = '/teacher/groups';\r\n\r\n            })\r\n            .catch(error => {\r\n                console.log(error.message);\r\n            });\r\n    }\r\n\r\n    //Carga los ficheros multimedia del escrito \r\n    onFileChange(e) {\r\n        this.setState({ imgCollection: e.target.files });\r\n    }\r\n\r\n    //convierte la descripción del escrito a html y lo guarda en el form\r\n    editorChange = () => {\r\n        this.setState({\r\n            form: {\r\n                ...this.state.form,\r\n                escrito: draftToHtml(convertToRaw(this.state.editorState.getCurrentContent()))\r\n            }\r\n        });\r\n    };\r\n\r\n    onEditorStateChange = (editorState) => {\r\n        this.setState({\r\n            editorState\r\n        });\r\n    };\r\n\r\n    onContentStateChange = contentState => {\r\n        this.setState({\r\n            contentState\r\n        });\r\n    };\r\n\r\n    //Obtiene el nombre de los ficheros multimedia desafio/escrito\r\n    showTitle = (challenge) => {\r\n        var str = challenge.ruta;\r\n        var res = str.split(\"/\");\r\n        return res[8];\r\n    }\r\n\r\n    //Muestra modal de confirmación para eliminar fichero multimedia\r\n    askDeleteFile = (writing) => {\r\n        var str = writing.ruta;\r\n        var res = str.split(\"/\");\r\n        this.setState({\r\n            nameDeleteFileMedia: res[8],\r\n            deleteFileMedia: writing\r\n        });\r\n        this.showModalDeleteFile();\r\n    }\r\n\r\n    //Muestra el modal de eliminar fichero\r\n    showModalDeleteFile = () => {\r\n        this.setState({\r\n            modalDeleteFile: true,\r\n        });\r\n    };\r\n\r\n    //Cierra el modal de eliminar fichero\r\n    closeModalDeleteFile = () => {\r\n        this.setState(\r\n            { modalDeleteFile: false }\r\n            );\r\n    };\r\n\r\n    onChangeWritingName = e => {\r\n        this.setState({\r\n            form: {\r\n                ...this.state.form,\r\n                title: e.target.value\r\n            }\r\n        });\r\n    }\r\n    onChangeScore = e => {\r\n        this.setState({\r\n            form: {\r\n                ...this.state.form,\r\n                score: e.target.value\r\n            }\r\n        });\r\n    }\r\n\r\n    onChangeCommentary = e => {\r\n        this.setState({\r\n            form: {\r\n                ...this.state.form,\r\n                commentary: e.target.value\r\n            }\r\n        });\r\n    }\r\n\r\n    onChangeFinishWriting = e => {\r\n        this.setState({\r\n            form: {\r\n                ...this.state.form,\r\n                finishWriting: e.target.value\r\n            }\r\n        });\r\n    }\r\n\r\n    //Desactiva los componentes cuando el profesor no creo el desafio( o no es propietario del desafio)\r\n    disabledComponent= () => {\r\n       if(  AuthUser.getCurrentUser().id !==this.state.challenge.idProfesor)\r\n           return true\r\n       else\r\n       return false;\r\n    };\r\n\r\n    /*Dibuja la pagina */\r\n    render() {\r\n        const { dataMediaChallenge } = this.state;\r\n        const { dataMediaWriting } = this.state;\r\n        // const { formErrors } = this.state;\r\n        return (\r\n        <div className=\"container\">\r\n                <Card className=\"card-long\">\r\n                    <Card.Body>\r\n                    <div className={\"row-edit\"}>\r\n                        <div className={\"section-title\"}>\r\n                            <h2>Editar Desafío</h2>\r\n                        </div>\r\n                    </div>\r\n                    <div className={\"row-edit\"}>\r\n                        <label className={\"form-label\"}>Detalles del desafío</label>\r\n                    </div>\r\n                    <hr/>\r\n                    <ul className={\"flex-row\"}>\r\n                        <li className={\"flex-item-form\"}>\r\n                            <label className='form-label'>Nombre</label>\r\n                            <h6> {this.state.challenge.titulo} </h6>\r\n                        </li>\r\n                        <li className={\"flex-item-form\"}>\r\n                            <label className='form-label'>Categoria</label>\r\n                            <h6>{this.state.challenge.nombre}</h6>\r\n                        </li>\r\n                    </ul>\r\n                    <div className={\"row-edit\"}>\r\n                        <label className='form-label'>Leer la descripción del Desafío</label>\r\n                        <div className=\"challenge-inputs\"\r\n                             dangerouslySetInnerHTML={{ __html: this.state.challenge.descripcion }}>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row-edit\">\r\n                        <label className='form-label'>Ficheros Multimedia</label>\r\n                        <table>\r\n                            <tbody>\r\n                                <div className={\"table-multi\"}>\r\n                                    {dataMediaChallenge.map((challenge) => (\r\n                                        <tr key={challenge.id}>\r\n                                            <td>{this.showTitle(challenge)}</td>\r\n                                            <td>\r\n                                                <div className={\"form-button\"}>\r\n                                                    <Button onClick={() => window.open(challenge.ruta)}>Ver</Button>\r\n                                                </div>\r\n                                            </td>\r\n                                        </tr>\r\n                                    ))}\r\n                                </div>\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                    <br/>\r\n                    </Card.Body>\r\n                </Card>\r\n                <Card className=\"card-long\">\r\n                    <Card.Body>\r\n                    <div className={\"row-edit\"}>\r\n                        <label className={\"form-label\"}>Escrito del estudiante</label>\r\n                    </div>\r\n                    <hr/>\r\n                    <div className=\"row-edit\">\r\n                        <div className=\"form-inputs\">\r\n                            <label className='form-label'>Título</label>\r\n                            <input\r\n                                className=\"form-input\"\r\n                                type=\"text\"\r\n                                name=\"title\"\r\n                                placeholder=\"Escribe el título\"\r\n                                value={this.state.form.title}\r\n                                onChange={this.onChangeWritingName}\r\n                                disabled={this.disabledComponent()}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row-edit\">\r\n                        <label className='form-label' >Escrito</label>\r\n                        <Editor\r\n                            editorState={this.state.editorState}\r\n                            // toolbarClassName=\"toolbarClassName\"\r\n                            // // wrapperClassName=\"demo-wrapper\"\r\n                            // // editorClassName=\"border-edit\"\r\n                            wrapperClassName=\"wrapperClassName1\"\r\n                            editorClassName=\"editorClassName1\"\r\n                            toolbarClassName=\"toolbarClassName1\"\r\n                            onEditorStateChange={this.onEditorStateChange}\r\n                            onContentStateChange={this.onContentStateChange}\r\n                            onChange={this.editorChange}\r\n                            readOnly={this.disabledComponent()}\r\n                        />\r\n                    </div>\r\n                    <div class=\"row-edit\">\r\n                        <ul className={\"flex-row\"}>\r\n                            <li className={\"flex-item-form\"}>\r\n                                <label className='form-label'>Ficheros Multimedia</label>\r\n                                <table>\r\n                                    <tbody>\r\n                                    <div className={\"table-multi\"}>\r\n                                        {dataMediaWriting.map((writing) => (\r\n                                            <tr key={writing.id}>\r\n                                                <td>{this.showTitle(writing)}</td>\r\n                                                <td>\r\n                                                    <div className=\"form-button\">\r\n                                                        <Button size={\"sm\"} onClick={() => window.open(writing.ruta)}>Ver</Button>\r\n                                                    </div>\r\n                                                </td>\r\n                                            </tr>\r\n                                        ))}\r\n                                    </div>\r\n                                    </tbody>\r\n                                </table>\r\n                            </li>\r\n                            <li className={\"flex-item-form\"}>\r\n                                <label className='form-label'>Calificación</label>\r\n                                <td>\r\n                                    <textarea\r\n                                        rows=\"2\"\r\n                                        cols=\"10\"\r\n                                        className={\"text-area\"}\r\n                                        value={this.state.form.score}\r\n                                        onChange={this.onChangeScore}\r\n                                        style={{ resize: \"none\", textAlign: \"center\" }}\r\n                                        disabled={this.disabledComponent()} >\r\n                                    </textarea>\r\n                                </td>\r\n                            </li>\r\n                            <li className={\"flex-item-form\"}>\r\n                                <div className={\"form-select\"}>\r\n                                    <label className='form-label'>Escrito Finalizado</label>\r\n                                    <select\r\n                                        value={this.state.form.finishWriting}\r\n                                         onChange={this.onChangeFinishWriting}\r\n                                         disabled={this.disabledComponent()}\r\n                                    >\r\n                                        <option value=\"\" selected disabled hidden > Seleccionar </option>\r\n                                        <option value=\"1\" > Si </option>\r\n                                        <option value=\"0\" > No </option>\r\n                                    </select>\r\n                                </div>\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                    <div class=\"row-edit\">\r\n                        <div className={\"form-select\"}>\r\n                            <label className='form-label'>Comentarios</label>\r\n                            <td>\r\n                            <textarea\r\n                               \r\n                                rows=\"5\" cols=\"100\" value={this.state.form.commentary}\r\n                                onChange={this.onChangeCommentary}\r\n                                disabled={this.disabledComponent()}\r\n                            >\r\n                            </textarea>\r\n                            </td>\r\n                        </div>\r\n                    </div>\r\n                    <div className={\"row-edit\"}>\r\n                        <div className=\"form-select\">\r\n                            <Button text='enviar' onClick={() => this.editWriting()}> Guardar  </Button>\r\n                        </div>\r\n                        <div className=\"form-select\">\r\n                            <Button onClick={() => window.location.href = '/teacher/groups'}>Cancelar</Button>\r\n                        </div>\r\n                    </div>\r\n                    </Card.Body>\r\n                </Card>\r\n\r\n                <Modal show={this.state.modalDeleteFile}\r\n                       onHide={this.state.modalDeleteFile}>\r\n                    <Modal.Header>\r\n                        <div><h5>¿Estás seguro de eliminar {this.state.nameDeleteFileMedia}?</h5> </div>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                        <Button onClick={() => this.deleteFile(this.state.deleteFileMedia)}>Aceptar</Button>\r\n                        <Button variant=\"danger\" onClick={() => this.closeModalDeleteFile()}>Cancelar</Button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n        </div>\r\n        );\r\n    }\r\n}\r\nexport default EditWriting;","/*\r\n*  Name_file :Challenges.js\r\n*  Description: Pagina del grupo seleccionado por profesor, contiene la vista de los desafios  \r\n*  que tiene el grupo seleccionado por el profesor  \r\n*/\r\nimport React, { Component } from 'react';\r\n\r\nimport TeacherService from '../../../services/teacher/teacherService';\r\nimport moment from 'moment';\r\nimport { Link } from \"react-router-dom\";\r\n\r\n// Componentes de estilos\r\nimport Table from \"react-bootstrap/Table\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Alert from 'react-bootstrap/Alert';\r\n\r\n// Estilos\r\nimport '../../../styles/styleGeneral.css';\r\nimport '../../../styles/styleButton.css';\r\n\r\nclass Challenges extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            deleteChallenge: '',//desafio que va ser eliminado(desactivado)\r\n            modalDeleteChallenge: false,//modal para eliminar desafio\r\n            categories: [],\r\n            data: [],// Contiene todos los desafios del profesor para el grupo seleccionado\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        //Obtiene los desafios del grupo seleccionado por el profesor\r\n        TeacherService.getChallenges(this.props.groupSelect)\r\n            .then(response => {\r\n                this.setState({ data: response });\r\n            }).catch(error => {\r\n                console.log(error.message);\r\n            })\r\n\r\n        //Obtiene las categorias del desafio al iniciar\r\n        TeacherService.getCategories()\r\n            .then(response => {\r\n                this.setState({ categories: response });\r\n            }).catch(error => {\r\n                console.log(error.message);\r\n            })\r\n    }\r\n\r\n    deleteChallenge = (challenge) => {\r\n        this.closeModalDeleteChallenge();\r\n        var contador = 0;\r\n        var arreglo = this.state.data;\r\n        arreglo.map((registro) => {\r\n            if (challenge.id === registro.id) {\r\n                arreglo.splice(contador, 1);\r\n            }\r\n            contador++;\r\n        });\r\n        this.setState({ data: arreglo });\r\n        TeacherService.deleteChallenge(challenge.id).then(response => {\r\n        }).catch(error => {\r\n            console.log(error.message);\r\n        })\r\n    }\r\n\r\n    //Obtiene el nombre del desafio/escrito\r\n    showCollaborative = (challenge) => {\r\n        if (challenge.colaborativo === 1) {\r\n            return \"Individual\"\r\n        }\r\n        else {\r\n            return \"Colaborativo\"\r\n        }\r\n    }\r\n\r\n    //Muestra modal de confirmación para eliminar fichero multimedia\r\n    askDeleteChallenge = (challenge) => {\r\n        this.setState({\r\n            modalDeleteChallenge: true,\r\n            deleteChallenge: challenge\r\n        });\r\n    }\r\n\r\n    //Cierra el modal de eliminar fichero\r\n    closeModalDeleteChallenge = () => {\r\n        this.setState({ modalDeleteChallenge: false });\r\n    };\r\n\r\n    /*Dibuja la pagina  */\r\n    render() {\r\n        let formatedDate;\r\n        const { categories, data } = this.state;\r\n        let tabla = <div className=\"row-edit\">\r\n            <label className={\"form-label\"}> Listado de desafíos</label>\r\n            <Table bordered hover responsive>\r\n                <thead>\r\n                    <tr>\r\n                        <th>Titulo</th>\r\n                        <th>Categoria</th>\r\n                        <th>Tipo</th>\r\n                        <th>Fecha</th>\r\n                        <th>Hora</th>\r\n                        <th></th>\r\n                        <th></th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {data.filter(challenge => challenge.activo === 1).map((challenge, index) =>\r\n                        <tr key={challenge.id}>\r\n                            <td className=\"challenge-td\">{challenge.titulo}</td>\r\n                            {categories.filter(category => category.id === challenge.idCategoria).map((item, index) =>\r\n                                <td className=\"challenge-td\">{item.nombre}</td>\r\n                            )}\r\n                            <td className=\"challenge-td\">{this.showCollaborative(challenge)}</td>\r\n                            <td className=\"challenge-td\">{formatedDate = moment(challenge.fechaFin).format('DD/MM/YYYY')}</td>\r\n                            <td className=\"challenge-td\">{formatedDate = moment(challenge.fechaFin).format('LT')}</td>\r\n                            <td ><Link to={`/teacher/editChallenge/${this.props.groupSelect}/${challenge.id}`}><img src={\"../edit.png\"} alt={\"editar\"}></img> Editar</Link></td>\r\n                            {/* <td><img className={\"img-icon\"} src=\"../delete.png\" alt=\"delete\"></img><Link onClick={() => this.askDeleteChallenge(challenge)}>Borrar</Link></td> */}\r\n                            <td><Button size={\"sm\"} variant=\"danger\" onClick={() => this.askDeleteChallenge(challenge)}>\r\n                                    Borrar\r\n                                </Button></td>\r\n                        </tr>\r\n                    )}\r\n                </tbody>\r\n            </Table>\r\n        </div>;\r\n\r\n    if (data.length === 0)\r\n    {\r\n        tabla = <div className=\"row-edit\">\r\n                        <Alert variant={\"danger\"}>\r\n                            No hay desafíos en estos momentos.\r\n                        </Alert>\r\n                </div>;\r\n    }\r\n\r\n\r\n        return (\r\n            <Card className={\"card-long\"}>\r\n                <Card.Body>\r\n                    <div className=\"button-direction-left\">\r\n\r\n                        <Link to={`/teacher/createChallenge/${this.props.groupSelect}`}>\r\n                            <Button variant=\"success\">\r\n                                <img src=\"/add-white.png\" alt=\"\"/>\r\n                                Crear desafio\r\n                            </Button>\r\n                        </Link>\r\n                    </div>\r\n                    {tabla}\r\n                    <Modal show={this.state.modalDeleteChallenge}>\r\n                        <Modal.Header>\r\n                            <Modal.Title>Aviso</Modal.Title>\r\n                            <img src=\"../triangle.png\"></img>\r\n                        </Modal.Header>\r\n                        <Modal.Body>\r\n                            ¿Seguro que desea eliminar {this.state.deleteChallenge.titulo}?\r\n                    </Modal.Body>\r\n                        <Modal.Footer>\r\n                            <Button onClick={() => this.deleteChallenge(this.state.deleteChallenge)}>Aceptar</Button>\r\n                            <Button variant=\"danger\" onClick={() => this.closeModalDeleteChallenge()}>Cancelar</Button>\r\n                        </Modal.Footer>\r\n                    </Modal>\r\n                </Card.Body>\r\n            </Card>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Challenges;","import React, { Component } from 'react';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport TeacherService from '../../../services/teacher/teacherService.js';\r\n\r\n/**Datos del usuario */\r\nimport AuthUser from '../../../services/authenticity/auth-service.js';\r\n\r\n//Fecha y Hora\r\nimport moment from 'moment';\r\n\r\n// Componentes estilos\r\nimport Table from \"react-bootstrap/Table\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Alert from 'react-bootstrap/Alert';\r\n//Estilos\r\nimport '../../../styles/styleGeneral.css';\r\n\r\nclass WritingsStudent extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            changeState: false,\r\n            dataWritings: [],//contiene todos los escritos individuales de un grupo y desafio dado\r\n            idChallenge: '',\r\n            showTableStudent: false,\r\n            showTableTeam: false,\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n      \r\n        TeacherService.getChallenge(this.props.idChallenge)\r\n            .then(response => {\r\n                //Si el desafio es individual muestra los escritos individuales\r\n                if (response[0].colaborativo === 1) {\r\n                    TeacherService.getWritingsStudent(this.props.groupSelect, this.props.idChallenge)\r\n                        .then(response => {\r\n\r\n                            this.setState({ showTableStudent: true, dataWritings: response.data, idChallenge: this.props.idChallenge });\r\n\r\n                        }).catch(error => {\r\n                            console.log(error.message);\r\n                        })\r\n\r\n                }\r\n                else { //Si el desafio es colaborativo muestra los escritos colaborativos\r\n                    TeacherService.getWritingsTeam(this.props.groupSelect, this.props.idChallenge)\r\n                        .then(response => {\r\n\r\n                            this.setState({ showTableStudent: false, dataWritings: response });\r\n\r\n                        }).catch(error => {\r\n                            console.log(error.message);\r\n                        })\r\n                }\r\n\r\n            }).catch(error => {\r\n                console.log(error.message);\r\n            })\r\n    }\r\n\r\n\r\n    componentDidUpdate(pP, pS, sS) {\r\n\r\n        if ( this.props.idChallenge !== pP.idChallenge) {\r\n            TeacherService.getChallenge(this.props.idChallenge)\r\n                .then(response => {\r\n                    //Si el desafio es individual muestra los escritos individuales\r\n                    if (response[0].colaborativo === 1) {\r\n                        TeacherService.getWritingsStudent(this.props.groupSelect, this.props.idChallenge)\r\n                            .then(response => {\r\n                           \r\n                                this.setState({ showTableStudent: true, dataWritings: response.data });\r\n\r\n                            }).catch(error => {\r\n                                console.log(error.message);\r\n                            })\r\n                    }\r\n                    else if(response[0].colaborativo === 2) { //Si el desafio es colaborativo muestra los escritos colaborativos\r\n                        TeacherService.getWritingsTeam(this.props.groupSelect, this.props.idChallenge)\r\n                            .then(response => {\r\n                                this.setState({ showTableStudent: false, dataWritings: response });\r\n\r\n                            }).catch(error => {\r\n                                console.log(error.message);\r\n                            })\r\n                    }\r\n\r\n                }).catch(error => {\r\n                    console.log(error.message);\r\n                })\r\n        }\r\n\r\n    }\r\n\r\n    //Obtiene el nombre del desafio/escrito\r\n    showCollaborative = (writing) => {\r\n        if (writing.colaborativo === 1) {\r\n            return \"individual\"\r\n        }\r\n        else if (writing.colaborativo === 2) {\r\n            return \"colaborativo\"\r\n        }\r\n        else\r\n            return \"N/A\"\r\n    }\r\n\r\n\r\n    /*Dibuja la pagina  */\r\n    render() {\r\n        console.log(this.state);\r\n        let formatedDate;\r\n        let { dataWritings, showTableStudent } = this.state;\r\n\r\n        let tabla = <div className=\"table-margin\">\r\n        <Table bordered hover responsive>\r\n            <thead>\r\n                <tr>\r\n                    <th >Desafío</th>\r\n                    <th >Tipo</th>\r\n                    <th >Escrito</th>\r\n                    <th >Estudiante</th>\r\n                    <th >Puntuación</th>\r\n                    <th >Fecha</th>\r\n                    <th >Hora</th>\r\n                    <th >Acciones</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {dataWritings.map((writing) => (\r\n                    <tr>\r\n                        <td>{writing.nombreDesafio}</td>\r\n                        <td>{this.showCollaborative(writing)}</td>\r\n                        <td>{writing.nombreEscrito}</td>\r\n                        <td>{writing.nombreEstudiante} {writing.apellidosEstudiante}</td>\r\n                        <td>{writing.puntuacion}</td>\r\n                        <td >{formatedDate = moment(writing.fecha).format('DD/MM/YYYY')}</td>\r\n                        <td >{formatedDate = moment(writing.fecha).format('LT')}</td>\r\n                        <td className=\"challenge-td\"><Link to={`/teacher/editWriting/${this.props.groupSelect}/${writing.idDesafio}/${writing.idEscrito}/${writing.idEstudiante}`}><img src={\"../edit.png\"} />Editar</Link></td>\r\n                    </tr>\r\n                ))}\r\n            </tbody>\r\n        </Table>\r\n    </div>;\r\n\r\n        if (dataWritings.length === 0)\r\n        {\r\n            tabla = <div className=\"row-edit\">\r\n                            <Alert variant={\"danger\"}>\r\n                                No hay escritos para este desafío en estos momentos.\r\n                            </Alert>\r\n                    </div>;\r\n        }\r\n\r\n\r\n        return (\r\n            <>\r\n                {showTableStudent ? (\r\n                    \r\n                    <div>\r\n                        {tabla}\r\n                    </div>\r\n\r\n                ) : (\r\n                    <div className=\"table-margin\">\r\n                        <div className=\"row-edit\">\r\n                            <label className='form-label'>Lista de Desafios</label>\r\n                        </div>\r\n                        <Table  bordered hover responsive>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th >Desafío</th>\r\n                                    <th >Tipo</th>\r\n                                    <th >Escrito</th>\r\n                                    <th >Equipo</th>\r\n                                    <th >Puntuación</th>\r\n                                    <th >Fecha</th>\r\n                                    <th >Hora</th>\r\n                                    <th >Acciones</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {dataWritings.map((writing) => (\r\n                                    <tr>\r\n                                        <td>{writing.nombreDesafio}</td>\r\n                                        <td>{this.showCollaborative(writing)}</td>\r\n                                        <td>{writing.nombreEscrito}</td>\r\n                                        <td>{writing.nombreEquipo}</td>\r\n                                        <td>{writing.puntuacion}</td>\r\n                                        <td >{formatedDate = moment(writing.fecha).format('DD/MM/YYYY')}</td>\r\n                                        <td >{formatedDate = moment(writing.fecha).format('LT')}</td>\r\n                                        <td className=\"challenge-td\"><Link to={`/teacher/editWriting/${this.props.groupSelect}/${writing.idDesafio}/${writing.idEscrito}/${writing.idEscritor}`}><Button variant=\"outline-primary\" >Editar Escrito</Button></Link></td>\r\n                                    </tr>\r\n                                ))}\r\n                            </tbody>\r\n                        </Table>\r\n                    </div>\r\n                )}\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default WritingsStudent;","import React, { Component } from 'react';\r\n\r\nclass TabsWriting extends Component {\r\n    state = {\r\n        tabs: null, //array ata\r\n        activeTab: null //id tab activo\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { data } = this.props;\r\n        //me devuelve el primer elemento activo\r\n        const activeTab = data.find(tabData => {\r\n            return tabData.state === \"active\";\r\n        })\r\n\r\n        this.setState({ tabs: data, activeTab: activeTab.id });\r\n    }\r\n\r\n    handleClick(event, currentTab) {\r\n\r\n        event.preventDefault();\r\n        const newTabs = this.state.tabs;\r\n        newTabs.forEach((tab, index) => {\r\n            newTabs[index].state = (tab.id === currentTab.id ? \"active\" : \"inactive\");\r\n        });\r\n        this.setState({ tabs: newTabs, activeTab: currentTab.id });\r\n    }\r\n\r\n    renderTabs() {\r\n        const { tabs } = this.state;\r\n        return (\r\n            <ul className=\"nav nav-tabs\">\r\n                {tabs.map((tab, index) => {\r\n                    return (\r\n                        <li className=\"nav-item\" key={index}>\r\n                            <a href=\"/\" className={`nav-link ${tab.state}`}\r\n                                onClick={event => this.handleClick(event, tab)}>{tab.name}</a>\r\n                        </li>\r\n                    );\r\n                })}\r\n            </ul>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        const { tabs, activeTab } = this.state;\r\n        const tabToShow = activeTab - 1;\r\n        return (\r\n            <div>\r\n                {tabs && this.renderTabs()}\r\n                {tabs && tabs[tabToShow].content()}\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default TabsWriting;\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\n\r\nimport TabsWriting from \"./TabsWriting\";\r\nimport TeacherService from '../../../services/teacher/teacherService.js';\r\n\r\nimport WritingsStudent from \"./WritingsStudent\";\r\nimport Card from 'react-bootstrap/Card';\r\n\r\n\r\n\r\nfunction Writings(props) {\r\n    const [count, setCount] = useState(0);\r\n    const [dataChallenges, setDataChallenges] = useState([]);\r\n    const [showWritings, setShowWritings] = useState(false);\r\n    //const [showWritings, setShowWritings] = useState(false);\r\n    const [idChallenge, setIdChallenge] = useState(\"\");\r\n\r\n    let data = [\r\n        { id: 1, name: \"Escritos\", prueba: idChallenge, content: () => <WritingsStudent key={props.groupSelect} groupSelect={props.groupSelect} idChallenge={idChallenge} />, state: \"active\" },\r\n        //  { id: 2, name: \"Escritos en equipo\", content: () => <WritingsTeam key={props.groupSelect} groupSelect={props.groupSelect} />, state: \"inactive\" },\r\n    ];\r\n\r\n    useEffect(() => {\r\n        //obtiene todos los desafios del profesor\r\n        TeacherService.getChallenges(props.groupSelect)\r\n            .then(response => {\r\n                if(response.length>0){//si existen desafios\r\n                    setDataChallenges([...dataChallenges, response])\r\n                }\r\n              \r\n            })\r\n\r\n    }, []);\r\n\r\n    const selectionChallenge = event => {\r\n        setIdChallenge(event.target.value)\r\n        setShowWritings(true)\r\n    };\r\n\r\n    return (\r\n        <Card className={\"card-edit\"}>\r\n            <Card.Body>\r\n                <div className={\"row-edit\"}>\r\n                    <div className=\"form-select\">\r\n                        <label className='form-label'>Selecciona Desafio</label>\r\n                        <select onChange={selectionChallenge} >\r\n                            <option value=\"\" selected disabled hidden > Seleccionar</option>\r\n                            {dataChallenges.length > 0 ? dataChallenges[0].map(elemento => (\r\n                                <option key={elemento.id} value={elemento.id} > { elemento.titulo} </option>\r\n                            )) : null}\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n\r\n            {showWritings ? (\r\n                <div className=\"row-edit\">\r\n                    <WritingsStudent key={props.groupSelect} groupSelect={props.groupSelect} idChallenge={idChallenge} />\r\n                </div>\r\n            ) : (\r\n                <>\r\n                </>\r\n            )}\r\n            </Card.Body>\r\n        </Card>\r\n\r\n    );\r\n\r\n\r\n}\r\n\r\nexport default Writings;","/*\r\n*  Name_file :GroupTeams.js\r\n*  Description: Contiene una lista de equipos de un grupo. Vive dentro de Group.js\r\n*    \r\n*/\r\nimport React, { Component } from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport '../../../styles/styleGeneral.css';\r\nimport '../../../styles/styleCard.css';\r\nimport '../../../styles/Challenge.css';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Button from 'react-bootstrap/Button';\r\nimport ListGroup from 'react-bootstrap/ListGroup';\r\nimport Alert from 'react-bootstrap/Alert';\r\nimport teacherService from '../../../services/teacher/teacherService.js';\r\n\r\nclass GroupTeams extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            data: [],\r\n            filteredData: [],\r\n            searchKey: '',\r\n            showListTeams: false,//muestra lista equipos\r\n        };\r\n    }\r\n\r\n    //Filtra los datos de los estudiantes buscados para solo buscar en la base de datos una vez\r\n    filterData = () => {\r\n        let auxArray = [];\r\n        //this.state.filteredData = [];\r\n        for (let i = 0; i < this.state.data.length; i++) {\r\n\r\n            if (new RegExp(this.state.searchKey, 'i').test(this.state.data[i].nombre)) {\r\n                auxArray.push(this.state.data[i]);\r\n            }\r\n\r\n        }\r\n        this.setState({ filteredData: auxArray });\r\n    }\r\n\r\n    /*Lo que escribamos en el input lo guarda en el state async para que lo veamos en tiempo real */\r\n    handleChangeSearch = async e => {\r\n        await this.setState({\r\n            [e.target.name]: e.target.value\r\n        });\r\n        this.filterData();\r\n    }\r\n\r\n\r\n\r\n    componentDidMount() {\r\n\r\n        teacherService.getTeamsOfGroup(this.props.groupSelect).then(response => {\r\n            if (response.length > 0) {//Si existen equipos\r\n                this.setState({ data: response });\r\n                this.setState({ filteredData: response });\r\n                this.filterData();\r\n                this.setState({ showListTeams: true });//muestra lista equipos\r\n\r\n            }\r\n        })\r\n    }\r\n\r\n\r\n    /*Dibuja la pagina  */\r\n    render() {\r\n        let cartel = <> </>;\r\n        let tabla = <ul className={\"flex-items-row-start wrap\"}>\r\n            {this.state.filteredData.map((team) =>\r\n            (\r\n                <li className={\"items-row\"}>\r\n                    <br />\r\n                    <ul className={\"container-column-list wrap\"}>\r\n                        <li className={\"flex-item-list\"}>\r\n                            <img src=\"../../team_black.png\" alt=\"\" />\r\n                        </li>\r\n                        <li className={\"flex-item-list\"}>\r\n                            <h6>{team.nombre}</h6>\r\n                        </li>\r\n                        <li className={\"flex-item-list\"}>\r\n                            <Link key={team.id} to={`/teacher/viewTeam/${team.id}`}>\r\n                                <Button size={\"sm\"} variant={\"primary\"} text='Ver Equipo'>Ver equipo</Button>\r\n                            </Link>\r\n                        </li>\r\n                    </ul>\r\n                    <hr></hr>\r\n                </li>\r\n\r\n            )\r\n            )}\r\n        </ul>;\r\n        if (this.state.filteredData.length === 0) {\r\n            cartel = <Alert variant={\"danger\"}>\r\n                        No hay equipos con esos parámetros.\r\n                    </Alert>\r\n            tabla = <></>;\r\n        }\r\n\r\n        const { showListTeams } = this.state;\r\n        return (\r\n            <Card className=\"card-long\">\r\n                <Card.Body>\r\n                    {showListTeams ? (\r\n                        <div>\r\n                            <ul className={\"container-column-list\"}>\r\n                                <li className={\"items-row\"}>\r\n                                    <label className={\"form-label\"}>Buscar estudiante</label>\r\n                                </li>\r\n                                <li className={\"items-row\"}>\r\n                                    <input type=\"text\" name=\"searchKey\" onChange={this.handleChangeSearch} />\r\n                                </li>\r\n                                <li className={\"items-row\"}>\r\n                                    <img src=\"../../search.png\" alt=\"\" />\r\n                                </li>\r\n                            </ul>\r\n                            {cartel}\r\n                            {tabla}\r\n                        </div>\r\n                    ) : (\r\n                        <div className=\"row-edit\">\r\n                            <Alert variant={\"danger\"}>\r\n                                No hay equipos con esos parámetros.\r\n                            </Alert>\r\n                        </div>\r\n                    )}\r\n                </Card.Body>\r\n            </Card>\r\n        );\r\n    }\r\n}\r\n\r\nexport default GroupTeams;","/*\r\n*  Name_file :GroupTeacher.js\r\n*  Description: Pagina del grupo seleccionado por profesor, contiene la vista de los desafios  \r\n*  que tiene el grupo seleccionado por el profesor  \r\n*/\r\nimport React, { Component, useState } from 'react';\r\nimport TeacherService from '../../../services/teacher/teacherService.js';\r\nimport AuthUser from '../../../services/authenticity/auth-service.js';\r\n\r\n//Componentes de Estilos\r\nimport SplitButtom from 'react-bootstrap/Spinner';\r\nimport Dropdown from 'react-bootstrap/Dropdown';\r\nimport DropdownMenu from 'react-bootstrap/DropdownMenu';\r\nimport DropdownItem from 'react-bootstrap/DropdownItem';\r\nimport DropdownToggle from 'react-bootstrap/DropdownToggle';\r\nimport FormControl from 'react-bootstrap/FormControl';\r\nimport Challenges from './Challenges.js';\r\nimport Writings from './Writings.js';\r\nimport Teams from './GroupTeams';\r\nimport Students from '../user/GroupStudents';\r\nimport { Link } from \"react-router-dom\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport Card from 'react-bootstrap/Card';\r\nimport Icon from '@material-ui/core/Icon';\r\nimport ExpandMoreRoundedIcon from '@material-ui/icons/ExpandMoreRounded';\r\nimport AdminService from '../../../services/admin/adminService.js';\r\nimport Alert from \"react-bootstrap/Alert\";\r\nimport { Tab, Tabs, TabList, TabPanel } from 'react-tabs';\r\nimport 'react-tabs/style/react-tabs.css';\r\nimport Accordion from 'react-bootstrap/Accordion';\r\n\r\n\r\nconst required = value => {\r\n  if (!value) {\r\n    return (\r\n      <Alert variant=\"danger\" bsPrefix=\"alert-login\">\r\n        ¡Todos los campos son obligatorios!\r\n      </Alert>\r\n\r\n    );\r\n  }\r\n};\r\n\r\nconst CustomToggle = React.forwardRef(({ children, onClick }, ref) => (\r\n  <a\r\n    href=\"\"\r\n    ref={ref}\r\n    onClick={(e) => {\r\n      e.preventDefault();\r\n      onClick(e);\r\n    }}\r\n  >\r\n    {children}\r\n    {<Icon><ExpandMoreRoundedIcon></ExpandMoreRoundedIcon></Icon>}\r\n  </a>\r\n));\r\n\r\nconst CustomMenu = React.forwardRef(\r\n  ({ children, style, className, 'aria-labelledby': labeledBy }, ref) => {\r\n    const [value, setValue] = useState('');\r\n\r\n    return (\r\n      <div\r\n        ref={ref}\r\n        style={style}\r\n        className={className}\r\n        aria-labelledby={labeledBy}\r\n      >\r\n        <FormControl\r\n          autoFocus\r\n          className=\"mx-3 my-2 w-auto\"\r\n          placeholder=\"Buscar grupo...\"\r\n          onChange={(e) => setValue(e.target.value)}\r\n          value={value}\r\n        />\r\n        <ul className=\"list-unstyled\">\r\n          {React.Children.toArray(children).filter(\r\n            (child) =>\r\n              !value || child.props.children.toLowerCase().startsWith(value) || child.props.children.toUpperCase().startsWith(value),\r\n          )}\r\n        </ul>\r\n      </div>\r\n    );\r\n  },\r\n);\r\n\r\n\r\nclass GroupTeacher extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      dataGroup: [],//contiene todos los grupos del estudiante\r\n      currentUser: { id: \"\" },\r\n      groupSelect: \"\",\r\n      nameGroupSelect: \"\",\r\n      itemSelect: \"\",\r\n      showChallenges: false,\r\n      showWritings: false,\r\n      showTeams: false,\r\n      showStudents: false,\r\n      newName: \"\",\r\n      onRenameGroupModal: '',\r\n      onAlert: false,\r\n      showListGroups: false,//muestra grupos\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n\r\n    const dataUser = AuthUser.getCurrentUser();\r\n    this.setState({ currentUser: dataUser });\r\n\r\n    /**Obtiene todos los grupos del profesor */\r\n    TeacherService.getGroups(dataUser.id).then(response => {\r\n      this.setState({ dataGroup: response });\r\n      if (this.state.dataGroup.length > 0) {\r\n        this.setState({ groupSelect: this.state.dataGroup[0].id, nameGroupSelect: this.state.dataGroup[0].nombre, showListGroups: true });\r\n      }\r\n    })\r\n  }\r\n\r\n  itemSelection = event => {\r\n    if (event.target.value === \"1\") {\r\n      this.setState({\r\n        showChallenges: true,\r\n        showWritings: false,\r\n        showTeams: false,\r\n        showStudents: false\r\n\r\n      });\r\n    }\r\n    else if (event.target.value === \"2\") {\r\n      this.setState({\r\n        showChallenges: false,\r\n        showWritings: true,\r\n        showTeams: false,\r\n        showStudents: false\r\n      });\r\n    }\r\n    else if (event.target.value === \"3\") {\r\n      this.setState({\r\n        showChallenges: false,\r\n        showWritings: false,\r\n        showTeams: true,\r\n        showStudents: false\r\n      });\r\n    }\r\n    else if (event.target.value === \"4\") {\r\n      this.setState({\r\n        showChallenges: false,\r\n        showWritings: false,\r\n        showTeams: false,\r\n        showStudents: true\r\n      });\r\n    }\r\n\r\n  };\r\n\r\n  // handleSelect(groupId) {\r\n  //   this.setState({ groupSelect: groupId });\r\n  // }\r\n\r\n  handleSelect(group) {\r\n    this.setState({ groupSelect: group.id, nameGroupSelect: group.nombre });\r\n  }\r\n\r\n  /*Lo que escribamos en el input lo guarda en el state async para que lo veamos en tiempo real */\r\n  handleChangeRename = async e => {\r\n    await this.setState({\r\n      [e.target.name]: e.target.value\r\n    });\r\n  }\r\n\r\n  /*Cambia el estado del modal*/\r\n  onModal(modal) {\r\n\r\n    this.setState({\r\n      onRenameGroupModal: modal\r\n    });\r\n  }\r\n\r\n  onAlert(modal) {\r\n    this.setState({\r\n      onAlert: modal\r\n    });\r\n  }\r\n\r\n  /*Se hacen peticiones al servidor renombrar grupo*/\r\n  rename = () => {\r\n    if (this.state.newName != '') {\r\n      AdminService.renameGroup(this.state.groupSelect, this.state.newName).then(response => {\r\n        const dataUser = AuthUser.getCurrentUser();\r\n        this.setState({ nameGroupSelect: this.state.newName });\r\n        this.onModal(false);\r\n\r\n      }).catch(error => {\r\n        console.log(error.message);\r\n      })\r\n    }\r\n    else {\r\n\r\n      this.onAlert(true)\r\n    }\r\n  }\r\n\r\n  /*Dibuja la pagina  */\r\n  render() {\r\n\r\n    const { dataGroup, groupSelect, showChallenges, showWritings, showTeams, showStudents } = this.state;\r\n\r\n    // SISTEMA DE TABS\r\n\r\n    let tabs =\r\n      <div className={\"row-edit\"}>\r\n        <Tabs>\r\n          <TabList className={\"react-tabs__tab-list\"}>\r\n            <Tab>DESAFIOS</Tab>\r\n            <Tab>ESCRITOS</Tab>\r\n            <Tab>EQUIPOS</Tab>\r\n            <Tab>ESTUDIANTES</Tab>\r\n          </TabList>\r\n          <TabPanel>\r\n            <Challenges key={groupSelect} groupSelect={groupSelect} />\r\n          </TabPanel>\r\n          <TabPanel>\r\n            <Writings key={groupSelect} groupSelect={groupSelect} />\r\n          </TabPanel>\r\n          <TabPanel>\r\n            <Teams key={groupSelect} groupSelect={groupSelect} />\r\n          </TabPanel>\r\n          <TabPanel>\r\n            <Students key={groupSelect} idGroup={groupSelect} />\r\n          </TabPanel>\r\n        </Tabs>\r\n      </div>;\r\n    const { showListGroups } = this.state;\r\n    return (\r\n      <div className=\"container\">\r\n        <link rel=\"stylesheet\" href=\"https://fonts.googleapis.com/icon?family=Material+Icons\" />\r\n        <Card className=\"card-long\">\r\n          <Card.Body>\r\n            <div className={\"row-edit\"}>\r\n              <div className={\"section-title\"}>\r\n                <h2>Gestionar grupos</h2>\r\n              </div>\r\n            </div>\r\n\r\n            {showListGroups ? (\r\n              <>\r\n                <div className={\"border-group\"}>\r\n                  <br />\r\n                  <ul className={\"flex-items-row-evenly\"}>\r\n                    <li className={\"flex-item-form\"}>\r\n                      <Dropdown className=\"drop-down\">\r\n                        <DropdownToggle as={CustomToggle} id=\"dropdown-custom-components\">Selecciona grupo</DropdownToggle>\r\n                        <DropdownMenu as={CustomMenu}>\r\n                          {dataGroup.map((row) => (\r\n                            <DropdownItem eventKey={row.idGrupo} onClick={() => this.handleSelect(row)}>{row.nombre}</DropdownItem>\r\n                          ))}\r\n                        </DropdownMenu>\r\n                      </Dropdown>\r\n                    </li>\r\n                    <li className={\"flex-item-form\"}>\r\n                      <h4  style={{color: \"#717172\"}}>{this.state.nameGroupSelect}</h4>\r\n                    </li>\r\n                    <li className={\"flex-item-form\"}>\r\n                      <Button variant=\"primary\" onClick={() => this.onModal(true)}>Renombar grupo</Button>\r\n                    </li>\r\n                  </ul>\r\n                </div>\r\n\r\n\r\n                {showChallenges ? (\r\n                  <Challenges key={groupSelect} groupSelect={groupSelect} />\r\n                ) : (\r\n                  <></>\r\n                )}\r\n\r\n                {showWritings ? (\r\n                  <Writings key={groupSelect} groupSelect={groupSelect} />\r\n                ) : (\r\n                  <></>\r\n                )}\r\n                {showTeams ? (\r\n                  <Teams key={groupSelect} groupSelect={groupSelect} />\r\n                ) : (\r\n                  <></>\r\n                )}\r\n                {showStudents ? (\r\n                  <Students key={groupSelect} idGroup={groupSelect} />\r\n                ) : (\r\n                  <></>\r\n                )}\r\n                {tabs}\r\n              </>\r\n            ) : (\r\n              <div className=\"table-margin\">\r\n                <p>No hay grupos para mostrar</p>\r\n              </div>\r\n            )}\r\n          </Card.Body>\r\n        </Card>\r\n\r\n        <Modal\r\n          show={this.state.onRenameGroupModal}\r\n          onHide={this.state.onRenameGroupModal}\r\n        >\r\n          <Modal.Header>\r\n            <Modal.Title>Renombrar grupo</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <label>Cambiar nombre: </label>\r\n            <br />\r\n            <input type=\"text\" className=\"form-control\" name=\"newName\" onChange={this.handleChangeRename} />\r\n            <Alert show={this.state.onAlert}>Hola</Alert>\r\n            <br />\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button variant=\"primary\" onClick={() => this.rename()}>Acepto</Button>\r\n            <Button variant=\"danger\" onClick={() => this.onModal(false)}>Cancelar</Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default GroupTeacher;","/*\r\n*  Name_file: Collections.js\r\n*  Description: Pagina de colecciones del estudiante, contiene la vista de todos los escritos \r\n*   que se han guardado en alguna colección.\r\n*    \r\n*/\r\n\r\n/*Componentes de estilo Bootstrap*/\r\nimport React, { Component, useState } from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport TeacherService from '../../../services/teacher/teacherService.js';\r\nimport AuthUser from '../../../services/authenticity/auth-service.js';\r\n\r\nimport Dropdown from 'react-bootstrap/Dropdown';\r\nimport DropdownMenu from 'react-bootstrap/DropdownMenu';\r\nimport DropdownItem from 'react-bootstrap/DropdownItem';\r\nimport DropdownToggle from 'react-bootstrap/DropdownToggle';\r\nimport FormControl from 'react-bootstrap/FormControl';\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport Card from 'react-bootstrap/Card';\r\nimport Icon from '@material-ui/core/Icon';\r\nimport ExpandMoreRoundedIcon from '@material-ui/icons/ExpandMoreRounded';\r\nimport AdminService from '../../../services/admin/adminService.js';\r\nimport Alert from \"react-bootstrap/Alert\";\r\nimport { Tab, Tabs, TabList, TabPanel } from 'react-tabs';\r\nimport 'react-tabs/style/react-tabs.css';\r\nimport Accordion from 'react-bootstrap/Accordion';\r\n\r\n//Estilos\r\n import '../../../styles/styleCard.css';\r\n import '../../../styles/styleGeneral.css';\r\n import '../../../styles/styleButton.css';\r\n\r\n const CustomToggle = React.forwardRef(({ children, onClick }, ref) => (\r\n    <a\r\n      href=\"\"\r\n      ref={ref}\r\n      onClick={(e) => {\r\n        e.preventDefault();\r\n        onClick(e);\r\n      }}\r\n    >\r\n      {children}\r\n      {<Icon><ExpandMoreRoundedIcon></ExpandMoreRoundedIcon></Icon>}\r\n    </a>\r\n  ));\r\n  \r\n  const CustomMenu = React.forwardRef(\r\n    ({ children, style, className, 'aria-labelledby': labeledBy }, ref) => {\r\n      const [value, setValue] = useState('');\r\n  \r\n      return (\r\n        <div\r\n          ref={ref}\r\n          style={style}\r\n          className={className}\r\n          aria-labelledby={labeledBy}\r\n        >\r\n          <FormControl\r\n            autoFocus\r\n            className=\"mx-3 my-2 w-auto\"\r\n            placeholder=\"Buscar grupo...\"\r\n            onChange={(e) => setValue(e.target.value)}\r\n            value={value}\r\n          />\r\n          <ul className=\"list-unstyled\">\r\n            {React.Children.toArray(children).filter(\r\n              (child) =>\r\n                !value || child.props.children.toLowerCase().startsWith(value) || child.props.children.toUpperCase().startsWith(value),\r\n            )}\r\n          </ul>\r\n        </div>\r\n      );\r\n    },\r\n  );\r\n\r\n\r\nclass Collections extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            dataGroup: [],\r\n            idGroupSelect: 0,\r\n            nameGroupSelect: '',\r\n            nombreColeccion: \"\",\r\n            onCreateCollectionModal: false,\r\n            onAlert: false,\r\n            dataCollection: [],\r\n            filtroBusqueda: '',\r\n            dataCollectionFiltered: [],\r\n            showListCollections: false,\r\n            onModalDelete: false,\r\n            idColeccionBorrado: -1,\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n        /**Obtiene todos los grupos del profesor */\r\n        TeacherService.getGroups(AuthUser.getCurrentUser().id).then(response => {\r\n        this.setState({ dataGroup: response });\r\n        if (this.state.dataGroup.length > 0) {\r\n            this.setState({ idGroupSelect: this.state.dataGroup[0].id, nameGroupSelect: this.state.dataGroup[0].nombre, showListGroups: true });\r\n        }\r\n        })\r\n        \r\n        TeacherService.getCollections(AuthUser.getCurrentUser().id, this.state.filtroBusqueda)\r\n          .then(response => {\r\n              if (response.length > 0)\r\n              {\r\n                this.setState({ dataCollection: response, dataCollectionFiltered: response, showListCollections: true });\r\n                this.filterData();\r\n              }\r\n          })\r\n    }\r\n\r\n\r\n    //Filtra los datos de las colecciones buscadas para solo buscar en la base de datos una vez\r\n    filterData = () => {\r\n      let auxArray = [];\r\n      //this.state.filteredData = [];\r\n      for (let i = 0; i < this.state.dataCollection.length; i++) \r\n      {\r\n          if (new RegExp(this.state.filtroBusqueda, 'i').test(this.state.dataCollection[i].nombreColeccion) ||\r\n                (new RegExp(this.state.filtroBusqueda, 'i').test(this.state.dataCollection[i].nombreGrupo)))\r\n          {\r\n              auxArray.push(this.state.dataCollection[i]);\r\n          }\r\n      }\r\n      this.setState({ dataCollectionFiltered: auxArray });\r\n    }\r\n\r\n    /*Lo que escribamos en el input lo guarda en el state async para que lo veamos en tiempo real */\r\n    handleChangeSearch = async e => {\r\n        await this.setState({\r\n            [e.target.name]: e.target.value\r\n        });\r\n        this.filterData();\r\n    }\r\n\r\n    crearColeccion = () => {\r\n        if (this.state.nombreColeccion != '') {\r\n            TeacherService.createCollection(this.state.nombreColeccion, AuthUser.getCurrentUser().id, this.state.idGroupSelect)\r\n            .then(response => {\r\n                this.onModal(false);\r\n                \r\n            }).catch(error => {\r\n            console.log(error.message);\r\n            })\r\n\r\n            window.location.replace(`/teacher/collections`); \r\n        }\r\n        else {\r\n            this.onAlert(true)\r\n        }\r\n      }\r\n\r\n    onModal(modal) {\r\n\r\n        this.setState({\r\n          onCreateCollectionModal: modal\r\n        });\r\n    }\r\n\r\n    deleteCollection = () => \r\n    {\r\n        this.onModalDeleteCollection(false, -1);\r\n        TeacherService.deleteCollection(this.state.idColeccionBorrado)\r\n        .then(response => {\r\n            window.location.href = `/teacher/collections`;\r\n\r\n        }).catch(error => {\r\n            console.log(error.message);\r\n        })\r\n    }\r\n\r\n    onModalDeleteCollection(modal, idCollection) {\r\n        this.setState({\r\n          onModalDelete: modal,\r\n          idColeccionBorrado: idCollection\r\n        });\r\n    }\r\n\r\n    handleSelect(group) {\r\n        this.setState({ idGroupSelect: group.id, nameGroupSelect: group.nombre });\r\n    }\r\n\r\n    onAlert(modal) {\r\n        this.setState({\r\n          onAlert: modal\r\n        });\r\n      }\r\n\r\n    /*Lo que escribamos en el input lo guarda en el state async para que lo veamos en tiempo real */\r\n    handleCreateCollection = async e => {\r\n        await this.setState({\r\n        [e.target.name]: e.target.value\r\n        });\r\n    }\r\n\r\n\r\n    /*Dibuja la pagina  */\r\n    render() {\r\n\r\n      let cartel = <div> </div>;\r\n        let tabla = <ul className={\"flex-items-row-start wrap\"}>\r\n            {this.state.dataCollectionFiltered.map((collection) => (\r\n                <li className={\"items-row\"}>\r\n                    <ul className={\"flex-items-row-evenly\"}>\r\n                        <li className={\"flex-item-list\"}>\r\n                            {collection.nombreColeccion}\r\n                        </li>\r\n                        <li className={\"flex-item-list\"}>\r\n                            {collection.nombreGrupo}\r\n                        </li>\r\n                        <li className={\"flex-item-list\"}>\r\n                            <Link key={collection.idColeccion} to={`/teacher/collections/${collection.idColeccion}`}>\r\n                                <Button size={\"sm\"} variant={\"primary\"}> Ver colección </Button>\r\n                            </Link>\r\n                        </li>\r\n                        <li className={\"flex-item-list\"}>\r\n                            <Button size={\"sm\"} variant=\"danger\" onClick={() => this.onModalDeleteCollection(true, collection.idColeccion)}>\r\n                                Eliminar\r\n                            </Button>\r\n                        </li>\r\n                    </ul>\r\n                    <hr />\r\n                </li>\r\n            ))}\r\n        </ul>;\r\n\r\n        if (this.state.dataCollectionFiltered.length === 0) {\r\n            cartel = <div className={\"row-edit\"}>\r\n                <br />\r\n                <h4>No hay resultados para la búsqueda realizada.</h4>\r\n            </div>;\r\n            tabla = <></>;\r\n        }\r\n\r\n\r\n        const { dataGroup,  showListCollections } = this.state;\r\n        return (\r\n            <div className=\"container\">\r\n               <Card className=\"card-long\">\r\n                   <Card.Body>\r\n                       <div className={\"row-edit\"}>\r\n                           <div className={\"section-title\"}>\r\n                               <h2>Colecciones</h2>\r\n                           </div>\r\n                       </div>\r\n\r\n                        <div className={\"border-group\"}>\r\n                            <br />\r\n                            <ul className={\"flex-items-row-evenly\"}>\r\n                                <li className={\"flex-item-form\"}>\r\n                                <Dropdown className=\"drop-down\">\r\n                                    <DropdownToggle as={CustomToggle} id=\"dropdown-custom-components\">Selecciona grupo</DropdownToggle>\r\n                                    <DropdownMenu as={CustomMenu}>\r\n                                    {dataGroup.map((row) => (\r\n                                        <DropdownItem eventKey={row.idGrupo} onClick={() => this.handleSelect(row)}>{row.nombre}</DropdownItem>\r\n                                    ))}\r\n                                    </DropdownMenu>\r\n                                </Dropdown>\r\n                                </li>\r\n                                <li className={\"flex-item-form\"}>\r\n                                <h4  style={{color: \"#717172\"}}>{this.state.nameGroupSelect}</h4>\r\n                                </li>\r\n                                <li className={\"flex-item-form\"}>\r\n                                <Button variant=\"primary\" onClick={() => this.onModal(true)}>Crear colección</Button>\r\n                                </li>\r\n                            </ul>\r\n                        </div>\r\n\r\n                        {showListCollections ? (\r\n                            <div>\r\n                                <div className={\"row-edit\"}>\r\n                                    <ul className={\"container-column-list\"}>\r\n                                        <li className={\"items-row\"}>\r\n                                            <label className={\"form-label\"}>Buscar colección por su nombre o por grupo: </label>\r\n                                        </li>\r\n                                        <li className={\"items-row\"}>\r\n                                            <input type=\"text\" name=\"filtroBusqueda\" onChange={this.handleChangeSearch} />\r\n                                        </li>\r\n                                        <li className={\"items-row\"}>\r\n                                            <img src=\"../../search.png\" alt=\"\" />\r\n                                        </li>\r\n                                    </ul>\r\n                                </div>\r\n                                <div className={\"row-edit\"}>\r\n                                    <Card className={\"card-long\"}>\r\n                                        <Card.Body >\r\n                                            {cartel}\r\n                                            {tabla}\r\n                                        </Card.Body>\r\n                                    </Card>\r\n                                </div>\r\n                            </div>\r\n                        ) : (\r\n                            <div className=\"table-margin\">\r\n                                <p>No hay colecciones para mostrar</p>\r\n                            </div>\r\n                        )}\r\n\r\n                   </Card.Body>\r\n               </Card>\r\n\r\n\r\n               <Modal\r\n                show={this.state.onCreateCollectionModal}\r\n                onHide={this.state.onCreateCollectionModal}\r\n                >\r\n                <Modal.Header>\r\n                    <Modal.Title>Crear colección</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <label>Nombre: </label>\r\n                    <br />\r\n                    <input type=\"text\" className=\"form-control\" name=\"nombreColeccion\" onChange={this.handleCreateCollection} />\r\n                    <Alert show={this.state.onAlert}>ERROR</Alert>\r\n                    <br />\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"primary\" onClick={() => this.crearColeccion()}>Acepto</Button>\r\n                    <Button variant=\"danger\" onClick={() => this.onModal(false)}>Cancelar</Button>\r\n                </Modal.Footer>\r\n                </Modal>\r\n\r\n                <Modal \r\n                    show={this.state.onModalDelete}\r\n                    onHide={this.state.onModalDelete}\r\n                >\r\n                <Modal.Header>\r\n                    <Modal.Title>¿Seguro que deseas eliminar la colección?</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Footer>\r\n                    <Button variant=\"primary\" onClick={() => this.deleteCollection()}>Aceptar</Button>\r\n                    <Button variant=\"danger\" onClick={() => this.onModalDeleteCollection(false, -1)}>Cancelar</Button>\r\n                </Modal.Footer>\r\n                </Modal>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Collections;","/*\r\n*  Name_file :View Collection.js\r\n*  Description: Contiene los datos de una colección segun un ID dado.\r\n*    \r\n*/\r\n\r\nimport React, { Component } from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport TeacherService from '../../../services/teacher/teacherService.js';\r\n\r\n/**Estilos bibliotecas externas*/\r\nimport  Card from 'react-bootstrap/Card';\r\nimport Alert from 'react-bootstrap/Alert';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Modal from \"react-bootstrap/Modal\";\r\n\r\n/**Estilos css*/\r\nimport 'react-tabs/style/react-tabs.css';\r\nimport '../../../styles/styleGeneral.css';\r\nimport '../../../styles/styleCard.css';\r\n\r\n\r\nclass ViewCollection extends Component {\r\n\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n\r\n        this.state = {\r\n            nameCollection: \"\",\r\n            nameGroup: \"\",\r\n            idGroup: -1,\r\n            challengesNotInCollection: [],\r\n            selectedChallenge: false,\r\n            idChallengeSelect: -1,\r\n            dataChallenges: [],\r\n            hayDesafios: false,\r\n            onModalDelete: false,\r\n            idBorrado: -1,\r\n        };\r\n    }\r\n\r\n    componentDidMount()\r\n    {\r\n        // Obtenemos una colección\r\n        TeacherService.getCollection(this.props.match.params.idCollection)\r\n        .then(response => {\r\n            if (response.length > 0)\r\n            {\r\n                this.setState({ nameCollection: response[0].nombreColeccion, nameGroup: response[0].nombreGrupo, idGroup: response[0].idGrupo });\r\n\r\n                // Obtenemos los desafíos que no están en la colección\r\n                TeacherService.getChallengesNotInCollection(response[0].idGrupo, this.props.match.params.idCollection)\r\n                    .then(response => {\r\n                        this.setState({ challengesNotInCollection: response});\r\n                    })\r\n            }\r\n        })\r\n\r\n        // Obtenemos los desafíos de la colección\r\n        TeacherService.getChallengesFromCollection(this.props.match.params.idCollection)\r\n        .then(response => {\r\n            if (response.length > 0)\r\n            {\r\n                this.setState({ dataChallenges: response, hayDesafios: true });\r\n            }\r\n        })\r\n\r\n    }\r\n\r\n    addChallengeToCollection = (idChallenge) =>\r\n    {\r\n        TeacherService.addChallengeToCollection(this.props.match.params.idCollection, idChallenge)\r\n        .then(response => {\r\n            window.location.replace(`/teacher/collections/${this.props.match.params.idCollection}`); \r\n\r\n        }).catch(error => {\r\n            console.log(error.message);\r\n        })\r\n    }\r\n\r\n    deleteChallenge = () =>\r\n    {\r\n        this.onModalDeleteChallenge(false, -1);\r\n        TeacherService.deleteChallengeFromCollection(this.props.match.params.idCollection, this.state.idBorrado)\r\n        .then(response => {\r\n            window.location.href = `/teacher/collections/${this.props.match.params.idCollection}`;\r\n\r\n        }).catch(error => {\r\n            console.log(error.message);\r\n        })\r\n    }\r\n\r\n    onModalDeleteChallenge(modal, idChallenge) {\r\n        this.setState({\r\n          onModalDelete: modal,\r\n          idBorrado: idChallenge\r\n        });\r\n    }\r\n\r\n    handleChangeChallengeSelect = async e => {\r\n        await this.setState({\r\n                [e.target.name]: e.target.value\r\n        });\r\n        if (e.target.value != -1)\r\n            this.setState({ selectedChallenge: true });\r\n        else\r\n            this.setState({ selectedChallenge: false });\r\n    }\r\n\r\n    /*Dibuja la pagina  */\r\n    render() {\r\n        return (\r\n        <div className=\"container\">\r\n            <Card className=\"card-long\">\r\n            <Card.Body>\r\n                <div className={\"row-edit\"}>\r\n                    <div className={\"section-title\"}>\r\n                        <h2>Colección \"{this.state.nameCollection}\"</h2>\r\n                    </div>\r\n                    <br/>\r\n                    <Alert variant={\"info\"}>\r\n                        <img src=\"/info.png\" alt=\"\"/>\r\n                        Puede usar este espacio para ver los desafíos asociados a la colección, y añadir nuevos desafíos si así lo desea.\r\n                    </Alert>\r\n                </div>\r\n\r\n                <div className={\"row-edit\"}>\r\n                    <Card className={\"card-long\"}>\r\n                    <Card.Body >\r\n                        <ul className={\"flex-items-row-start wrap\"}>\r\n\r\n                            <li className={\"flex-item-data\"}>\r\n                                <h5>Grupo: <u>{this.state.nameGroup}</u> </h5>\r\n                            </li>\r\n                            <li className={\"flex-item-data\"}>\r\n                                <h5>Desafíos:</h5>\r\n                            </li>\r\n                            <li className={\"items-row\"}>\r\n                                \r\n                                {this.state.hayDesafios == true ? (\r\n                                    this.state.dataChallenges.map((challenge) => (\r\n                                        <>\r\n                                            <ul className={\"flex-items-row-evenly\"}>\r\n                                                <li className={\"flex-item-list\"}>\r\n                                                    {challenge.titulo}\r\n                                                </li>\r\n                                                <li className={\"flex-item-list\"}>\r\n                                                    {challenge.colaborativo == 1  ? (\r\n                                                        \"Individual\"\r\n                                                    ) : (\r\n                                                        \"Colaborativo\"\r\n                                                    )}\r\n                                                </li>\r\n                                                <li className={\"flex-item-list\"}>\r\n                                                    <Link key={challenge.id} to={`/teacher/collections/${this.props.match.params.idCollection}/${challenge.id}`}>\r\n                                                        <Button size={\"sm\"} variant={\"primary\"}>\r\n                                                            Ver escritos\r\n                                                        </Button>\r\n                                                    </Link>\r\n                                                </li>\r\n                                                <li className={\"flex-item-list\"}>\r\n                                                    <Button size={\"sm\"} variant=\"danger\" onClick={() => this.onModalDeleteChallenge(true, challenge.id)}>\r\n                                                        Eliminar\r\n                                                    </Button>\r\n                                                </li>\r\n                                            </ul>\r\n                                            <hr />\r\n                                        </>\r\n                                    ))\r\n                                ) : (\r\n                                    <Alert variant={\"danger\"}>\r\n                                        No hay ningún desafío en esta colección\r\n                                    </Alert>\r\n                                )}\r\n\r\n                            </li>\r\n                            <div className={\"row-edit\"}>\r\n                                <ul className={\"container-column-list wrap\"}>\r\n                                    <li className={\"flex-item-profile\"}>\r\n                                        <label className={\"form-label\"} htmlFor=\"idChallengeSelect\">Añadir un desafío</label>\r\n                                    </li>\r\n                                    <li className={\"flex-item-profile\"}>\r\n                                        <select name=\"idChallengeSelect\" id=\"idChallengeSelect\" onChange={this.handleChangeChallengeSelect}>\r\n                                            <option selected value= \"-1\" >Elija un desafío</option>\r\n                                            {this.state.challengesNotInCollection.map(challenge => {\r\n                                                return (\r\n                                                    <option value={challenge.id}>{challenge.titulo}</option>\r\n                                                )\r\n                                            })}\r\n                                        </select>\r\n                                    </li>\r\n                                    <li className={\"flex-item-profile\"}>\r\n                                        {this.state.selectedChallenge == false ? (\r\n                                            <Button size={\"sm\"} text='Anyadir desafio' disabled>\r\n                                                Añadir\r\n                                            </Button>\r\n                                        ) : (\r\n                                            <Button size={\"sm\"} text='Anyadir desafio' onClick={() => this.addChallengeToCollection(this.state.idChallengeSelect)}>\r\n                                                Añadir\r\n                                            </Button>\r\n                                        )}\r\n                                    </li>\r\n                                </ul>\r\n                            </div>\r\n                        </ul>\r\n                    </Card.Body>\r\n                    </Card>\r\n                </div>\r\n\r\n            </Card.Body>\r\n            </Card>\r\n\r\n            <Modal\r\n                show={this.state.onModalDelete}\r\n            >\r\n            <Modal.Header>\r\n                <Modal.Title>¿Seguro que deseas eliminar el desafío?</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Footer>\r\n                <Button variant=\"primary\" onClick={() => this.deleteChallenge()}>Aceptar</Button>\r\n                <Button variant=\"danger\" onClick={() => this.onModalDeleteChallenge(false, -1)}>Cancelar</Button>\r\n            </Modal.Footer>\r\n            </Modal>\r\n\r\n        </div>\r\n        );\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default ViewCollection;","/*\r\n*  Name_file :ViewChallengeFromCollection.js\r\n*  Description: Contiene los escritos de un desafío perteneciente a una colección.\r\n*    \r\n*/\r\n\r\nimport React, { Component } from 'react';\r\nimport TeacherService from '../../../services/teacher/teacherService.js';\r\n\r\n/**Estilos bibliotecas externas*/\r\nimport  Card from 'react-bootstrap/Card';\r\nimport Alert from 'react-bootstrap/Alert';\r\n\r\n/**Estilos css*/\r\nimport 'react-tabs/style/react-tabs.css';\r\nimport '../../../styles/styleGeneral.css';\r\nimport '../../../styles/styleCard.css';\r\n\r\n\r\nclass ViewChallengeFromCollection extends Component {\r\n\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n\r\n        this.state = {\r\n            nameCollection: \"\",\r\n            nameGroup: \"\",\r\n            idGroup: -1,\r\n            nameChallenge: '',\r\n            dataWritings: [],\r\n            hayEscritos: false,\r\n            colaborativo: -1,\r\n        };\r\n    }\r\n\r\n    componentDidMount()\r\n    {\r\n        // Obtenemos una colección\r\n        TeacherService.getCollection(this.props.match.params.idCollection)\r\n        .then(response => {\r\n            if (response.length > 0)\r\n            {\r\n                this.setState({ nameCollection: response[0].nombreColeccion, nameGroup: response[0].nombreGrupo, idGroup: response[0].idGrupo });\r\n            }\r\n\r\n            // Comprobamos si el desafío es individual o colaborativo\r\n            TeacherService.getChallenge(this.props.match.params.idChallenge)\r\n            .then(response => {\r\n                this.setState({ colaborativo : response[0].colaborativo, nameChallenge: response[0].titulo });\r\n\r\n                // Si el desafío es individual\r\n                if (response[0].colaborativo == 1)\r\n                {\r\n                    // Obtenemos todos los escritos del desafío\r\n                    TeacherService.getWritingsStudent(this.state.idGroup, this.props.match.params.idChallenge)\r\n                    .then(response => {\r\n                        if (response.data.length > 0)\r\n                        {\r\n                            this.setState({ dataWritings: response.data, hayEscritos: true });\r\n                        }\r\n                    })\r\n                }\r\n                else // el desafío es colaborativo\r\n                {\r\n                    // Obtenemos todos los escritos del desafío\r\n                    TeacherService.getWritingsTeam(this.state.idGroup, this.props.match.params.idChallenge)\r\n                    .then(response => {\r\n                        if (response.length > 0)\r\n                        {\r\n                            this.setState({ dataWritings: response, hayEscritos: true });\r\n                        }\r\n                    })\r\n                }\r\n            })\r\n\r\n        })\r\n\r\n    }\r\n\r\n\r\n    /*Dibuja la pagina  */\r\n    render() {\r\n        return (\r\n        <div className=\"container\">\r\n            <Card className=\"card-long\">\r\n            <Card.Body>\r\n                <div className={\"row-edit\"}>\r\n                    <div className={\"section-title\"}>\r\n                        <h2>Desafío \"{this.state.nameChallenge}\"</h2>\r\n                    </div>\r\n                    <br/>\r\n                    <Alert variant={\"info\"}>\r\n                        <img src=\"/info.png\" alt=\"\"/>\r\n                        En este espacio puede ver los escritos de los alumnos que pertenecen al desafío seleccionado.\r\n                    </Alert>\r\n                </div>\r\n\r\n                <div className={\"row-edit\"}>\r\n                    <Card className={\"card-long\"}>\r\n                    <Card.Body >\r\n                        <ul className={\"flex-items-row-start wrap\"}>\r\n\r\n                            <li className={\"flex-item-data\"}>\r\n                                <h5>Colección: <u>{this.state.nameCollection}</u> </h5>\r\n                            </li>\r\n                            <li className={\"flex-item-data\"}>\r\n                                <h5>Grupo: <u>{this.state.nameGroup}</u> </h5>\r\n                            </li>\r\n                            <br/>\r\n                            <li className={\"flex-item-data\"}>\r\n                                <h5>Escritos:</h5>\r\n                            </li>\r\n                            \r\n                            <li className={\"items-row\"}>\r\n                                {this.state.hayEscritos == true ? (\r\n                                    <>\r\n                                    <ul className={\"flex-items-row-evenly\"}>\r\n                                        <li className={\"flex-item-list\"}>\r\n                                            <u><b>Título:</b></u>\r\n                                        </li>\r\n                                        <li className={\"flex-item-list\"}>\r\n                                            <u><b>\r\n                                            {this.state.colaborativo == 1 ?\r\n                                                (\"Estudiante:\") :\r\n                                                (\"Equipo:\")\r\n                                            }\r\n                                            </b></u>\r\n                                        </li>\r\n                                    </ul>\r\n                                    <br/>\r\n\r\n                                    {this.state.dataWritings.map((writing) => (\r\n                                        <>\r\n                                        <ul className={\"flex-items-row-evenly\"}>\r\n                                            <li className={\"flex-item-list\"}>\r\n                                                {writing.nombreEscrito}\r\n                                            </li>\r\n                                            <li className={\"flex-item-list\"}>\r\n                                                {writing.colaborativo == 1  ? (\r\n                                                    // Individual\r\n                                                    <> {writing.nombreEstudiante} {writing.apellidosEstudiante} </>\r\n                                                ) : (\r\n                                                    // Colaborativo\r\n                                                    <> {writing.nombreEquipo} </>\r\n                                                )}\r\n                                            </li>\r\n                                        </ul>\r\n                                        <hr />\r\n                                        </>\r\n                                    ))}\r\n                                    </>\r\n                                ) : (\r\n                                    <>\r\n                                    <br/>\r\n                                    <Alert variant={\"danger\"}>\r\n                                        No hay ningún escrito para este desafío\r\n                                    </Alert>\r\n                                    </>\r\n                                )}\r\n\r\n                                <br/>\r\n                            </li>\r\n\r\n                        </ul>\r\n                    </Card.Body>\r\n                    </Card>\r\n                </div>\r\n\r\n            </Card.Body>\r\n            </Card>\r\n\r\n        </div>\r\n        );\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default ViewChallengeFromCollection;","import React from 'react';\r\nimport { BrowserRouter, Switch, Route, useRouteMatch } from 'react-router-dom';\r\nimport Groups from '../components/pages/user/GroupList';\r\nimport MyGroups from '../components/pages/user/MyGroups';\r\nimport Grupo from '../components/pages/user/Group';\r\nimport CrearGrupo from '../components/pages/teacher/CreateGroup';\r\nimport Sidebar from '../components/sidebar/Sidebar.js';\r\nimport CreateChallenge from '../components/pages/teacher/CreateChallenge.js';\r\nimport EditChallenge from '../components/pages/teacher/EditChallenge.js';\r\n\r\nimport Team from '../components/pages/teacher/ViewTeam';\r\n\r\nimport StudentList from '../components/pages/user/StudentLits.js';\r\nimport ApplicantList from '../components/pages/user/ApplicantList';\r\nimport LinksTeacher from '../links/links-Teacher.js';\r\nimport Profile from '../components/pages/user/Profile.js';\r\n\r\nimport EditWriting from '../components/pages/teacher/EditWriting.js';\r\nimport GroupTeacher from '../components/pages/teacher/GroupTeacher.js';\r\n\r\n\r\nimport Collections from '../components/pages/teacher/Collections';\r\nimport ViewCollection from '../components/pages/teacher/ViewCollection';\r\nimport ViewChallengeFromCollection from '../components/pages/teacher/ViewChallengeFromCollection';\r\n\r\n/*defino las rutas de los componentes\r\nRutas o urls del Teacher asociado a la componente pages/teacher*/\r\nfunction Routes() {\r\n  let { url } = useRouteMatch();\r\n  return (\r\n    <>\r\n      <BrowserRouter>\r\n        <Sidebar links={LinksTeacher} url={url} />\r\n        <Switch>\r\n          <Route exact path=\"/teacher/groups\" component={GroupTeacher} />\r\n          <Route exact path=\"/teacher/createGroup\" component={CrearGrupo} />\r\n          <Route exact path=\"/teacher/viewGroup/:idGroup\" component={Grupo} />\r\n          <Route exact path=\"/teacher/viewTeam/:idTeam\" component={Team} />\r\n          <Route exact path=\"/teacher/createChallenge/:idGroup\" component={CreateChallenge} />\r\n          <Route exact path=\"/teacher/editChallenge/:idGroup/:idChallenge\" component={EditChallenge} />\r\n          <Route exact path=\"/teacher/students\" component={StudentList} />\r\n          <Route exact path=\"/teacher/applicants\" component={ApplicantList} />\r\n          <Route exact path=\"/teacher/students/viewProfile/:idStudent\" component={Profile} />\r\n          <Route exact path=\"/teacher/editWriting/:idGroup/:idChallenge/:idWriting/:idStudent\" component={EditWriting} />\r\n\r\n\r\n          <Route exact path=\"/teacher/collections\" component={Collections} />\r\n          <Route exact path=\"/teacher/collections/:idCollection\" component={ViewCollection} />\r\n          <Route exact path=\"/teacher/collections/:idCollection/:idChallenge\" component={ViewChallengeFromCollection} />\r\n        </Switch>\r\n      </BrowserRouter>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Routes;","/*\r\n*  Name_file :HomeTeacher.js\r\n*  Description: Página home del profesor, contiene la vista del profesor\r\n*    \r\n*/\r\nimport React from 'react';\r\nimport RoutesTeacher from '../../../routes/routesTeacher';\r\n\r\nfunction TeacherBoard() {\r\n\r\n     /*Dibuja la pagina  del profesor */\r\n     return (\r\n       <>\r\n        <RoutesTeacher />\r\n       </>\r\n     );\r\n}\r\n\r\nexport default TeacherBoard;","import React, { Component } from 'react';\r\n\r\nclass Tabs extends Component {\r\n    state = {\r\n        tabs: null, //array ata\r\n        activeTab: null //id tab activo\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { data } = this.props;\r\n\r\n        //me devuelve el primer elemento activo\r\n        const activeTab = data.find(tabData => {\r\n            return tabData.state === \"active\";\r\n        })\r\n\r\n        this.setState({ tabs: data, activeTab: activeTab.id });\r\n    }\r\n\r\n    handleClick(event, currentTab) {\r\n\r\n        event.preventDefault();\r\n        const newTabs = this.state.tabs;\r\n        newTabs.forEach((tab, index) => {\r\n            newTabs[index].state = (tab.id === currentTab.id ? \"active\" : \"inactive\");\r\n        });\r\n        this.setState({ tabs: newTabs, activeTab: currentTab.id });\r\n    }\r\n\r\n    renderTabs() {\r\n        const { tabs } = this.state;\r\n        return (\r\n            <ul className=\"nav nav-tabs\">\r\n                {tabs.map((tab, index) => {\r\n                    return (\r\n                        <li className=\"nav-item\" key={index}>\r\n                            <a href=\"/\" className={`nav-link ${tab.state}`}\r\n                                onClick={event => this.handleClick(event, tab)}>{tab.name}</a>\r\n                        </li>\r\n                    );\r\n                })}\r\n            </ul>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        const { tabs, activeTab } = this.state;\r\n        const tabToShow = activeTab - 1;\r\n        return (\r\n            <>\r\n                {tabs && this.renderTabs()}\r\n                {tabs && tabs[tabToShow].content()}\r\n            </>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default Tabs;\r\n","import React, { Component } from 'react';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport StudentService from '../../../services/student/student-service.js';\r\n\r\n/**Datos del usuario */\r\nimport AuthUser from '../../../services/authenticity/auth-service.js';\r\n\r\n//Fecha y Hora\r\nimport moment from 'moment';\r\n\r\n// Componentes estilos\r\nimport Table from \"react-bootstrap/Table\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport Alert from 'react-bootstrap/Alert';\r\n\r\n//Estilos\r\nimport '../../../styles/styleGeneral.css';\r\nimport '../../../styles/styleCard.css';\r\n\r\nclass WritingsStudent extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            data: [],\r\n            showWritings: false,\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        //obtiene los escritos del estudiante\r\n        if (this.props.groupSelect === undefined) {\r\n            StudentService.getWritings(AuthUser.getCurrentUser().id)\r\n                .then(response => {\r\n                    if (response.data.length !== 0) {\r\n                        this.setState({ data: response.data, showWritings: true });\r\n                    }\r\n                })\r\n                .catch(error => {\r\n                    console.log(error.message);\r\n                })\r\n        }\r\n        else {\r\n            StudentService.getWritingsStudent(AuthUser.getCurrentUser().id, this.props.groupSelect)\r\n                .then(response => {\r\n                    if (response.length !== 0) {\r\n                        this.setState({ data: response, showWritings: true });\r\n                    }\r\n                })\r\n                .catch(error => {\r\n                    console.log(error.message);\r\n                })\r\n        }\r\n    }\r\n\r\n\r\n\r\n    //Devuelve string del escrito finalizado\r\n    showWritingFinalized = (writing) => {\r\n        if (writing.finalizado === 1)\r\n            return \"Si\"\r\n        else\r\n            return \"No\"\r\n    }\r\n\r\n    //Devuelve string del desafio finalizado\r\n    showChallengeFinalized = (writing) => {\r\n        var dateActual = new Date();\r\n        var dateFin = new Date(writing.fechaFin)//fecha fin del desafio\r\n        //si ya se paso la fecha del desafio, desactivar button\r\n        if (dateActual.getTime() > dateFin.getTime())\r\n            return \"Si\"\r\n        else\r\n            return \"No\"\r\n    }\r\n\r\n    challengeFinalized = (writing) => {\r\n        var dateActual = new Date();\r\n        var dateFin = new Date(writing.fechaFin)//fecha fin del desafio\r\n        //si ya se paso la fecha del desafio, desactivar button\r\n        if (dateActual.getTime() > dateFin.getTime())\r\n            return true;\r\n        else\r\n            return false;\r\n    }\r\n\r\n    /*Dibuja la pagina  */\r\n    render() {\r\n        let formatedDate;\r\n        let { data, showWritings } = this.state;\r\n        return (\r\n\r\n                <Card className=\"card-long\">\r\n                    <Card.Body>\r\n                        {showWritings ? (\r\n                            <>\r\n                            <div className={\"row-edit\"}>\r\n                                <label className={\"form-label\"} htmlFor=\"\">Lista de escritos</label>\r\n                            </div>\r\n                            <div className=\"row-edit\">\r\n                                <Table bordered hover responsive>\r\n                                    <thead>\r\n                                        <tr>\r\n                                            <th >Escrito</th>\r\n                                            <th >Grupo</th>\r\n                                            <th >Desafío</th>\r\n                                            <th>Desafio Finalizado</th>\r\n                                            <th >Estudiante</th>\r\n                                            <th >Fecha</th>\r\n                                            <th >Hora</th>\r\n                                            <th >Acciones</th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        {data.map((writing) => (\r\n                                            < tr key={writing.id} >\r\n                                                <td>{writing.nombreEscrito}</td>\r\n                                                <td>{writing.nombreGrupo}</td>\r\n                                                <td>{writing.nombreDesafio}</td>\r\n                                                <td>{this.showChallengeFinalized(writing)}</td>\r\n                                                <td>{writing.nombre} {writing.apellidos}</td>\r\n                                                <td >{formatedDate = moment(writing.fechaFin).format('DD/MM/YYYY')}</td>\r\n                                                <td >{formatedDate = moment(writing.fechaFin).format('LT')}</td>\r\n                                                {this.challengeFinalized(writing) ? (\r\n                                                    <td>\r\n                                                        <img src=\"/view.png\" alt=\"\"/>\r\n                                                        <Button\r\n                                                            href ={`/student/viewWriting/${this.props.groupSelect}/${writing.idDesafio}/${writing.id}`}\r\n                                                            variant=\"link\"\r\n\r\n                                                        >\r\n                                                            Ver\r\n                                                        </Button>\r\n                                                    </td>\r\n                                                ) : (\r\n                                                    <td >\r\n                                                        <Link to={`/student/editWriting/${writing.idGrupo}/${writing.idDesafio}/${writing.id}`}>\r\n                                                            <img src=\"/edit.png\" alt=\"\"/>\r\n                                                            <Button variant=\"link\" disabled={this.challengeFinalized(writing)}>\r\n                                                                 Editar\r\n                                                            </Button>\r\n                                                       </Link>\r\n                                                    </td>\r\n                                                )}\r\n                                            </tr>\r\n                                        ))}\r\n                                    </tbody>\r\n                                </Table>\r\n                            </div>\r\n                            </>\r\n                        ) : (\r\n\r\n                            <div className=\"row-edit\">\r\n                                <Alert variant={\"danger\"}>\r\n                                     No dispones de escritos para mostrar\r\n                                </Alert>\r\n                            </div>\r\n                        )}\r\n                    </Card.Body>\r\n                </Card>\r\n        );\r\n    }\r\n}\r\n\r\nexport default WritingsStudent;","import React, { Component } from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport StudentService from '../../../services/student/student-service.js';\r\n\r\n/**Datos del usuario */\r\nimport AuthUser from '../../../services/authenticity/auth-service.js';\r\n\r\n//Fecha y Hora\r\nimport moment from 'moment';\r\n\r\n// Componentes estilos\r\nimport Table from \"react-bootstrap/Table\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport Alert from 'react-bootstrap/Alert';\r\n\r\n//Estilos\r\nimport '../../../styles/styleGeneral.css';\r\nimport '../../../styles/styleCard.css';\r\n\r\nclass WritingsTeam extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            dataTeamStudent: [],\r\n            dataWritingTeam: [],\r\n            data: [],\r\n            showWritings: false,\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.groupSelect === undefined) {\r\n            StudentService.getWritingsCollaborative(AuthUser.getCurrentUser().id)\r\n                .then(response => {\r\n                    if (response.data.length !== 0) {\r\n                        this.setState({ dataWritingTeam: response.data, showWritings: true });\r\n                    }\r\n                }).catch(error => {\r\n                    console.log(error.message);\r\n                })\r\n        }\r\n        else {\r\n            /*Obtiene equipo del estudiante correspondiente a un grupo en concreto*/\r\n            StudentService.getTeamStudentGroup(AuthUser.getCurrentUser().id, this.props.groupSelect)\r\n                .then(response => {\r\n                    this.setState({ dataTeamStudent: response });\r\n                    //si el estudiante tiene equipo\r\n                    if (response.length != 0) {\r\n                        /**Obtiene los escritos del equipo del estudiante */\r\n                        StudentService.getWritingsTeam(response[0].idEquipo, this.props.groupSelect)\r\n                            .then(response => {\r\n                                if (response.length !== 0) {\r\n                                    this.setState({ dataWritingTeam: response, showWritings: true });\r\n                                }\r\n                            }).catch(error => {\r\n                                console.log(error.message);\r\n                            })\r\n                    }\r\n                }).catch(error => {\r\n                    console.log(error.message);\r\n                })\r\n        }\r\n    }\r\n\r\n    //Devuelve string de escrito finalizado\r\n    showWritingFinalized = (writing) => {\r\n        if (writing.finalizado === 1)\r\n            return \"Si\"\r\n        else\r\n            return \"No\"\r\n    }\r\n\r\n    //Devuelve string del desafio finalizado\r\n    showChallengeFinalized = (writing) => {\r\n        var dateActual = new Date();\r\n        var dateFin = new Date(writing.fechaFin)//fecha fin del desafio\r\n        //si ya se paso la fecha del desafio, desactivar button\r\n        if (dateActual.getTime() > dateFin.getTime())\r\n            return \"Si\"\r\n        else\r\n            return \"No\"\r\n    }\r\n\r\n    challengeFinalized = (writing) => {\r\n        var dateActual = new Date();\r\n        var dateFin = new Date(writing.fechaFin)//fecha fin del desafio\r\n        //si ya se paso la fecha del desafio, desactivar button\r\n        if (dateActual.getTime() > dateFin.getTime())\r\n            return true;\r\n        else\r\n            return false;\r\n    }\r\n\r\n    /*Dibuja la pagina  */\r\n    render() {\r\n        let formatedDate;\r\n        let { dataWritingTeam, showWritings } = this.state;\r\n        return (\r\n            <Card className=\"card-long\">\r\n                <Card.Body>\r\n                    {showWritings ? (\r\n                        <div className={\"row-edit\"}>\r\n                            <label className={\"form-label\"}>Lista de escritos</label>\r\n                            <div className=\"table-margin\">\r\n                                <Table bordered hover responsive>\r\n                                    <thead>\r\n                                        <tr>\r\n                                            <th>Escrito</th>\r\n                                            <th>Grupo</th>\r\n                                            <th>Desafio</th>\r\n                                            <th>Desafio Finalizado</th>\r\n                                            <th>Equipo</th>\r\n                                            <th>Fecha</th>\r\n                                            <th>Hora</th>\r\n                                            <th>Acciones</th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        {dataWritingTeam.map((writing) => (\r\n                                            <tr key={writing.id} >\r\n                                                <td>{writing.nombreEscrito}</td>\r\n                                                <td>{writing.nombreGrupo}</td>\r\n                                                <td>{writing.nombreDesafio}</td>\r\n                                                <td>{this.showChallengeFinalized(writing)}</td>\r\n                                                <td>{writing.nombreEquipo}</td>\r\n                                                <td >{formatedDate = moment(writing.fechaFin).format('DD/MM/YYYY')}</td>\r\n                                                <td >{formatedDate = moment(writing.fechaFin).format('LT')}</td>\r\n\r\n                                                {this.challengeFinalized(writing) ? (\r\n                                                    <td>\r\n                                                        <Link to={`/student/viewWriting/${this.props.groupSelect}/${writing.idDesafio}/${writing.id}`} >\r\n                                                            <img src=\"/view.png\" alt=\"\"/>\r\n                                                            <Button  size={\"sm\"} variant=\"link\" disabled={writing.finalizado === 1 ? false : true}>\r\n                                                                Ver\r\n                                                            </Button>\r\n                                                         </Link>\r\n                                                    </td>\r\n                                                ) : (\r\n                                                    <td>\r\n                                                        <Link to={`/student/editWriting/${writing.idGrupo}/${writing.idDesafio}/${writing.id}`}>\r\n                                                            <img src=\"/edit.png\" alt=\"\"/>\r\n                                                            <Button ize={\"sm\"}  variant=\"link\" disabled={this.challengeFinalized(writing)}>\r\n                                                                Editar\r\n                                                            </Button>\r\n                                                        </Link>\r\n                                                    </td>\r\n                                                )}\r\n                                            </tr>\r\n                                        ))}\r\n                                    </tbody>\r\n                                </Table>\r\n                            </div>\r\n                        </div>\r\n                    ) : (\r\n\r\n                        <div className=\"row-edit\">\r\n                            <Alert variant={\"danger\"}>\r\n                                No dispones de escritos para mostrar\r\n                            </Alert>\r\n                        </div>\r\n                    )}\r\n                </Card.Body>\r\n            </Card>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default WritingsTeam;","import React,{ useState } from \"react\";\r\nimport TabsWriting from \"./Tabs\";\r\nimport WritingsStudent from \"./WritingsStudent\";\r\nimport WritingsTeam from \"./WritingsTeam\";\r\n\r\n\r\n/**Estilos Bootstrap*/\r\nimport Card from 'react-bootstrap/Card';\r\n\r\n/** Estilo CSS*/\r\nimport '../../../styles/styleGeneral.css';\r\nimport '../../../styles/styleCard.css';\r\n\r\nfunction WritingTabs(props) {\r\n    const [count, setCount] = useState(0);\r\n    const data = [\r\n            { id: 1, name: \"Escritos\", content: () => <WritingsStudent key={props.groupSelect} groupSelect={props.groupSelect}/>, state: \"active\" },\r\n            { id: 2, name: \"Escritos en equipo\", content: () => <WritingsTeam key={props.groupSelect} groupSelect={props.groupSelect} />, state: \"inactive\" },\r\n    ];\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <Card className={\"card-long\"}>\r\n                <Card.Body>\r\n                    <TabsWriting data={data} />\r\n                </Card.Body>\r\n            </Card>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default WritingTabs;","/*\r\n*  Name_file: Teams.js\r\n*  Description: Pagina de equipos del estudiante, contiene la vista de todos los equipos \r\n*  que tiene el estudiante\r\n*    \r\n*/\r\n\r\nimport React, { Component } from 'react';\r\nimport { Link } from \"react-router-dom\";\r\n\r\n/**Servicios del estudiante */\r\nimport StudentService from '../../../services/student/student-service.js';\r\n\r\n/**Datos del usuario */\r\nimport AuthUser from '../../../services/authenticity/auth-service.js';\r\n\r\n/*Componentes de estilo Bootstrap*/\r\nimport Table from \"react-bootstrap/Table\";\r\nimport Card from 'react-bootstrap/Card';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Alert from 'react-bootstrap/Alert';\r\n\r\n/*Importaciones del css*/\r\nimport '../../../styles/styleGeneral.css';\r\nimport '../../../styles/Challenge.css';\r\nimport '../../../styles/styleCard.css';\r\n\r\nclass TeamStudent extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        // const dataUser = AuthUser.getCurrentUser();\r\n        this.state = {\r\n            //dataTeams: [],//contiene los equipos del estudiante \r\n            dataTeamStudentGroup: [],//equipo del estudiante\r\n            dataMembersTeam: [],//integrantes del equipo\r\n            dataStudentWithoutTeam: [],//estudiantes sin equipo\r\n\r\n            // idTeamCreated: '',//id del equipo creado\r\n            teamName: '',//nombre del equipo a crear\r\n            idGuest: '',//invitado\r\n            idKicked: '',//estudiante a kicker\r\n            idLider: '',//idLider\r\n            nameLider: '',//idLider\r\n            groupSelect: '',\r\n\r\n            cdm: false,//component did mount se ejecuto\r\n            /*modales*/\r\n\r\n            onModal: false,\r\n            //modalCreateTeam: false,\r\n\r\n            modalLeaveLider: false,\r\n            modalSuccesfulInvitation: false,\r\n            modalSuccessCreateTeam: false,\r\n            modalCreateTeam: false,\r\n            modalDeleteTeam: false,\r\n            modalLeaveTeam: false,\r\n            modalKickStudent: false,\r\n            modalErrorInvitation: false,\r\n            modalErrorReceiveInvitation: false,\r\n            showCreateTeam: false,\r\n            showTeamStudent: false,\r\n\r\n            showLiderStudent: false,//muestra funciones que solo puede ver el lider como eliminar integrante/ invitar miembro\r\n            formErrors: {\r\n                teamName: '',\r\n            }\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        var groupSelect;\r\n        //si en el sidebar entro en \"Equipos\"\r\n        if (this.props.groupSelect === undefined) {\r\n            groupSelect = this.props.match.params.idGroup;\r\n            this.setState({ groupSelect: groupSelect });\r\n        }\r\n        else if (this.props.match === undefined) {//si por grupos entro en \"Equipos\"\r\n            groupSelect = this.props.groupSelect;\r\n            this.setState({ groupSelect: groupSelect, showCreateTeam: true });\r\n        }\r\n\r\n        /*Obtiene equipo del estudiante correspondiente a un grupo en concreto*/\r\n        StudentService.getTeamStudentGroup(AuthUser.getCurrentUser().id, groupSelect)\r\n            .then(response => {\r\n                //Si tiene equipo\r\n                if (response.length != 0) {\r\n                    if (response[0].idCreador === AuthUser.getCurrentUser().id)//si estudiante es lider del equipo\r\n                        this.setState({ dataTeamStudentGroup: response, idLider: response[0].idCreador, showLiderStudent: true, showCreateTeam: false });\r\n                    else {\r\n                        this.setState({ dataTeamStudentGroup: response, idLider: response[0].idCreador, showCreateTeam: false });\r\n                    }\r\n                }\r\n                //si el estudiante tiene equipo\r\n                if (response.length != 0) {\r\n                    //me traigo los integrantes de un mismo equipo\r\n                    StudentService.getMembersTeam(response[0].idEquipo)\r\n                        .then(responseGetMembersTeam => {\r\n                            var nombre;\r\n                            //si un miembro del equipo es el lider, guardo el nombre y apellido del lider \r\n                            responseGetMembersTeam.filter(member1 => member1.idEstudiante === this.state.idLider).map((member) => (\r\n                                nombre = member.nombreEstudiante + \" \" + member.apellidoEstudiante\r\n                            ));\r\n                            this.setState({ dataMembersTeam: responseGetMembersTeam, nameLider: nombre, showTeamStudent: true, cdm: true });\r\n\r\n                        }).catch(error => {\r\n                            console.log(error.message);\r\n                        })\r\n                }\r\n            }).catch(error => {\r\n                console.log(error.message);\r\n            })\r\n\r\n        /*Me traigo estudiantes sin equipos de un grupo*/\r\n        StudentService.getStudentWithoutTeam(groupSelect)\r\n            .then(responseGetStudentWithoutTeam => {\r\n                // dataStudentWithoutTeam\r\n                this.setState({ dataStudentWithoutTeam: responseGetStudentWithoutTeam });\r\n            }).catch(error => {\r\n                console.log(error.message);\r\n            })\r\n    }\r\n\r\n    //Crea un equipo\r\n    createTeam = () => {\r\n        //crea un equipo\r\n        if (this.state.teamName !== \"\") {\r\n            this.setState({ modalCreateTeam: false, showCreateTeam: false })\r\n            StudentService.createTeam(AuthUser.getCurrentUser().id, this.state.groupSelect, this.state.teamName)\r\n                .then(response => {\r\n                    this.showModalSuccessCreateTeam();\r\n                    var idTeam = response;\r\n                    //agrega a la tabla equipoestudiante el nuevo equipo con idTeam y idEstudiante\r\n                    StudentService.addStudentTeam(idTeam, AuthUser.getCurrentUser().id)\r\n                        .then(response => {\r\n                            // var nombre = AuthUser.getCurrentUser().username + \" \" + AuthUser.getCurrentUser().surname;\r\n                            // let data = [{ id: idTeam, nombreEquipo: this.state.teamName, idCreador: AuthUser.getCurrentUser().id }]\r\n                            // let data2 = [{ idEstudiante: AuthUser.getCurrentUser().id, nombreEstudiante: AuthUser.getCurrentUser().username, apellidoEstudiante: AuthUser.getCurrentUser().surname }]\r\n                            // this.setState({ dataTeamStudentGroup: data, dataMembersTeam: data2, idLider: AuthUser.getCurrentUser().id, nameLider: nombre, showTeamStudent: true, showLiderStudent: true });\r\n                            /*Obtiene equipo del estudiante correspondiente a un grupo en concreto*/\r\n                            StudentService.getTeamStudentGroup(AuthUser.getCurrentUser().id, this.state.groupSelect)\r\n                                .then(response => {\r\n                                    var nombre = AuthUser.getCurrentUser().username + \" \" + AuthUser.getCurrentUser().surname;\r\n                                    let dataMembersTeam = [{ idEstudiante: AuthUser.getCurrentUser().id, nombreEstudiante: AuthUser.getCurrentUser().username, apellidoEstudiante: AuthUser.getCurrentUser().surname }]\r\n                                    this.setState({ dataTeamStudentGroup: response, dataMembersTeam: dataMembersTeam, idLider: AuthUser.getCurrentUser().id, nameLider: nombre, showTeamStudent: true, showLiderStudent: true });\r\n                                }).catch(error => {\r\n                                    console.log(error.message);\r\n                                })\r\n                        })\r\n                        .catch(error => {\r\n                            console.log(error.message);\r\n                        })\r\n                })\r\n                .catch(error => {\r\n                    console.log(error.message);\r\n                })\r\n        }\r\n    }\r\n\r\n    //Edita un equipo (cambio de lider de un equipo o se edita el nombre del equipo)\r\n    editTeam = () => {\r\n        let arreglo = [];\r\n        //this.setState({ dataTeamStudentGroup: arreglo, showTeamStudent: false, showLiderStudent: false, modalDeleteTeam: false, modalLeaveLider: false });\r\n        StudentService.editTeam(this.state.dataTeamStudentGroup[0].idEquipo, this.state.dataTeamStudentGroup[0].nombreEquipo, this.state.idLider, this.state.dataTeamStudentGroup[0].idGrupo)\r\n            .then(response => {\r\n                StudentService.leaveStudentTeam(this.state.dataTeamStudentGroup[0].idEquipo, AuthUser.getCurrentUser().id)\r\n                    .then(response => {\r\n                        this.setState({ dataTeamStudentGroup: arreglo, showTeamStudent: false, showLiderStudent: false, modalDeleteTeam: false, modalLeaveLider: false });\r\n                    })\r\n                    .catch(error => {\r\n                        console.log(error.message);\r\n                    })\r\n\r\n                this.setState({ modalLeaveLider: false })\r\n            })\r\n            .catch(error => {\r\n                console.log(error.message);\r\n            })\r\n    };\r\n\r\n    //Elimina equipo\r\n    deleteTeam = () => {\r\n        if (this.props.match === undefined) {//si por grupos entro en \"Equipos\"\r\n            this.setState({ showCreateTeam: true });\r\n        }\r\n        let arreglo = [];\r\n        let idEquipo=this.state.dataTeamStudentGroup[0].idEquipo;\r\n        this.setState({ dataTeamStudentGroup: arreglo, showTeamStudent: false, showLiderStudent: false, modalDeleteTeam: false });\r\n        \r\n        StudentService.getWritingsCollaborative(idEquipo)\r\n        .then(response => {\r\n            debugger;\r\n            console.log(\"tienes equipos\")\r\n           \r\n        })\r\n        .catch(error => {\r\n            console.log(error.message);\r\n        })\r\n\r\n        StudentService.deleteTeam(idEquipo)\r\n            .then(response => {\r\n                // this.closeModalDeleteTeam();\r\n               \r\n            })\r\n            .catch(error => {\r\n                console.log(error.message);\r\n            })\r\n    }\r\n\r\n    askInvitation = () => {\r\n        var idTeam = this.state.dataTeamStudentGroup[0].idEquipo;\r\n        var idGroup = this.state.groupSelect;\r\n        var idReceiver = this.state.idGuest;\r\n\r\n        //Comprueba si envio una solicitud antes al estudiante a invitar\r\n        StudentService.searchMessageByReceiver(idGroup, idReceiver, idTeam)\r\n            .then(response => {\r\n                if (response.length === 0) {\r\n                    //Comprueba si recibió una solicitud antes por el estudiante a invitar\r\n                    StudentService.searchMessageByIssuer(idGroup, idReceiver, idTeam)\r\n                        .then(response => {\r\n                            if (response.length === 0) {\r\n                                this.invite()\r\n                            }\r\n                            else {\r\n                                this.showModalErrorReceiveInvitation();\r\n                            }\r\n                        })\r\n                        .catch(error => {\r\n                            console.log(error.message);\r\n                        })\r\n                }\r\n                else {\r\n                    this.showModalErrorInvitation();\r\n                }\r\n            })\r\n            .catch(error => {\r\n                console.log(error.message);\r\n            })\r\n    };\r\n\r\n    //Envia una invitación a un estudiante para unirse a su equipo\r\n    invite = () => {\r\n        var idGroup = this.state.groupSelect;\r\n        var nombre = AuthUser.getCurrentUser().username;\r\n        var apellidos = AuthUser.getCurrentUser().surname;\r\n        var messageBody = \"te envía una invitación para unirte a su equipo\";\r\n        var equipo = this.state.dataTeamStudentGroup[0].nombreEquipo;\r\n        var grupo = this.state.dataTeamStudentGroup[0].nombreGrupo;\r\n        var message = nombre + \" \" + apellidos + \" \" + messageBody + \" \" + equipo + \" del Grupo de \" + grupo;\r\n        StudentService.sendMessage(idGroup, AuthUser.getCurrentUser().id, this.state.idGuest, this.state.dataTeamStudentGroup[0].idEquipo, message, 2)\r\n            .then(response => {\r\n                this.showModalSuccesfulInvitation();\r\n            }).catch(error => {\r\n                console.log(error.message);\r\n            })\r\n    };\r\n\r\n    //Abandona el estudiante un equipo\r\n    leaveTeam = () => {\r\n        if (this.props.match === undefined) {//si por grupos entro en \"Equipos\"\r\n            this.setState({ showCreateTeam: true });\r\n        }\r\n        let arreglo = [];\r\n        this.setState({ dataTeamStudentGroup: arreglo, showTeamStudent: false, showLiderStudent: false, modalLeaveTeam: false });\r\n        StudentService.leaveStudentTeam(this.state.dataTeamStudentGroup[0].idEquipo, AuthUser.getCurrentUser().id)\r\n            .then(response => {\r\n                //this.closeModalLeaveTeam();\r\n            })\r\n            .catch(error => {\r\n                console.log(error.message);\r\n            })\r\n    };\r\n\r\n    //Elimina estudiante un equipo\r\n    kickStudentTeam = () => {\r\n        this.setState({ modalKickStudent: false })\r\n        var contador = 0;\r\n        var arreglo = this.state.dataMembersTeam;\r\n        arreglo.map((registro) => {\r\n            if (this.state.idKicked === registro.idEstudiante.toString()) {\r\n                arreglo.splice(contador, 1);\r\n            }\r\n            contador++;\r\n        });\r\n        this.setState({ dataMembersTeam: arreglo });\r\n        StudentService.leaveStudentTeam(this.state.dataTeamStudentGroup[0].idEquipo, this.state.idKicked)\r\n            .then(response => {\r\n                //this.closeModalKickStudent();\r\n            })\r\n            .catch(error => {\r\n                console.log(error.message);\r\n            })\r\n    };\r\n\r\n    //obtiene al estudiante que va heredar el lider del equipo\r\n    selectLider = e => {\r\n        this.setState({\r\n            idLider: e.target.value\r\n        });\r\n    };\r\n\r\n    //obtiene al estudiante a invitar\r\n    selectGuest = e => {\r\n        this.setState({\r\n            idGuest: e.target.value\r\n        });\r\n    };\r\n\r\n    //obtiene al estudiante a invitar\r\n    selectKicked = e => {\r\n        this.setState({\r\n            idKicked: e.target.value\r\n        });\r\n    };\r\n\r\n    //Obtiene el nombre del equipo\r\n    onChangeTeamName = e => {\r\n        e.preventDefault();\r\n        const { name, value } = e.target;\r\n        let formErrors = { ...this.state.formErrors };\r\n        switch (name) {\r\n            case \"teamName\":\r\n                formErrors.teamName =\r\n                    value.length < 1 ? \"Campo obligatorio requerido\" : \"\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        this.setState({\r\n            formErrors,\r\n            teamName: e.target.value\r\n        });\r\n    }\r\n\r\n    //activa/desactiva el boton eliminar equipo\r\n    disabledButtonInvite = () => {\r\n        //si no tengo equipo, desactivar boton invitar \r\n        if (this.state.dataTeamStudentGroup.length === 0)\r\n            return true;//desactivar boton\r\n        else {\r\n            //si no soy el creador del equipo o si no hay estudiantes sin equipos\r\n            if (this.state.dataTeamStudentGroup[0].idCreador !== AuthUser.getCurrentUser().id || this.state.dataStudentWithoutTeam.length === 0)\r\n                return true;//desactivar boton\r\n            else {\r\n                return null;\r\n            }\r\n        }\r\n    }\r\n\r\n    //activa/desactiva el boton eliminar equipo\r\n    disabledButtonDeleteTeam = () => {\r\n        //si no tengo equipo, desactivar boton eliminar o si no soy el creador del equipo desactivar boton eliminar\r\n        if ((this.state.dataTeamStudentGroup.length === 0) || (this.state.dataTeamStudentGroup[0].idCreador !== AuthUser.getCurrentUser().id))\r\n            return true;\r\n        else\r\n            return null;\r\n    }\r\n\r\n    //activa/desactiva el boton eliminar equipo\r\n    disabledButtonKickMembersTeam = () => {\r\n        //si no tengo equipo, desactivar boton eliminar\r\n        if (this.state.dataTeamStudentGroup.length === 0)\r\n            return true;//desactivar boton\r\n        else {\r\n            //si no soy el creador del equipo desactivar boton eliminar o si solo existe un miembro del equipo\r\n            if (this.state.dataTeamStudentGroup[0].idCreador !== AuthUser.getCurrentUser().id || this.state.dataMembersTeam.length === 1)\r\n                return true;//desactivar boton\r\n            else\r\n                return null;//no se desactiva\r\n        }\r\n    }\r\n\r\n    //Abandona el estudiante un equipo\r\n    askLeaveTeam = () => {\r\n        //si soy el creador del equipo\r\n        if (this.state.dataTeamStudentGroup[0].idCreador === AuthUser.getCurrentUser().id && this.state.dataMembersTeam.length > 1) {\r\n            this.showModalLeaveLider();\r\n        }\r\n        else {//salir del equipo\r\n            this.showModalLeaveTeam();\r\n        }\r\n    };\r\n\r\n    //Modal de confirmacion para eliminar equipo\r\n    askDeleteTeam = () => {\r\n        //si soy el creador del equipo\r\n        if (this.state.dataTeamStudentGroup[0].idCreador === AuthUser.getCurrentUser().id) {\r\n            this.showModalDeleteTeam();\r\n        }\r\n    };\r\n\r\n    showModalLeaveLider = () => {\r\n        this.setState({\r\n            modalLeaveLider: true,\r\n        });\r\n    };\r\n\r\n    showModalCreateTeam = () => {\r\n        this.setState({\r\n            modalCreateTeam: true,\r\n        });\r\n    };\r\n\r\n    showModalLeaveTeam = () => {\r\n        this.setState({\r\n            //   form: dato,\r\n            modalLeaveTeam: true,\r\n        });\r\n    };\r\n\r\n    showModalKickStudent = () => {\r\n        this.setState({\r\n            //   form: dato,\r\n            modalKickStudent: true,\r\n        });\r\n    };\r\n\r\n    showModalDeleteTeam = () => {\r\n        this.setState({\r\n            //   form: dato,\r\n            modalDeleteTeam: true,\r\n        });\r\n    };\r\n\r\n\r\n    showModalErrorInvitation = () => {\r\n        this.setState({\r\n            modalErrorInvitation: true,\r\n        });\r\n        //cierra el modal despues de 3 segundos\r\n        setTimeout(\r\n            () => this.setState({ modalErrorInvitation: false }),\r\n            2000\r\n        );\r\n    };\r\n\r\n    showModalErrorReceiveInvitation = () => {\r\n        this.setState({\r\n            modalErrorReceiveInvitation: true,\r\n        });\r\n        //cierra el modal despues de 3 segundos\r\n        setTimeout(\r\n            () => this.setState({ modalErrorReceiveInvitation: false }),\r\n            3000\r\n        );\r\n    };\r\n\r\n    //Muestra modal de invitación enviada satisfactoriamente\r\n    showModalSuccesfulInvitation = () => {\r\n        this.setState({\r\n            modalSuccesfulInvitation: true,\r\n        });\r\n        setTimeout(\r\n            () => this.setState({ modalSuccesfulInvitation: false }),\r\n            2000\r\n        );\r\n    };\r\n\r\n    //Muestra modal de equipo creado satisfactoriamente\r\n    showModalSuccessCreateTeam = () => {\r\n        this.setState({\r\n            //   form: dato,\r\n            modalSuccessCreateTeam: true,\r\n        });\r\n        setTimeout(\r\n            () => this.setState({ modalSuccessCreateTeam: false }),\r\n            2000\r\n        );\r\n    };\r\n\r\n    componentDidUpdate(pP, pS, sS) {\r\n        var u = 1\r\n        u = u + 1\r\n        console.log(\"hola------>\", u++);\r\n        if (this.state.cdm) {\r\n            if (pS.dataTeamStudentGroup !== this.state.dataTeamStudentGroup) {\r\n                console.log(\"hacer algo\");\r\n            }\r\n        }\r\n    }\r\n\r\n     /*Cambia estado del modal*/\r\n     onModal(modal) {\r\n        this.setState({\r\n            onModal: modal\r\n        });\r\n    }\r\n\r\n    //Comprueba si el nombre del equipo es vacio\r\n    checkCreateTeam() {\r\n        //Comprueba si el campo está vacío\r\n        if (this.state.teamName == '')\r\n            this.onModal(true);\r\n        else\r\n            this.onModalCreateTeam(true);\r\n    }\r\n\r\n\r\n     //modal de crearGrupo\r\n     onModalCreateTeam = (modal) => {\r\n        this.setState({\r\n            modalCreateTeam: modal,\r\n        });\r\n    };\r\n\r\n    /*Dibuja la pagina  */\r\n    render() {\r\n        const { showCreateTeam, showTeamStudent, showLiderStudent, formErrors, dataTeamStudentGroup, dataMembersTeam } = this.state;\r\n        return (\r\n           <div className={\"container\"}>\r\n            <Card className=\"card-long\">\r\n                <Card.Body>\r\n                    {showLiderStudent ? (\r\n                        <>\r\n                            <div className=\"row-edit\">\r\n                                <Alert variant={\"info\"}>\r\n                                    <img src=\"/info.png\" alt=\"\" />\r\n                                    Puedes seleccionar a un estudiante del grupo e invitarle o eliminar a miembro de tu equipo.\r\n                                </Alert>\r\n                            </div>\r\n                            <div className={\"row-edit\"}>\r\n                                <ul className=\"flex-row\">\r\n                                    <li className=\"flex-row-items\">\r\n                                        <div className={\"form-select\"}>\r\n                                            <label className=\"form-label\">  Estudiante a invitar </label>\r\n                                            <select onChange={this.selectGuest} disabled={this.disabledButtonInvite()} >\r\n                                                <option value=\"\" selected disabled hidden >Seleccionar</option>\r\n                                                {this.state.dataStudentWithoutTeam.filter(member => member.id !== AuthUser.getCurrentUser().id)\r\n                                                    .map(elemento => (\r\n                                                        <option key={elemento.id} value={elemento.id} > { elemento.nombre} { elemento.apellidos} </option>\r\n                                                    ))}\r\n                                            </select>\r\n                                        </div>\r\n                                        <div className={\"form-button-column\"}>\r\n                                            <Button size={\"sm\"} disabled={this.disabledButtonInvite()} onClick={() => this.askInvitation()} >Invitar</Button>\r\n                                        </div>\r\n                                    </li>\r\n                                    <li className=\"flex-row-items\">\r\n                                        <div className={\"form-select\"}>\r\n                                            <label className=\"form-label\"> Eliminar Integrante del equipo </label>\r\n                                            <select onChange={this.selectKicked} disabled={this.disabledButtonKickMembersTeam()} >\r\n                                                <option value=\"\" selected disabled hidden >Seleccionar</option>\r\n                                                {this.state.dataMembersTeam.filter(member => member.idEstudiante !== AuthUser.getCurrentUser().id)\r\n                                                    .map((elemento, index) =>\r\n                                                        <option key={elemento.idEstudiante} value={elemento.idEstudiante} > {elemento.nombreEstudiante + \" \"} {elemento.apellidoEstudiante} </option>\r\n                                                    )}\r\n                                            </select>\r\n                                        </div>\r\n                                        <div className={\"form-button-column\"}>\r\n                                            <Button size={\"sm\"} disabled={this.disabledButtonKickMembersTeam()} onClick={() => this.showModalKickStudent()} >eliminar</Button>\r\n                                        </div>\r\n                                    </li>\r\n                                </ul>\r\n                            </div>\r\n                        </>\r\n                    ) : (\r\n                        <></>\r\n                    )}\r\n                    {showTeamStudent ? (\r\n                        <>\r\n                        <hr/>\r\n                        <div className={\"row-edit\"}>\r\n                            <label className={\"form-label\"}>Lista de equipos</label>\r\n                        </div>\r\n                        <div className=\"row-edit\">\r\n                            <Table bordered hover responsive>\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>Equipo</th>\r\n                                        <th>Grupo</th>\r\n                                        <th>Integrantes</th>\r\n                                        <th>Lider</th>\r\n                                        <th>Acciones</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {dataTeamStudentGroup.map(team => {\r\n                                        return (\r\n                                            <tr key={team.id}>\r\n                                                <td>{team.nombreEquipo}</td>\r\n                                                <td>{team.nombreGrupo}</td>\r\n                                                <td>\r\n                                                {dataMembersTeam.map(item =>\r\n                                                        <div>\r\n                                                            {item.nombreEstudiante} {item.apellidoEstudiante}\r\n                                                        </div>\r\n                                                )}\r\n                                                </td>\r\n                                                <td>{this.state.nameLider}</td>\r\n                                                <td>\r\n                                                    <div>\r\n                                                        <img src=\"/delete.png\" alt=\"\"/>\r\n                                                        <Button variant=\"link\" disabled={this.disabledButtonDeleteTeam()} onClick={() => this.askDeleteTeam()} >\r\n                                                            Eliminar\r\n                                                        </Button>\r\n                                                    </div>\r\n                                                    <div>\r\n                                                        <img src=\"/exit.png\" alt=\"\"/>\r\n                                                        <Button variant=\"link\" disabled={this.state.dataMembersTeam.length < 2 ? true : null} onClick={() => this.askLeaveTeam()} >\r\n                                                            Dejar Equipo\r\n                                                        </Button>  \r\n                                                    </div>\r\n                                                </td>\r\n                                            </tr>\r\n                                        )\r\n                                    })}\r\n                                </tbody>\r\n                            </Table>\r\n                        </div>\r\n                       </>\r\n                    ) : (\r\n                        <>\r\n                        </>\r\n                    )}\r\n\r\n                    {showCreateTeam ? (<>\r\n                        <div className={\"row-edit\"}>\r\n                            <h5> Crear Equipo </h5>\r\n                            <input\r\n                                className={formErrors.teamName.length > 0 ? \"error\" : \"form-input\"}\r\n                                type=\"text\"\r\n                                name=\"teamName\"\r\n                                placeholder=\"escribe el nombre\"\r\n                                value={this.state.teamName}\r\n                                onChange={this.onChangeTeamName}\r\n                                disabled={this.state.dataTeamStudentGroup.length > 0 ? true : null}\r\n                            />\r\n                            {formErrors.teamName.length > 0 && (\r\n                                <span className=\"errorMessage\">{formErrors.teamName}</span>\r\n                            )}\r\n                            <div className={\"form-button-column\"}>\r\n                                <Button onClick={() => this.checkCreateTeam()} disabled={this.state.dataTeamStudentGroup.length > 0 ? true : null}>Crear Equipo</Button>\r\n                            </div>\r\n                        </div>\r\n                    </>\r\n\r\n                    ) : (\r\n                        <></>\r\n                    )}\r\n\r\n\r\n                    <Modal show={this.state.modalCreateTeam}>\r\n                        <Modal.Header>\r\n                            <div><h5>¿Estás seguro de crear el equipo {this.state.teamName} ?</h5></div>\r\n                        </Modal.Header>\r\n                        <Modal.Body>\r\n                        </Modal.Body>\r\n                        <Modal.Footer>\r\n                            <Button onClick={() => this.createTeam()}>Aceptar</Button>\r\n                            <Button color=\"danger\" onClick={() => this.setState({ modalCreateTeam: false })}>Cancelar</Button>\r\n                        </Modal.Footer>\r\n                    </Modal>\r\n\r\n                    <Modal show={this.state.modalLeaveLider}>\r\n                        <Modal.Header>\r\n                            <div><h5>Como lider del equipo antes de abandonar el equipo es necesario asignar un lider</h5></div>\r\n                        </Modal.Header>\r\n                        <Modal.Body>\r\n                            <label> Lider:</label>\r\n                            {/* <input className=\"form-control\" readOnly type=\"text\" value={this.state.form.id} /> */}\r\n                            <select onChange={this.selectLider}  >\r\n                                <option value=\"\" selected disabled hidden >Seleccionar</option>\r\n                                {/* {this.state.dataMembersTeam.map(elemento => (\r\n                                        <option key={elemento.idEstudiante} value={elemento.idEstudiante} > { elemento.nombreEstudiante} </option>\r\n                                    ))} */}\r\n                                {this.state.dataMembersTeam.filter(student => student.idEstudiante !== AuthUser.getCurrentUser().id).map((elemento, index) =>\r\n                                    <option key={elemento.idEstudiante} value={elemento.idEstudiante} > {elemento.nombreEstudiante + \" \"} {elemento.apellidoEstudiante}</option>\r\n                                )}\r\n                            </select>\r\n                        </Modal.Body>\r\n                        <Modal.Footer>\r\n                            <Button onClick={() => this.editTeam()}>Aceptar</Button>\r\n                            <Button variant={\"danger\"} onClick={() => this.setState({ modalLeaveLider: false })}>Cancelar</Button>\r\n                        </Modal.Footer>\r\n                    </Modal>\r\n\r\n                    <Modal show={this.state.modalSuccesfulInvitation}>\r\n                        <Modal.Header>\r\n                        </Modal.Header>\r\n                        <Modal.Body>\r\n                            <p> Invitación enviada correctamente</p>\r\n                        </Modal.Body>\r\n                        <Modal.Footer>\r\n                        </Modal.Footer>\r\n                    </Modal>\r\n\r\n                    <Modal show={this.state.modalSuccessCreateTeam}>\r\n                        <Modal.Header>\r\n                        </Modal.Header>\r\n                        <Modal.Body>\r\n                            <p> Equipo creado correctamente!</p>\r\n                        </Modal.Body>\r\n                        <Modal.Footer>\r\n                        </Modal.Footer>\r\n                    </Modal>\r\n\r\n                    <Modal\r\n                        show={this.state.modalDeleteTeam}\r\n                    >\r\n                        <Modal.Header>\r\n                            <Modal.Title>Aviso</Modal.Title>\r\n                            <img src=\"/triangle.png\" alt=\"\"/>\r\n                        </Modal.Header>\r\n                        <Modal.Body>\r\n                            <h5>¿Estás seguro de eliminar el equipo?</h5>\r\n                        </Modal.Body>\r\n                        <Modal.Footer>\r\n                            {/* <Button color=\"primary\" onClick={() => this.editar(this.state.form)}>Aceptarr</Button> */}\r\n                            <Button onClick={() => this.deleteTeam()}>Aceptar</Button>\r\n                            <Button variant=\"danger\" onClick={() => this.setState({ modalDeleteTeam: false })}>Cancelar</Button>\r\n                        </Modal.Footer>\r\n                    </Modal>\r\n\r\n                    <Modal show={this.state.modalLeaveTeam}>\r\n                        <Modal.Header>\r\n                            <div><h5>¿Estás seguro de abandonar el equipo?</h5></div>\r\n                        </Modal.Header>\r\n                        <Modal.Body>\r\n                        </Modal.Body>\r\n                        <Modal.Footer>\r\n                            {/* <Button color=\"primary\" onClick={() => this.editar(this.state.form)}>Aceptarr</Button> */}\r\n                            <Button onClick={() => this.leaveTeam()}>Aceptar</Button>\r\n                            <Button color=\"danger\" onClick={() => this.setState({ modalLeaveTeam: false })}>Cancelar</Button>\r\n                        </Modal.Footer>\r\n                    </Modal>\r\n\r\n                    <Modal show={this.state.modalKickStudent}>\r\n                        <Modal.Header>\r\n                            <div><h5>¿Estás seguro de querer expulsar del equipo?</h5></div>\r\n                        </Modal.Header>\r\n                        <Modal.Body>\r\n                        </Modal.Body>\r\n                        <Modal.Footer>\r\n                            <Button onClick={() => this.kickStudentTeam()}>Aceptar</Button>\r\n                            <Button color=\"danger\" onClick={() => this.setState({ modalKickStudent: false })}>Cancelar</Button>\r\n                        </Modal.Footer>\r\n                    </Modal>\r\n\r\n                    <Modal show={this.state.modalErrorInvitation}>\r\n                        <Modal.Header>\r\n                        </Modal.Header>\r\n                        <Modal.Body>\r\n                            <p> Ya has enviado una invitacion anteriormente</p>\r\n                        </Modal.Body>\r\n                        <Modal.Footer>\r\n                        </Modal.Footer>\r\n                    </Modal>\r\n\r\n                    <Modal show={this.state.modalErrorReceiveInvitation}>\r\n                        <Modal.Header>\r\n                        </Modal.Header>\r\n                        <Modal.Body>\r\n                            <p> Ya has recibido una petición del estudiante para unirse a tu equipo</p>\r\n                        </Modal.Body>\r\n                        <Modal.Footer>\r\n                        </Modal.Footer>\r\n                    </Modal>\r\n\r\n                    <Modal\r\n                    centered\r\n                    show={this.state.onModal}\r\n                    onHide={this.state.onModal}\r\n                >\r\n                    <Modal.Header>\r\n                        <Modal.Title>\r\n                            Ups...\r\n                        </Modal.Title>\r\n                        <img src=\"/exclamation.png\" alt=\"\"/>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                      <h5> No has ingresado un nombre </h5>\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                        <Button variant=\"secondary\" onClick={() => this.onModal(false)}>Atras</Button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n                </Card.Body>\r\n            </Card>\r\n           </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TeamStudent;","/*\r\n*  Name_file: TeamsGroup.js\r\n*  Description: Pagina que muestra listado de equipos que hay en el grupo , contiene la vista de todos los equipos del grupo\r\n*  que tiene el estudiante\r\n*/\r\n\r\nimport React, { Component } from 'react';\r\nimport { Link } from \"react-router-dom\";\r\n\r\n/**Datos del usuario */\r\nimport AuthUser from '../../../services/authenticity/auth-service.js';\r\n\r\n/**Servicios del estudiante */\r\nimport StudentService from '../../../services/student/student-service.js';\r\n\r\n// Componentes estilos\r\nimport Table from \"react-bootstrap/Table\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport Card from 'react-bootstrap/Card';\r\n\r\n//Estilos\r\nimport '../../../styles/styleGeneral.css';\r\nimport studentService from '../../../services/student/student-service.js';\r\n\r\nclass TeamsGroup extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            modalSuccesfulSendJoinTeam: false,\r\n            modalErrorSendRequest: false,//modal que informa de un error al enviar una solicitud para unirse a un equipo\r\n            modalErrorReceiveRequest: false,\r\n            dataTeamsGroup: [],//contiene los equipos del grupo\r\n            dataTeamStudent: [],//contiene tabla entera de equipoestudiante\r\n            teamStudent: '',\r\n            showTeams: false,\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        //Obtiene los equipos del grupo \r\n        StudentService.getTeamsGroup(this.props.groupSelect)\r\n            .then(response => {\r\n                //si existen equipos en el grupo\r\n                if (response.length != 0) {\r\n                    this.setState({ dataTeamsGroup: response, showTeams: true });\r\n                    /*Obtiene equipo del estudiante correspondiente a un grupo en concreto*/\r\n                    /**Esto lo hago para saber si tengo un equipo en el grupo*/\r\n                    StudentService.getTeamStudentGroup(AuthUser.getCurrentUser().id, this.props.groupSelect)\r\n                        .then(response => {\r\n                            //Si tengo equipo\r\n                            if (response.length != 0) {\r\n                                this.setState({ teamStudent: response[0] });\r\n                            }\r\n                        }).catch(error => {\r\n                            console.log(error.message);\r\n                        })\r\n\r\n                    //Me traigo la tabla entera de equipoestudiante\r\n                    StudentService.getTeamStudent()\r\n                        .then(response => {\r\n                            this.setState({ dataTeamStudent: response });\r\n                        }).catch(error => {\r\n                            console.log(error.message);\r\n                        })\r\n\r\n                }\r\n            }).catch(error => {\r\n                console.log(error.message);\r\n            })\r\n    }\r\n\r\n    componentDidUpdate(pP, pS, sS) {\r\n        var u = 1\r\n        u = u + 1\r\n        console.log(\"hola------>\", u++);\r\n        if (pS.dataTeamStudent != this.state.dataTeamStudent) {\r\n            console.log(\"algo ha cambiado\");\r\n        }\r\n    }\r\n\r\n    //Evalúa si se envia el mensaje\r\n    askSendRequest = (team) => {\r\n        //Comprueba si ya se envio una solicitud anteriormente a ese equipo\r\n        studentService.searchMessageByIssuer(this.props.groupSelect, AuthUser.getCurrentUser().id, team.idEquipo)\r\n            .then(response => {\r\n                if (response.length === 0) {//no ha enviado solicitudes anteriormente\r\n                    //Comprueba si recibio una solicitud de invitación anteriormente de ese equipo\r\n                    studentService.searchMessageByReceiver(this.props.groupSelect, AuthUser.getCurrentUser().id,team.idEquipo)\r\n                        .then(response => {\r\n                            if (response.length === 0) //no ha recibido solicitudes anteriormente\r\n                                this.sendRequest(team);//envia la solicitud\r\n                            else \r\n                                this.showModalErrorReceiveRequest();\r\n                        })\r\n                        .catch(error => {\r\n                            console.log(error.message);\r\n                        })\r\n                }\r\n                else {\r\n                    this.showModalErrorSendRequest();\r\n                }\r\n            })\r\n            .catch(error => {\r\n                console.log(error.message);\r\n            })\r\n    };\r\n\r\n    //Envio el mensaje de solicitud solicitud\r\n    sendRequest = (team) => {\r\n        var nombre = AuthUser.getCurrentUser().username;\r\n        var apellidos = AuthUser.getCurrentUser().surname;\r\n        var messageBody = \"te envía una petición para unirse a tu equipo\";\r\n        var equipo = team.nombreEquipo;\r\n        var grupo = team.nombreGrupo;\r\n        var idGroup = this.props.groupSelect;\r\n        var message = nombre + \" \" + apellidos + \" \" + messageBody + \" \" + \"'\"+equipo +\"'\"+ \" del Grupo \" + \"'\"+grupo+\"'\";\r\n        //Envio el mensaje de solicitud \r\n        StudentService.sendMessage(idGroup, AuthUser.getCurrentUser().id, team.idCreador, team.idEquipo, message, 2)\r\n            .then(response => {\r\n                this.showModalSuccesfulSendJoinTeam();//muestra modal de exito del envio del mensaje\r\n\r\n            }).catch(error => {\r\n                console.log(error.message);\r\n            })\r\n    }\r\n\r\n    //activa/desactiva el boton de unirse a un equipo\r\n    disabledButtonJoin = () => {\r\n        //si tengo equipo\r\n        if ((this.state.teamStudent !== \"\"))\r\n            return true;//desactiva el boton de enviar solicitud\r\n        else\r\n            return null;\r\n    }\r\n\r\n    showModalSuccesfulSendJoinTeam = () => {\r\n        this.setState({\r\n            modalSuccesfulSendJoinTeam: true,\r\n        });\r\n        //cierra el modal despues de 3 segundos\r\n        setTimeout(\r\n            () => this.setState({ modalSuccesfulSendJoinTeam: false }),\r\n            2000\r\n        );\r\n    };\r\n\r\n    showModalErrorSendRequest = () => {\r\n        this.setState({\r\n            modalErrorSendRequest: true,\r\n        });\r\n        //cierra el modal despues de 3 segundos\r\n        setTimeout(\r\n            () => this.setState({ modalErrorSendRequest: false }),\r\n            2000\r\n        );\r\n    };\r\n\r\n    showModalErrorReceiveRequest = () => {\r\n        this.setState({\r\n            modalErrorReceiveRequest: true,\r\n        });\r\n        //cierra el modal despues de 3 segundos\r\n        setTimeout(\r\n            () => this.setState({ modalErrorReceiveRequest: false }),\r\n            2000\r\n        );\r\n    };\r\n\r\n    /*Dibuja la pagina  */\r\n    render() {\r\n        const { showTeams, dataTeamsGroup, dataTeamStudent } = this.state;\r\n        return (\r\n            <>\r\n                    <Card className=\"card-long\">\r\n                        <Card.Body>\r\n                            {showTeams ? (\r\n                                <>\r\n                                    <div className={\"row-edit\"}>\r\n                                        <label className={\"form-label\"}>Lista de equipos</label>\r\n                                    </div>\r\n                                    <div className={\"row-edit\"}>\r\n                                        <div className=\"table-margin\">\r\n                                            <Table bordered hover responsive>\r\n                                                <thead>\r\n                                                <tr>\r\n                                                    <th>Equipo</th>\r\n                                                    <th>Grupo</th>\r\n                                                    <th>Integrantes</th>\r\n                                                    <th>Acciones</th>\r\n                                                </tr>\r\n                                                </thead>\r\n                                                <tbody>\r\n                                                {dataTeamsGroup.filter(team => team.activo === 1).map(team => {\r\n                                                    return (\r\n                                                        <tr key={team.idEquipo}>\r\n                                                            <td>{team.nombreEquipo}</td>\r\n                                                            <td>{team.nombreGrupo}</td>\r\n                                                            {dataTeamStudent.filter(teamStudent => teamStudent.idEquipo === team.idEquipo).map((item, index) =>\r\n                                                                <td> <div>{item.nombre} {item.apellidos} </div></td>\r\n                                                            )}\r\n                                                            <td >\r\n                                                                <img src=\"/send.png\" alt=\"\"/>\r\n                                                                <Button\r\n                                                                    variant=\"link\"\r\n                                                                    onClick={() => this.askSendRequest(team)}\r\n                                                                    disabled={this.disabledButtonJoin()}\r\n                                                                >\r\n                                                                  Enviar Solicitud\r\n                                                               </Button>\r\n                                                            </td>\r\n                                                        </tr>\r\n                                                    )\r\n                                                })}\r\n                                                </tbody>\r\n                                            </Table>\r\n                                        </div>\r\n                                    </div>\r\n                                </>\r\n                            ) : (\r\n                                <div className=\"table-margin\">\r\n                                    <p>No hay equipos para mostrar</p>\r\n                                </div>\r\n                            )}\r\n                        </Card.Body>\r\n                    </Card>\r\n                <Modal show={this.state.modalSuccesfulSendJoinTeam}>\r\n                    <Modal.Header>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <p> Petición enviada correctamente</p>\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n\r\n                <Modal show={this.state.modalErrorSendRequest}>\r\n                    <Modal.Header>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <p> Ya has enviado una solicitud anteriormente</p>\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n\r\n                <Modal show={this.state.modalErrorReceiveRequest}>\r\n                    <Modal.Header>\r\n                        <Modal.Title>Aviso</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        Ya Tienes una solicitud pendiente de este equipo\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TeamsGroup;\r\n","/*\r\n*  Name_file :TeamTabs.js\r\n*  Description: Pagina que contiene las pestañas de equipos\r\n*/\r\n\r\n\r\nimport Tabs from \"./Tabs\";\r\nimport TeamStudent from \"./TeamStudent\";\r\nimport TeamsGroup from \"./TeamsGroup\";\r\n\r\nimport React, { Component } from 'react';\r\nclass TeamTabs extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            data :[\r\n                { id: 1, name: \"Equipos\", content: () => <TeamsGroup key={props.groupSelect} groupSelect={props.groupSelect} />, state: \"active\" },\r\n                { id: 2, name: \"Mi Equipo\", content: () => <TeamStudent key={props.groupSelect} groupSelect={props.groupSelect} />, state: \"inactive\" },\r\n            ]\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={\"row-edit\"}>\r\n                <Tabs data={this.state.data} />\r\n            </div>\r\n        );\r\n\r\n    }\r\n}\r\n\r\nexport default TeamTabs;","/*\r\n*  Name_file :ChallengesStudent.js\r\n*  Description: Pagina que muestra los desafíos individuales\r\n*/\r\nimport React, { Component } from 'react';\r\nimport StudentService from '../../../services/student/student-service.js';\r\nimport moment from 'moment';\r\n\r\n//import CreateChallenge from './CreateChallenge.js';\r\nimport { Link } from \"react-router-dom\";\r\n\r\n/**Datos del usuario */\r\nimport AuthUser from '../../../services/authenticity/auth-service.js';\r\n\r\n/**Componentes estilos */\r\nimport Table from \"react-bootstrap/Table\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport Alert from 'react-bootstrap/Alert';\r\n\r\n//Estilos\r\nimport '../../../styles/styleGeneral.css';\r\nimport '../../../styles/styleCard.css';\r\n\r\nclass ChallengesStudent extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            data: [],//contiene desafios del estudiante\r\n            dataWritingStudent: [],//contiene escritos del estudiante\r\n            showChallenges: false,\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.groupSelect === undefined) {\r\n            //obtener desafios iduser y type(individual=1 o colaborativo=2)\r\n            StudentService.getChallengesIndividual(AuthUser.getCurrentUser().id, 1)\r\n                .then(response => {\r\n                    if (response.length !== 0) {\r\n                        this.setState({ data: response, showChallenges: true });\r\n                    }\r\n                }).catch(error => {\r\n                    console.log(error.message);\r\n                })\r\n\r\n            StudentService.getWritings(AuthUser.getCurrentUser().id)\r\n                .then(response => {\r\n                    if (response.data.length !== 0) {\r\n                        this.setState({ dataWritingStudent: response.data, showChallenges: true });\r\n                    }\r\n                })\r\n        }\r\n        else {\r\n            /**Obtiene los desafios del estudiante segun su grupo */\r\n            StudentService.getChallenges(this.props.groupSelect, 1)\r\n                .then(response => {\r\n                    if (response.length !== 0) {//Si existen desafíos\r\n                        this.setState({ data: response,showChallenges:true });\r\n                    }  \r\n                }).catch(error => {\r\n                    console.log(error.message);\r\n                })\r\n\r\n            /**Obtiene los escritos del estudiante segun su grupo */\r\n            StudentService.getWritingsStudent(AuthUser.getCurrentUser().id, this.props.groupSelect)\r\n                .then(response => {\r\n                    this.setState({ dataWritingStudent: response });\r\n                }).catch(error => {\r\n                    console.log(error.message);\r\n                })\r\n        }\r\n    }\r\n\r\n    disabledButton = (challenge) => {\r\n        var dateActual = new Date();\r\n        var dateFin = new Date(challenge.fechaFin)\r\n        //si ya se paso la fecha del desafio, desactivar button\r\n        if (dateActual.getTime() > dateFin.getTime()) {\r\n            return true;\r\n        }\r\n        else\r\n            return false;\r\n    };\r\n\r\n    //Muestra el tipo de desafio\r\n    showCollaborative = (challenge) => {\r\n        if (challenge.colaborativo === 1)\r\n            return \"individual\"\r\n        else\r\n            return \"colaborativo\"\r\n    }\r\n\r\n    //Devuelve string de escrito finalizado\r\n    showChallengeFinalized = (challenge) => {\r\n        var dateActual = new Date();\r\n        var dateFin = new Date(challenge.fechaFin)\r\n        if (dateActual.getTime() > dateFin.getTime())\r\n            return \"Si\"\r\n        else\r\n            return \"No\"\r\n    }\r\n\r\n    /*Dibuja la pagina  */\r\n    render() {\r\n        let formatedDate;\r\n        const { data, showChallenges } = this.state;\r\n        let writingExist = false;\r\n        let idWriting = '';\r\n        let finish = '';\r\n        let writingAux = '';\r\n        return (\r\n\r\n                <Card className=\"card-long\">\r\n                    <Card.Body>\r\n                        {showChallenges ? (\r\n                            <>\r\n                            <div className={\"row-edit\"}>\r\n                                <label className={\"form-label\"}>Lista de desafios</label>\r\n                            </div>\r\n                            <div className=\"row-edit\">\r\n\r\n                                <Table bordered hover responsive>\r\n                                    <thead>\r\n                                        <tr>\r\n                                            <th>Desafio</th>\r\n                                            <th>Grupo</th>\r\n                                            <th>Categoria</th>\r\n                                            <th>Tipo</th>\r\n                                            <th>Fecha</th>\r\n                                            <th>Hora</th>\r\n                                            <th>Finalizado</th>\r\n                                            <th>Acciones</th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        {data.map((challenge) => (\r\n                                            <tr key={challenge.id}>\r\n                                                <td >{challenge.titulo}</td>\r\n                                                <td >{challenge.nombreGrupo}</td>\r\n                                                <td >{challenge.nombreCategoria}</td>\r\n                                                <td >{this.showCollaborative(challenge)}</td>\r\n                                                <td >{formatedDate = moment(challenge.fechaFin).format('DD/MM/YYYY')}</td>\r\n                                                <td >{formatedDate = moment(challenge.fechaFin).format('LT')}</td>\r\n                                                <td >{this.showChallengeFinalized(challenge)}</td>\r\n                                                {writingExist = false}\r\n                                                {this.state.dataWritingStudent.filter(writing => writing.idDesafio === challenge.id)\r\n                                                    .map((item, index) => {\r\n                                                        writingExist = true;\r\n                                                        idWriting = item.id;\r\n                                                        finish = item.finalizado;\r\n                                                        writingAux = item;\r\n                                                    }\r\n                                                    )}\r\n                                                <td >\r\n                                                    <Button href={`/student/writing/${challenge.idGrupo}/${challenge.id}`}\r\n                                                            variant=\"primary\"\r\n                                                            disabled={this.disabledButton(challenge) || writingExist}\r\n                                                            size={\"sm\"}\r\n                                                    >\r\n                                                        Crear Escrito\r\n                                                    </Button>\r\n                                                </td>\r\n                                            </tr>\r\n                                        ))}\r\n                                    </tbody>\r\n                                </Table>\r\n                            </div >\r\n                            </>\r\n                        ) : (\r\n                            <div className=\"row-edit\">\r\n                                <Alert variant={\"danger\"}>\r\n                                    No dispones de desafios para mostrar.\r\n                                </Alert>\r\n                            </div>\r\n                        )}\r\n                    </Card.Body>\r\n                </Card>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ChallengesStudent;","/*\r\n*  Name_file :ChallengesTeam.js\r\n*  Description: Pagina que muestra los desafios colaborativos\r\n*/\r\nimport React, { Component } from 'react';\r\nimport StudentService from '../../../services/student/student-service.js';\r\nimport moment from 'moment';\r\n//import CreateChallenge from './CreateChallenge.js';\r\nimport { Link } from \"react-router-dom\";\r\n\r\n/**Datos del usuario */\r\nimport AuthUser from '../../../services/authenticity/auth-service.js';\r\n\r\n/**Estilos*/\r\nimport Table from \"react-bootstrap/Table\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport Alert from 'react-bootstrap/Alert';\r\n\r\n//Estilos\r\nimport '../../../styles/styleGeneral.css';\r\nimport '../../../styles/styleCard.css';\r\n\r\nclass ChallengesTeam extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            dataTeams: [],//contiene los equipos del estudiante\r\n            dataTeamStudent: [],//contiene el equipo del estudiante\r\n            data: [],//contiene desafios del estudiante\r\n            dataWritingTeam: [],//contiene escritos del equipo del estudiante\r\n            showChallenges: false,//booleano que activa tabla si existen desafíos\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.groupSelect === undefined) {\r\n            StudentService.getTeams(AuthUser.getCurrentUser().id)\r\n                .then(responseTeams => {\r\n                    //si el estudiante tiene equipos puede ver desafios\r\n                    if (responseTeams.length != 0) {\r\n                        this.setState({ dataTeams: responseTeams });\r\n                        StudentService.getChallengesIndividual(AuthUser.getCurrentUser().id, 2)\r\n                            .then(responseChallenges => {\r\n                                //si existen desafios colaborativos\r\n                                if (responseChallenges.length !== 0) {\r\n                                    this.setState({ data: responseChallenges, showChallenges: true });\r\n                                    //obtiene los escritos colaborativos del estudiante\r\n                                    StudentService.getWritingsCollaborative(AuthUser.getCurrentUser().id)\r\n                                        .then(responseWritings => {\r\n                                            this.setState({ dataWritingTeam: responseWritings.data });\r\n                                        })\r\n                                }\r\n                            }).catch(error => {\r\n                                console.log(error.message);\r\n                            })\r\n                    }\r\n                    else {\r\n                        this.setState({ showChallenges: false });\r\n                    }\r\n\r\n                }).catch(error => {\r\n                    console.log(error.message);\r\n                })\r\n        }\r\n        else {\r\n            /**Obtiene los desafios del estudiante según su grupo */\r\n            StudentService.getChallenges(this.props.groupSelect, 2).then(response => {\r\n                if (response.length !== 0) {\r\n                    this.setState({ data: response, showChallenges: true });\r\n                }\r\n            }).catch(error => {\r\n                console.log(error.message);\r\n            })\r\n\r\n            /*Obtiene equipo del estudiante correspondiente a un grupo en concreto*/\r\n            StudentService.getTeamStudentGroup(AuthUser.getCurrentUser().id, this.props.groupSelect)\r\n                .then(respuesta => {\r\n                    //si el estudiante tiene equipo\r\n                    if (respuesta.length != 0) {\r\n                        this.setState({ dataTeams: respuesta });\r\n                        /**Obtiene los escritos del equipo del estudiante */\r\n                        StudentService.getWritingsTeam(respuesta[0].idEquipo, this.props.groupSelect)\r\n                            .then(response => {\r\n                                this.setState({ dataWritingTeam: response });\r\n                            }).catch(error => {\r\n                                console.log(error.message);\r\n                            })\r\n                    }\r\n                    else {\r\n                        this.setState({ showChallenges: false });\r\n                    }\r\n                }).catch(error => {\r\n                    console.log(error.message);\r\n                })\r\n        }\r\n    }\r\n\r\n    disabledButtonEdit = (challenge, n) => {\r\n        //si no tiene equipo \r\n        if (this.state.dataWritingTeam.length === 0)\r\n            return true;\r\n        var dateActual = new Date();\r\n        var dateFin = new Date(challenge.fechaFin)\r\n        //si ya se paso la fecha del desafio, desactivar button\r\n        if (dateActual.getTime() > dateFin.getTime()) {\r\n            return true;\r\n        }\r\n        if (n)\r\n            return false;\r\n        else\r\n            return true;\r\n    };\r\n\r\n    disabledButtonCreate = (challenge, n, existsTeam) => {\r\n        //si no tiene equipo en el grupo de ese desafio\r\n        if (!existsTeam) {\r\n            return true;\r\n        }\r\n        var dateActual = new Date();\r\n        var dateFin = new Date(challenge.fechaFin)\r\n\r\n        //si ya se paso la fecha del desafio, desactivar button\r\n        if (dateActual.getTime() > dateFin.getTime()) {\r\n            return true;\r\n        }\r\n        if (n)\r\n            return true;\r\n        else\r\n            return false;\r\n    };\r\n\r\n    //Devuelve el tipo de desafio\r\n    showCollaborative = (challenge) => {\r\n        if (challenge.colaborativo === 1) \r\n            return \"individual\"\r\n        else\r\n            return \"colaborativo\"\r\n    }\r\n\r\n\r\n    showNameTeam = () => {\r\n        if (this.state.dataWritingTeam.length > 0) {\r\n            return this.state.dataWritingTeam[0].nombreEquipo\r\n        }\r\n    }\r\n\r\n    //Devuelve string de escrito finalizado\r\n    showChallengeFinalized = (challenge) => {\r\n        var dateActual = new Date();\r\n        var dateFin = new Date(challenge.fechaFin)\r\n        if (dateActual.getTime() > dateFin.getTime())\r\n            return \"Si\"\r\n        else\r\n            return \"No\"\r\n    }\r\n\r\n\r\n    /*Dibuja la pagina  */\r\n    render() {\r\n        const { data, showChallenges, dataWritingTeam, dataTeams } = this.state;\r\n        let existsWriting = false;\r\n        let existsTeam = false;\r\n        let idWriting = '';\r\n        let formatedDate;\r\n        let writingAux = '';\r\n        return (\r\n                <Card className=\"card-long\">\r\n                    <Card.Body>\r\n                        {showChallenges ? (\r\n                            <>\r\n                                <div className={\"row-edit\"}>\r\n                                    <label className={\"form-label\"}>Lista de escritos</label>\r\n                                </div>\r\n                                <div className={\"row-edit\"}>\r\n                                    <div className=\"table-margin\">\r\n                                        <Table bordered hover responsive>\r\n                                            <thead>\r\n                                            <tr>\r\n                                                <th>Desafio</th>\r\n                                                <th>Grupo</th>\r\n                                                <th>Categoria</th>\r\n                                                <th>Tipo</th>\r\n                                                <th>Fecha</th>\r\n                                                <th>Hora</th>\r\n                                                <th>Finalizado</th>\r\n                                                <th>Acciones</th>\r\n                                            </tr>\r\n                                            </thead>\r\n                                            <tbody>\r\n                                            {data.map((challenge) => (\r\n                                                <tr key={challenge.id}>\r\n                                                    <td>{challenge.titulo}</td>\r\n                                                    <td>{challenge.nombreGrupo}</td>\r\n                                                    <td>{challenge.nombreCategoria}</td>\r\n                                                    <td>{this.showCollaborative(challenge)}</td>\r\n                                                    <td>{formatedDate = moment(challenge.fechaFin).format('DD/MM/YYYY')}</td>\r\n                                                    <td>{formatedDate = moment(challenge.fechaFin).format('LT')}</td>\r\n                                                    <td >{this.showChallengeFinalized(challenge)}</td>\r\n                                                    {existsWriting = false}\r\n                                                    {existsTeam = false}\r\n                                                    {dataWritingTeam.filter(writing => writing.idDesafio === challenge.id)\r\n                                                        .map((item, index) => {\r\n                                                                existsWriting = true;\r\n                                                                idWriting = item.id;\r\n                                                                writingAux = item;\r\n                                                            }\r\n                                                        )}\r\n                                                    {dataTeams.filter(team => team.idGrupo === challenge.idGrupo)\r\n                                                        .map((item, index) => {\r\n                                                                existsTeam = true;\r\n                                                            }\r\n                                                        )}\r\n\r\n                                                    {existsTeam ? (\r\n                                                        <td>\r\n                                                            <Button href={`/student/writing/${challenge.idGrupo}/${challenge.id}`}\r\n                                                                    variant=\"primary\"\r\n                                                                    disabled={this.disabledButtonCreate(challenge, existsWriting, existsTeam)}>\r\n                                                                Crear Escrito\r\n                                                            </Button>\r\n                                                        </td>\r\n                                                    ) : (\r\n                                                        <></>\r\n\r\n                                                    )}\r\n                                                </tr>\r\n                                            ))}\r\n                                            </tbody>\r\n                                        </Table>\r\n                                    </div>\r\n                                </div>\r\n                            </>\r\n                        ) : (\r\n                            <div className=\"row-edit\">\r\n                                <Alert variant={\"danger\"}>\r\n                                    No dispones de desafios para mostrar o no dispones de equipo.\r\n                                </Alert>\r\n                            </div>\r\n                        )}\r\n                    </Card.Body>\r\n                </Card>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ChallengesTeam;","/*\r\n*  Name_file:\r\n*  Description:\r\n*/\r\n\r\nimport React,{ useState } from \"react\";\r\n\r\n/** Componentes de estilos*/\r\nimport Tabs from \"./Tabs\";\r\nimport ChallengesStudent from \"./ChallengesStudent\";\r\nimport ChallengesTeam from \"./ChallengesTeam\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport Alert from 'react-bootstrap/Alert';\r\n\r\nfunction ChallengeTabs(props) {\r\n\r\n    const [count, setCount] = useState(0);\r\n    const data = [\r\n            { id: 1, name: \"Desafios\", content: () => <ChallengesStudent key={props.groupSelect} groupSelect={props.groupSelect}/>, state: \"active\" },\r\n            { id: 2, name: \"Desafios en Equipo\", content: () => <ChallengesTeam key={props.groupSelect} groupSelect={props.groupSelect} />, state: \"inactive\" },\r\n    ];\r\n    return (\r\n        <div className={\"container\"}>\r\n            <Card className={\"card-long\"}>\r\n                <Card.Body>\r\n                    <Tabs data={data} />\r\n                </Card.Body>\r\n            </Card>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ChallengeTabs;","/*\r\n*  Name_file:\r\n*  Description:\r\n*/\r\n\r\n\r\nimport React, { Component, useState } from \"react\";\r\nimport StudentService from '../../../services/student/student-service.js';\r\nimport AuthUser from '../../../services/authenticity/auth-service.js';\r\n\r\n//Paginas\r\nimport WritingTabs from './WritingTabs.js';\r\nimport TeamTabs from './TeamTabs.js';\r\nimport ChallengeTabs from './ChallengeTabs.js';\r\n\r\n//Estilos\r\nimport '../../../styles/styleGeneral.css';\r\n\r\n//Componentes de estilos\r\nimport Dropdown from 'react-bootstrap/Dropdown';\r\nimport DropdownMenu from 'react-bootstrap/DropdownMenu';\r\nimport DropdownItem from 'react-bootstrap/DropdownItem';\r\nimport DropdownToggle from 'react-bootstrap/DropdownToggle';\r\nimport FormControl from 'react-bootstrap/FormControl';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Icon from '@material-ui/core/Icon';\r\nimport ExpandMoreRoundedIcon from '@material-ui/icons/ExpandMoreRounded';\r\nimport Button from 'react-bootstrap/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Modal from 'react-bootstrap/Modal';\r\n\r\n\r\nconst CustomToggle = React.forwardRef(({ children, onClick }, ref) => (\r\n  <a\r\n    href=\"\"\r\n    ref={ref}\r\n    onClick={(e) => {\r\n      e.preventDefault();\r\n      onClick(e);\r\n    }}\r\n  >\r\n    {children}\r\n    { <Icon><ExpandMoreRoundedIcon></ExpandMoreRoundedIcon></Icon>}\r\n  </a>\r\n));\r\n\r\nconst CustomMenu = React.forwardRef(\r\n  ({ children, style, className, 'aria-labelledby': labeledBy }, ref) => {\r\n    const [value, setValue] = useState('');\r\n\r\n    return (\r\n      <div\r\n        ref={ref}\r\n        style={style}\r\n        className={className}\r\n        aria-labelledby={labeledBy}\r\n      >\r\n        <FormControl\r\n          autoFocus\r\n          className=\"mx-3 my-2 w-auto\"\r\n          placeholder=\"Type to filter...\"\r\n          onChange={(e) => setValue(e.target.value)}\r\n          value={value}\r\n        />\r\n        <ul className=\"list-unstyled\">\r\n          {React.Children.toArray(children).filter(\r\n            (child) =>\r\n              !value || child.props.children.toLowerCase().startsWith(value) || child.props.children.toUpperCase().startsWith(value),\r\n          )}\r\n        </ul>\r\n      </div>\r\n    );\r\n  },\r\n);\r\n\r\n\r\nclass GroupStudent extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      dataGroup: [],//contiene todos los grupos del estudiante\r\n      currentUser: { id: \"\" }, // 0,\r\n      groupSelect: \"\",\r\n      nameGroupSelect: \"\",\r\n      itemSelect: \"\",\r\n      showChallenges: false,\r\n      showWritings: false,\r\n      showTeams: false,\r\n      dataRemainingGroup: [],\r\n      groupSelect2: -1,\r\n      nameGroupSelect2: \"\",\r\n      modalApply: false,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n\r\n    const dataUser = AuthUser.getCurrentUser();\r\n    this.setState({ currentUser: dataUser.id });\r\n\r\n      /**Obtiene todos los grupos del estudiante */\r\n      StudentService.getGroups(dataUser.id)\r\n      .then(response => {\r\n        if (response.length > 0) {\r\n          this.setState({ dataGroup: response, groupSelect: response[0].idGrupo, nameGroupSelect: response[0].nombre, showChallenges: true });\r\n        }\r\n      })\r\n\r\n      /* Se muestran los grupos donde no se encuentra el estudiante */\r\n      StudentService.getRemainingGroups(dataUser.id)\r\n      .then(response => {\r\n        if (response.length > 0) {\r\n          this.setState({dataRemainingGroup: response, groupSelect2: response[0].id, nameGroupSelect2: response[0].nombre });\r\n        }\r\n      })\r\n      .catch(error => {\r\n        console.log(error.message);\r\n      })\r\n\r\n  }\r\n\r\n\r\n  // Envía la solicitud de unirse al grupo\r\n   applyGroup = () => {\r\n    this.onModalApply(false)\r\n    StudentService.sendGroupRequest(this.state.groupSelect2, AuthUser.getCurrentUser().id)\r\n    .then(response => {\r\n        // Falta gestionar los archivos multimedia\r\n            window.location.href = `/student/groups`;\r\n    })\r\n    .catch(error => {\r\n        console.log(error.message);\r\n    });\r\n  }\r\n\r\n  onModalApply = (modal) => {\r\n    this.setState({\r\n        modalApply: modal,\r\n    });\r\n  };\r\n\r\n\r\n  itemSelection = event => {\r\n    if (event.target.value === \"1\") {\r\n      this.setState({\r\n        showChallenges: true,\r\n        showWritings: false,\r\n        showTeams: false\r\n      });\r\n    }\r\n    else if (event.target.value === \"2\") {\r\n      this.setState({\r\n        showChallenges: false,\r\n        showWritings: true,\r\n        showTeams: false\r\n      });\r\n    }\r\n    else if (event.target.value === \"3\") {\r\n      this.setState({\r\n        showChallenges: false,\r\n        showWritings: false,\r\n        showTeams: true\r\n      });\r\n    }\r\n  };\r\n\r\n  handleSelect(group) {\r\n    this.setState({ groupSelect: group.idGrupo, nameGroupSelect: group.nombre});\r\n  }\r\n\r\n  handleSelect2(group) {\r\n    this.setState({ groupSelect2: group.id, nameGroupSelect2: group.nombre});\r\n  }\r\n\r\n  disabledButton = () => {\r\n    if (this.state.dataGroup.length > 0) {\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  render() {\r\n    const { dataGroup, groupSelect, showChallenges, showWritings, showTeams, dataRemainingGroup, nameGroupSelectNR } = this.state;\r\n    return (\r\n      <div className=\"container\">\r\n        <link rel=\"stylesheet\" href=\"https://fonts.googleapis.com/icon?family=Material+Icons\" />\r\n        <Card className=\"card-long\">\r\n          <Card.Body>\r\n            <div className={\"row-edit\"}>\r\n              <div className={\"section-title\"}>\r\n                <h2>Gestionar grupos</h2>\r\n              </div>\r\n            </div>\r\n\r\n\r\n            <div className={\"border-group\"}>\r\n              <div className={\"section-title\"}>\r\n                <h2>Entrar a nuevos grupos</h2>\r\n              </div>\r\n              <ul className={\"flex-items-row-evenly\"}>\r\n                <li className={\"flex-item-form\"}>\r\n                  <Dropdown className=\"drop-down\" >\r\n                    <DropdownToggle as={CustomToggle} id=\"dropdown-custom-components\"> Selecciona grupo</DropdownToggle>\r\n                    <DropdownMenu as={CustomMenu}>\r\n                      {dataRemainingGroup.map((row) => (\r\n                          <DropdownItem eventKey={row.id} onClick={() => this.handleSelect2(row)}>{row.nombre}</DropdownItem>\r\n                      ))}\r\n                    </DropdownMenu>\r\n                  </Dropdown>\r\n                </li>\r\n                <li className={\"flex-item-form\"}>\r\n                    { <h4 style={{color: \"#717172\"}}>{this.state.nameGroupSelect2}</h4> }\r\n                </li>\r\n                <li className={\"flex-item-form\"}>\r\n                  <div className=\"form-button\">\r\n                    <Button text='enviar' onClick={() => this.onModalApply(true)}> Solicitar entrar </Button>\r\n                  </div>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n\r\n\r\n            <div className={\"border-group\"}>\r\n              <div className={\"section-title\"}>\r\n                <h2>Mis grupos</h2>\r\n              </div>\r\n              <ul className={\"flex-items-row-evenly\"}>\r\n                <li className={\"flex-item-form\"}>\r\n                  <Dropdown className=\"drop-down\" >\r\n                    <DropdownToggle as={CustomToggle} id=\"dropdown-custom-components\">Selecciona grupo</DropdownToggle>\r\n                    <DropdownMenu as={CustomMenu}>\r\n                      {dataGroup.map((row) => (\r\n                          <DropdownItem eventKey={row.idGrupo} onClick={() => this.handleSelect(row)}>{row.nombre}</DropdownItem>\r\n                      ))}\r\n                    </DropdownMenu>\r\n                  </Dropdown>\r\n                </li>\r\n                <li className={\"flex-item-form\"}>\r\n                    <h4 style={{color: \"#717172\"}}>{this.state.nameGroupSelect}</h4>\r\n                </li>\r\n                <li className={\"flex-item-form\"}>\r\n                  <div className={\"form-select\"}>\r\n                    <label className={\"form-label\"} htmlFor=\"\">Seleccione un opción</label>\r\n                    <select onChange={this.itemSelection} disabled={!this.state.groupSelect ? true : null} >\r\n                      <option value=\"1\" > Crear Escrito </option>\r\n                      <option value=\"2\" > Escritos </option>\r\n                      <option value=\"3\" > Equipos </option>\r\n                    </select>\r\n                  </div>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n         \r\n            \r\n            {showChallenges ? (\r\n              <>\r\n                <ChallengeTabs key={groupSelect} groupSelect={groupSelect} />\r\n              </>\r\n            ) : (\r\n              <></>\r\n            )}\r\n\r\n            {showWritings ? (\r\n              <>\r\n                <WritingTabs key={groupSelect} groupSelect={groupSelect} />\r\n              </>\r\n            ) : (\r\n              <></>\r\n            )}\r\n\r\n            {showTeams ? (\r\n              <>\r\n                <TeamTabs key={groupSelect} groupSelect={groupSelect} />\r\n              </>\r\n            ) : (\r\n              <></>\r\n            )}\r\n\r\n          </Card.Body>\r\n        </Card>\r\n\r\n\r\n        <Modal show={this.state.modalApply}>\r\n                    <Modal.Header>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                    <p> ¿Deseas enviar petición?</p>\r\n                    </Modal.Body>\r\n\r\n                    <Modal.Footer>\r\n                        <Button onClick={() => this.applyGroup()}>Aceptar</Button>\r\n                        <Button variant=\"danger\" onClick={() => this.onModalApply(false)}>Cancelar</Button>\r\n                    </Modal.Footer>\r\n          </Modal> \r\n\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default GroupStudent;","/*\r\n*  Name_file: Teams.js\r\n*  Description: Pagina de equipos del estudiante, contiene la vista de todos los equipos \r\n*  que tiene el estudiante\r\n*    \r\n*/\r\n\r\nimport React, { Component } from 'react';\r\nimport { Link } from \"react-router-dom\";\r\n\r\n/**Datos del usuario */\r\nimport AuthUser from '../../../services/authenticity/auth-service.js';\r\n\r\n/**Servicios del estudiante */\r\nimport StudentService from '../../../services/student/student-service.js';\r\n\r\n/*Componentes de estilo Bootstrap*/\r\nimport Table from \"react-bootstrap/Table\";\r\nimport Button from 'react-bootstrap/Button';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Alert from 'react-bootstrap/Alert';\r\n\r\n//Estilos\r\n import '../../../styles/styleCard.css';\r\n\r\nclass Teams extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            dataTeams: [],//contiene los equipos del estudiante\r\n            dataTeamStudent: [],//contiene tabla entera de equipoestudiante\r\n            dataAux: [],\r\n            showTeamStudent: false,\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        /*Obtiene todos los equipos del estudiante (de distintos grupos)*/\r\n        StudentService.getTeams(AuthUser.getCurrentUser().id)\r\n            .then(response => {\r\n                if (response.length !== 0) {\r\n                    this.setState({ dataTeams: response, showTeamStudent: true });\r\n                }\r\n\r\n            }).catch(error => {\r\n                console.log(error.message);\r\n            })\r\n\r\n        //Me traigo la tabla entera de equipoestudiante\r\n        StudentService.getTeamStudent()\r\n            .then(response => {\r\n                this.setState({ dataTeamStudent: response });\r\n\r\n            }).catch(error => {\r\n                console.log(error.message);\r\n            })\r\n\r\n        /*Obtiene equipo del estudiante correspondiente a un grupo en concreto*/\r\n        /**Esto lo hago para saber si tengo un equipo  */\r\n        // StudentService.getTeamStudentGroup(AuthUser.getCurrentUser().id, this.props.groupSelect)\r\n        //     .then(response => {\r\n\r\n        //         // this.setState({ dataTeamStudentGroup: response });\r\n        //         this.setState({ teamStudent: response[0] });\r\n        //     }).catch(error => {\r\n        //         console.log(error.message);\r\n        //     })\r\n    }\r\n\r\n\r\n    // prueba = (team) => {\r\n    //     var aux=[];\r\n    //     var devolver=[];\r\n    //     StudentService.getMembersTeam(team.idEquipo)\r\n    //     .then(response => {\r\n    //         // var nombre;\r\n    //         // response.filter(member1 => member1.idEstudiante === this.state.idLider).map((member) => ( \r\n    //         //     nombre = member.nombreEstudiante +\" \"+ member.apellidoEstudiante\r\n    //         // ));\r\n    //         aux.push([team,response])\r\n    //         this.setState({ dataAux: aux });\r\n\r\n    //     }).catch(error => {\r\n    //         console.log(error.message);\r\n    //     })\r\n\r\n    // };\r\n\r\n    /*Dibuja la pagina  */\r\n    render() {\r\n        const { showTeamStudent,dataTeams } = this.state;\r\n        return (\r\n            <div className=\"container\">\r\n               <Card className=\"card-long\">\r\n                   <Card.Body>\r\n                       <div className={\"row-edit\"}>\r\n                           <div className={\"section-title\"}>\r\n                               <h2>Listado de equipos</h2>\r\n                           </div>\r\n                       </div>\r\n                       <br/>\r\n                        {showTeamStudent ? (\r\n                            <>\r\n                                <div className=\"row-edit\">\r\n                                    <Alert variant={\"info\"}>\r\n                                        <img src=\"/info.png\" alt=\"\"/>\r\n                                        Desde aquí puedes gestionar todo sobre tus equipos.\r\n                                    </Alert>\r\n                                </div>\r\n                                <div className=\"row-edit\">\r\n                                    <Table striped bordered hover responsive>\r\n                                        <thead>\r\n                                            <tr>\r\n                                                <th>Equipo</th>\r\n                                                <th>Grupo</th>\r\n                                                <th>Integrantes</th>\r\n                                                <th>Acciones</th>\r\n                                            </tr>\r\n                                        </thead>\r\n                                        <tbody>\r\n                                            {dataTeams.filter(team => team.activo === 1).map(team => {\r\n                                                return (\r\n                                                    <tr key={team.idEquipo}>\r\n                                                        <td>{team.nombreEquipo}</td>\r\n                                                        <td>{team.nombreGrupo}</td>\r\n                                                        <td>\r\n                                                        {this.state.dataTeamStudent.filter(teamStudent => teamStudent.idEquipo === team.idEquipo).map((item, index) =>\r\n                                                            <div>{item.nombre} {item.apellidos}</div>\r\n                                                        )}\r\n                                                        </td>\r\n                                                        <td>\r\n                                                            <Link to={`/student/teamStudent/${team.idGrupo}`}>\r\n                                                                <img src=\"/manage.png\" alt=\"\"/>\r\n                                                                <Button variant=\"link\">Gestionar</Button>\r\n                                                            </Link>\r\n                                                        </td>\r\n                                                    </tr>\r\n                                                )\r\n                                            })}\r\n                                        </tbody>\r\n                                    </Table>\r\n                                </div>\r\n                            </>\r\n                        ) : (\r\n                            <div className=\"row-edit\">\r\n                                <Alert variant={\"danger\"}>\r\n                                    No dispones de equipos para mostrar.\r\n                                </Alert>\r\n                            </div>\r\n                        )}\r\n                   </Card.Body>\r\n               </Card>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Teams;","/*\r\n*  Name_file :Writing.js\r\n*  Description: Pagina del Escrito\r\n*/\r\nimport React, { Component, forwardRef } from 'react';\r\n\r\n/*Importaciones del editor */\r\nimport { Editor } from \"react-draft-wysiwyg\";\r\nimport { EditorState, convertToRaw } from \"draft-js\";\r\nimport \"react-draft-wysiwyg/dist/react-draft-wysiwyg.css\";\r\nimport draftToHtml from \"draftjs-to-html\";\r\n\r\n/**Datos del usuario */\r\nimport AuthUser from '../../../services/authenticity/auth-service.js';\r\n\r\n/**Servicios del estudiante */\r\nimport StudentService from '../../../services/student/student-service.js';\r\n\r\n/*Importacion del css*/\r\nimport '../../../styles/Writing.css';\r\nimport '../../../styles/Challenge.css';\r\nimport '../../../styles/styleGeneral.css';\r\nimport '../../../styles/styleCard.css';\r\n\r\n/*Componentes de estilos Bootstrap*/\r\nimport Card from 'react-bootstrap/Card';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport ListGroup from 'react-bootstrap/ListGroup';\r\nimport Alert from 'react-bootstrap/Alert';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nclass CreateWriting extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.onFileChange = this.onFileChange.bind(this);\r\n\r\n        this.state = {\r\n            imgCollection: [],//ficheros multimedia del escrito\r\n            dataTeamStudent: [],//Contiene los datos del equipo del estudiante\r\n            editorState: EditorState.createEmpty(),\r\n            challenge: '',//contiene el desafio\r\n            dataMediaChallenge: [],//array de multimedia del desafio\r\n            modalCreateWriting:false,\r\n            formErrors: {\r\n                title: '',\r\n                description: '',\r\n            },\r\n            form: {\r\n                idWriter: '',//idUser/idTeam según el tipo de desafío\r\n                title: '',//nombre del escrito \r\n                escrito: '',//descripcion del escrito\r\n            },\r\n            maxIdWriting: -1\r\n        }\r\n    }\r\n\r\n    onModalCreateWriting(modal) {\r\n        this.setState({\r\n            modalCreateWriting: modal\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        /*Obtiene el desafio seleccionado por el estudiante*/\r\n        StudentService.getChallenge(this.props.match.params.idChallenge).then(response => {\r\n            this.setState({\r\n                challenge: response[0]\r\n            });\r\n            //Si es colaborativo\r\n            if (response[0].colaborativo === 2) {\r\n                /*Obtiene equipo del estudiante correspondiente a un grupo en concreto*/\r\n                StudentService.getTeamStudentGroup(AuthUser.getCurrentUser().id, this.props.match.params.idGroup)\r\n                    .then(response => {\r\n\r\n                        this.setState({\r\n                            dataTeamStudent: response,\r\n                            form: {\r\n                                ...this.state.form,\r\n                                idWriter: response[0].idEquipo\r\n                            }\r\n                        });\r\n                    }).catch(error => {\r\n                        console.log(error.message);\r\n                    })\r\n            }\r\n            else {//es individual\r\n                this.setState({\r\n                    dataTeamStudent: response,\r\n                    form: {\r\n                        ...this.state.form,\r\n                        idWriter: AuthUser.getCurrentUser().id\r\n                    }\r\n                });\r\n            }\r\n        }).catch(error => {\r\n            console.log(error.message);\r\n        });\r\n\r\n        /*Obtiene multimedia del desafio*/\r\n        StudentService.getMultimediaChallenge(this.props.match.params.idChallenge)\r\n            .then(response => {\r\n                var respuesta = response.data[0];//hay que cambiar\r\n\r\n                this.setState({\r\n                    dataMediaChallenge: response.data\r\n                });\r\n            }).catch(error => {\r\n                console.log(error.message);\r\n            });\r\n\r\n        /* Obtiene el último escrito, es decir, el máximo id de escrito */\r\n        StudentService.getHighestidWriting()\r\n            .then(response => {\r\n                this.setState({\r\n                    maxIdWriting: response[0].maxIdWriting\r\n            });\r\n        }).catch(error => {\r\n            console.log(error.message);\r\n        });\r\n        \r\n    }\r\n\r\n    /*Envia el escrito y multimedia del estudiante y también añade una entrada en la tabla versionescrito */\r\n    createWriting = () => {\r\n        this.onModalCreateWriting(false);\r\n        //Compruebo si no se ha creado un escrito anteriormente \r\n        StudentService.getWritingWriter(this.props.match.params.idGroup, this.props.match.params.idChallenge, this.state.form.idWriter)\r\n            .then(response => {\r\n                //si no se hay escritos creados anteriormente\r\n                if (response.data.length == 0) {\r\n                    /**Si el estudiante/equipo ha escrito algo se envia */\r\n                    if (this.state.form.escrito !== '') {\r\n                        /*Envia el escrito del estudiante*/\r\n                        StudentService.createWriting(this.props.match.params.idGroup, this.props.match.params.idChallenge, this.state.form.idWriter, this.state.form.title, this.state.form.escrito, this.state.challenge.colaborativo)\r\n                            .then(response => {\r\n                                if (this.state.imgCollection.length > 0) {\r\n                                    /*Envia los archivos multimedia del estudiante*/\r\n                                    StudentService.sendMultimedia(this.state.imgCollection, this.state.form.idWriter, this.props.match.params.idChallenge, this.state.challenge.colaborativo)\r\n                                        .then(response => {\r\n                                             window.location.href = '/student/groups';\r\n                                        }).catch(error => {\r\n                                            console.log(error.message);\r\n                                        });\r\n                                }\r\n                                else {\r\n                                    window.location.href = '/student/groups';\r\n                                }\r\n                            })\r\n                            .catch(error => {\r\n                                console.log(error.message);\r\n                            });\r\n\r\n                        StudentService.insertVersionfromWriting(this.state.maxIdWriting + 1, 1, this.props.match.params.idChallenge, this.state.form.idWriter, this.state.form.title, this.state.form.escrito, this.state.challenge.colaborativo)\r\n                    \r\n                    }\r\n                }\r\n                else {\r\n                    var opcion = window.confirm(\"Ha ocurrido un error ya existe un escrito creado\");\r\n                }\r\n            })\r\n            .catch(error => {\r\n                console.log(error.message);\r\n            });\r\n    }\r\n\r\n    //Carga los ficheros multimedia del escrito \r\n    onFileChange(e) {\r\n        this.setState({ imgCollection: e.target.files });\r\n    }\r\n\r\n    //Convierte la descripción del escrito a html y lo guarda en el form\r\n    editorChange = () => {\r\n        this.setState({\r\n            form: {\r\n                ...this.state.form,\r\n                escrito: draftToHtml(convertToRaw(this.state.editorState.getCurrentContent()))\r\n            }\r\n        });\r\n    };\r\n\r\n    onEditorStateChange = (editorState) => {\r\n        this.setState({\r\n            editorState,\r\n        });\r\n    };\r\n\r\n    //Obtiene el nombre de los ficheros multimedia desafio/escrito\r\n    showTitle = (challenge) => {\r\n        var str = challenge.ruta;\r\n        var res = str.split(\"/\");\r\n        return res[8];\r\n    }\r\n\r\n    onChangeWritingName = e => {\r\n        e.preventDefault();\r\n        const { name, value } = e.target;\r\n        let formErrors = { ...this.state.formErrors };\r\n        switch (name) {\r\n            case \"title\":\r\n                formErrors.title =\r\n                    value.length < 1 ? \"Campo obligatorio requerido\" : \"\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        this.setState({\r\n            formErrors,\r\n            form: {\r\n                ...this.state.form,\r\n                title: e.target.value\r\n            }\r\n        });\r\n    }\r\n\r\n    //Muestra el tipo de desafio\r\n    showTypeChallenge = () => {\r\n\r\n        if (this.state.challenge.colaborativo === 1) {\r\n            return \"Escrito individual\"\r\n        }\r\n        else {\r\n            return \"Escrito Colaborativo\"\r\n        }\r\n    }\r\n\r\n    //Desactiva boton\r\n    disabledButton = () => {\r\n        if (this.state.form.title.length === 0  || this.state.form.escrito.length === 0 || this.state.form.escrito === \"<p></p>\\n\") {\r\n            return true;//desactivar\r\n        }\r\n        else\r\n            return false;\r\n    };\r\n\r\n    /*Dibuja la pagina */\r\n    render() {\r\n        const { editorState, dataMediaChallenge, formErrors } = this.state;\r\n        return (\r\n            <div className=\"container\">\r\n                <Card className=\"card-long\">\r\n                    <Card.Body >\r\n                        <div className={\"row-edit\"}>\r\n                            <div className={\"section-title\"}>\r\n                                <h2>{this.showTypeChallenge()}</h2>\r\n                            </div>\r\n                        </div>\r\n                        <br />\r\n                        <div className={\"row-edit\"}>\r\n                            <label className={\"form-label\"}>Detalles del desafío</label>\r\n                        </div>\r\n                        <hr />\r\n                        <div className=\"row-edit\">\r\n                            <ul className={\"flex-row\"}>\r\n                                <li className={\"flex-item-form\"}>\r\n                                    <label className='form-label'>Nombre del desafío</label>\r\n                                    <h5> {this.state.challenge.titulo} </h5>\r\n                                </li>\r\n                                <li className={\"flex-item-form\"}>\r\n                                    <label className='form-label'>Categoria</label>\r\n                                    <h5>{this.state.challenge.nombre}</h5>\r\n                                </li>\r\n                            </ul>\r\n                        </div>\r\n                        <div className={\"row-edit\"}>\r\n                            <label className='form-label'>Leer la descripción del Desafío</label>\r\n                            <div className=\"challenge-inputs\" dangerouslySetInnerHTML={{ __html: this.state.challenge.descripcion }}></div>\r\n                        </div>\r\n                        <div className=\"row-edit\">\r\n                            <label className='form-label'>Ficheros Multimedia: </label>\r\n                            {dataMediaChallenge.length > 0 ? (\r\n                                <table>\r\n                                    <tbody>\r\n                                        <div className={\"table-multi\"}>\r\n                                            {dataMediaChallenge.map((challenge) => (\r\n                                                <tr key={challenge.id}>\r\n                                                    <td>{this.showTitle(challenge)}</td>\r\n                                                    <div className={\"form-button\"}>\r\n                                                        <td><Button onClick={() => window.open(challenge.ruta)}>Ver</Button></td>\r\n                                                    </div>\r\n                                                </tr>\r\n                                            ))}\r\n                                        </div>\r\n                                    </tbody>\r\n                                </table>\r\n                            ) : (\r\n                                <div className=\"row-edit\">\r\n                                    <p>No hay ficheros para mostrar</p>\r\n                                </div>\r\n                            )}\r\n                        </div>\r\n                        <br />\r\n                        <div className={\"row-edit\"}>\r\n                            <label className={\"form-label\"}>Espacio de Escritura</label>\r\n                        </div>\r\n                        <hr />\r\n                        <div className=\"row-edit\">\r\n                            <div className={\"form-inputs\"}>\r\n                                <label className='form-label'>Titulo</label>\r\n                                <div>\r\n                                    <input\r\n                                        className={formErrors.title.length > 0 ? \"error\" : \"form-input\"}\r\n                                        type=\"text\"\r\n                                        name=\"title\"\r\n                                        placeholder=\"Escribe el título\"\r\n                                        value={this.state.form.title}\r\n                                        // onChange={this.handleChange}\r\n                                        onChange={this.onChangeWritingName}\r\n                                    />\r\n                                    {formErrors.title.length > 0 && (\r\n                                        <span className=\"alert-login\">{formErrors.title}</span>\r\n                                    )}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row-edit\">\r\n                            <label className='form-label'> Descripción </label>\r\n                            <Editor\r\n                                editorState={editorState}\r\n                                // toolbarClassName=\"toolbarClassName\"\r\n                                // wrapperClassName=\"wrapperClassName\"\r\n                                // editorClassName=\"editorClassName\"\r\n                                wrapperClassName=\"wrapperClassName1\"\r\n                                editorClassName=\"editorClassName1\"\r\n                                toolbarClassName=\"toolbarClassName1\"\r\n                                onEditorStateChange={this.onEditorStateChange}\r\n                                //onChange={this.editorChange}\r\n                                onChange={\r\n                                    (event, editor) => {\r\n                                        let formErrors = { ...this.state.formErrors };\r\n                                        if (!editorState.getCurrentContent().hasText()) {\r\n                                            formErrors.description = \"Campo texto Vacío\";\r\n                                        }\r\n                                        else {\r\n                                            formErrors.description = \"\";\r\n                                        }\r\n                                        this.setState({\r\n                                            formErrors,\r\n                                            form: {\r\n                                                ...this.state.form,\r\n                                                escrito: draftToHtml(convertToRaw(this.state.editorState.getCurrentContent()))\r\n                                            }\r\n                                        });\r\n                                    }\r\n                                }\r\n                                className={formErrors.description.length > 0 ? \"error\" : \"form-control\"}\r\n                            />\r\n                            {formErrors.description.length > 0 && (\r\n                                <span className=\"alert-login\">{formErrors.description}</span>\r\n                            )}\r\n                        </div>\r\n                        <br />\r\n                        <div class=\"row-edit\">\r\n                            <label className='form-label'>Puedes agregar un fichero multimedia si lo deseas (imagen,video o audio): </label>\r\n                            <div className=\"form\">\r\n                                <input type=\"file\" name=\"imgCollection\" onChange={this.onFileChange} multiple />\r\n                            </div>\r\n                        </div>\r\n                        <br />\r\n                        <div className={\"row-edit\"}>\r\n                            <div className=\"form-button\">\r\n                                <Button text='enviar' onClick={() => this.onModalCreateWriting(true)} disabled={this.disabledButton()}> Enviar  </Button>\r\n                            </div>\r\n                            <div className=\"form-button\">\r\n                                <Button onClick={() => window.location.href = '/student/challengesTabs'}>Cancelar</Button>\r\n                            </div>\r\n                        </div>\r\n                    </Card.Body>\r\n                </Card>\r\n\r\n                <Modal show={this.state.modalCreateWriting}>\r\n                    <Modal.Header>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                    <p> ¿Estás seguro de enviar el escrito?</p>\r\n                    </Modal.Body>\r\n\r\n                    <Modal.Footer>\r\n                        <Button onClick={() => this.createWriting()}>Aceptar</Button>\r\n                        <Button variant=\"danger\" onClick={() => this.onModalCreateWriting(false)}>Cancelar</Button>\r\n                    </Modal.Footer>\r\n                </Modal>           \r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default CreateWriting;","/*\r\n*  Name_file :EditWriting.js\r\n*  Description: Pagina de editar Escrito\r\n*/\r\nimport React, { Component, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n/*Importaciones del editor */\r\nimport { Editor } from \"react-draft-wysiwyg\";\r\nimport { EditorState, convertToRaw } from \"draft-js\";\r\nimport \"react-draft-wysiwyg/dist/react-draft-wysiwyg.css\";\r\nimport draftToHtml from \"draftjs-to-html\";\r\nimport { stateFromHTML } from 'draft-js-import-html';// escribe el 'html' en el editor\r\n// import EditorText from '../../TextEditor/TextEditor.js';\r\n\r\n/**Datos del usuario */\r\nimport AuthUser from '../../../services/authenticity/auth-service.js';\r\n\r\n/**Servicios del estudiante */\r\nimport StudentService from '../../../services/student/student-service.js';\r\n\r\n/*Importacion del css*/\r\nimport '../../../styles/Writing.css';\r\nimport '../../../styles/Challenge.css';\r\nimport '../../../styles/styleGeneral.css';\r\nimport '../../../styles/styleCard.css';\r\n\r\n/*Componentes de estilo Bootstrap*/\r\nimport Card from 'react-bootstrap/Card';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport Dropdown from 'react-bootstrap/Dropdown';\r\nimport DropdownMenu from 'react-bootstrap/DropdownMenu';\r\nimport DropdownItem from 'react-bootstrap/DropdownItem';\r\nimport DropdownToggle from 'react-bootstrap/DropdownToggle';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport FormControl from 'react-bootstrap/FormControl';\r\nimport Icon from '@material-ui/core/Icon';\r\nimport ExpandMoreRoundedIcon from '@material-ui/icons/ExpandMoreRounded';\r\n\r\n\r\n\r\nconst CustomToggle = React.forwardRef(({ children, onClick }, ref) => (\r\n    <a\r\n      href=\"\"\r\n      ref={ref}\r\n      onClick={(e) => {\r\n        e.preventDefault();\r\n        onClick(e);\r\n      }}\r\n    >\r\n      {children}\r\n      { <Icon><ExpandMoreRoundedIcon></ExpandMoreRoundedIcon></Icon>}\r\n    </a>\r\n  ));\r\n  \r\n  const CustomMenu = React.forwardRef(\r\n    ({ children, style, className, 'aria-labelledby': labeledBy }, ref) => {\r\n      const [value, setValue] = useState('');\r\n  \r\n      return (\r\n        <div\r\n          ref={ref}\r\n          style={style}\r\n          className={className}\r\n          aria-labelledby={labeledBy}\r\n        >\r\n          <FormControl\r\n            autoFocus\r\n            className=\"mx-3 my-2 w-auto\"\r\n            placeholder=\"Type to filter...\"\r\n            onChange={(e) => setValue(e.target.value)}\r\n            value={value}\r\n          />\r\n          <ul className=\"list-unstyled\">\r\n            {React.Children.toArray(children).filter(\r\n              (child) =>\r\n                !value || child.props.children.toLowerCase().startsWith(value) || child.props.children.toUpperCase().startsWith(value),\r\n            )}\r\n          </ul>\r\n        </div>\r\n      );\r\n    },\r\n  );\r\n\r\n\r\nclass EditWriting extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.onFileChange = this.onFileChange.bind(this);\r\n        this.state = {\r\n            imgCollection: [],//array de ficheros multimedia\r\n            contentState: null,//editor\r\n            editorState: EditorState.createEmpty(),\r\n            challenge: '',//contiene el desafio \r\n            dataMediaChallenge: [],//array de multimedia del desafio\r\n            dataMediaWriting: [],//array de multimedia del escrito\r\n            modalDeleteFile: false,\r\n            deleteFileMedia: '',//fichero multimedia del escrito que desea ser borrado\r\n            nameDeleteFileMedia: '',//nombre del fichero multimedia del escrito que desea ser borrado\r\n            modalEditWriting: false,\r\n            writing: '',\r\n            formErrors: {\r\n                title: '',\r\n                description: '',\r\n            },\r\n            form: {\r\n                idWriter: '',\r\n                title: '',\r\n                escrito: ''\r\n            },\r\n            maxIdVersion: -1,\r\n            //colaborativo: 0,\r\n        }\r\n    }\r\n\r\n    componentDidMount()\r\n    {\r\n        /* Devuelve la última versión de un escrito, es decir, el mayor id */\r\n        StudentService.getHighestidVersionfromWriting(this.props.match.params.idWriting)\r\n        .then(response => {\r\n            if(response.length > 0){\r\n                this.setState({ maxIdVersion: response[0].maxId });\r\n            }\r\n            else{\r\n                this.setState({maxIdVersion: 0});\r\n            }\r\n        /*Obtiene el desafio seleccionado*/\r\n        StudentService.getChallenge(this.props.match.params.idChallenge)\r\n            .then(response => {\r\n                this.setState({ challenge: response[0] });\r\n                //Si es colaborativo\r\n                if (response[0].colaborativo === 2) {\r\n                    /*Obtiene equipo del estudiante correspondiente a un grupo en concreto*/\r\n                    StudentService.getTeamStudentGroup(AuthUser.getCurrentUser().id, this.props.match.params.idGroup)\r\n                        .then(response => {\r\n                            this.setState({ form: { ...this.state.form, idWriter: response[0].idEquipo } });\r\n                            /*Obtiene multimedia del escrito del equipo */\r\n                            StudentService.getMultimediaWriting(this.props.match.params.idChallenge, response[0].idEquipo/*, this.state.maxIdVersion*/)\r\n                                .then(response => {\r\n                                    this.setState({ dataMediaWriting: response.data });\r\n                                }).catch(error => {\r\n                                    console.log(error.message);\r\n                                });\r\n                        }).catch(error => {\r\n                            console.log(error.message);\r\n                        })\r\n                }\r\n                else {//si es individual\r\n                    this.setState({\r\n                        form: {\r\n                            ...this.state.form,\r\n                            idWriter: AuthUser.getCurrentUser().id\r\n                        }\r\n                    });\r\n\r\n                    /*Obtiene multimedia del escrito del estudiante */\r\n                    StudentService.getMultimediaWriting(this.props.match.params.idChallenge, AuthUser.getCurrentUser().id/*, this.state.maxIdVersion*/)\r\n                        .then(response => {\r\n                            this.setState({ dataMediaWriting: response.data });\r\n                        }).catch(error => {\r\n                            console.log(error.message);\r\n                        });\r\n                }\r\n\r\n            }).catch(error => {\r\n                console.log(error.message);\r\n            });\r\n        }).catch(error => {\r\n            console.log(error.message);\r\n        });\r\n\r\n        /*Obtiene multimedia del desafio*/\r\n        StudentService.getMultimediaChallenge(this.props.match.params.idChallenge)\r\n            .then(response => {\r\n                this.setState({ dataMediaChallenge: response.data, });\r\n            }).catch(error => {\r\n                console.log(error.message);\r\n            });\r\n\r\n\r\n        /* Devuelve la última versión de un escrito, es decir, el mayor id */\r\n        StudentService.getHighestidVersionfromWriting(this.props.match.params.idWriting)\r\n        .then(response => {\r\n            if(response.length > 0){\r\n                this.setState({ maxIdVersion: response[0].maxId });\r\n            }\r\n            else{\r\n                this.setState({maxIdVersion: 0});\r\n            }\r\n        }).catch(error => {\r\n            console.log(error.message);\r\n        });\r\n\r\n        /*Obtiene el escrito */\r\n        StudentService.getWriting(this.props.match.params.idWriting)\r\n        .then(response => {\r\n            var contentState = stateFromHTML(response.data[0].texto);\r\n            let editorState = EditorState.createWithContent(contentState);\r\n            // this.setState({ editorState: editorState });\r\n            this.setState({\r\n                writing: response.data[0],\r\n                editorState: editorState,\r\n                form: {\r\n                    ...this.state.form,\r\n                    title: response.data[0].nombre,\r\n                    escrito: response.data[0].texto\r\n                }\r\n        });\r\n        }).catch(error => {\r\n            console.log(error.message);\r\n        });\r\n\r\n        StudentService.getWritings(AuthUser.getCurrentUser().id)\r\n        .then(response => {\r\n            this.setState({ escritosNoCombinados: response.data });\r\n        }).catch(error => {\r\n            console.log(error.message);\r\n        });\r\n        \r\n    }\r\n\r\n    //Envia el escrito editado \r\n    editWriting = () => {\r\n        this.onModalEditWriting(false)\r\n        /*Edita escrito del estudiante*/\r\n        StudentService.editWriting(this.props.match.params.idWriting, this.props.match.params.idGroup, this.props.match.params.idChallenge, this.state.form.idWriter, this.state.form.title, this.state.form.escrito, this.state.challenge.colaborativo)\r\n            .then(response => {\r\n                if (this.state.imgCollection.length > 0) {\r\n                    StudentService.sendMultimedia(this.state.imgCollection, this.state.form.idWriter, this.props.match.params.idChallenge, this.state.challenge.colaborativo/*, this.state.maxIdVersion + 1*/)\r\n                        .then(response => {\r\n                            window.location.href = '/student/writingsTabs';\r\n                        }).catch(error => {\r\n                            console.log(error.message);\r\n                        });\r\n                }\r\n                else {\r\n                    window.location.href = '/student/writingsTabs';\r\n                }\r\n            })\r\n            .catch(error => {\r\n                console.log(error.message);\r\n            });\r\n\r\n            StudentService.insertVersionfromWriting(this.props.match.params.idWriting, this.state.maxIdVersion + 1, this.props.match.params.idChallenge, this.state.form.idWriter, this.state.form.title, this.state.form.escrito, this.state.challenge.colaborativo)\r\n    \r\n    }\r\n\r\n    //Elimina el fichero multimedia del escrito\r\n    deleteFile = (writing) => {\r\n        this.closeModalDeleteFile();\r\n        var contador = 0;\r\n        var arreglo = this.state.dataMediaWriting;\r\n        arreglo.map((registro) => {\r\n            if (writing.id === registro.id) {\r\n                arreglo.splice(contador, 1);\r\n            }\r\n            contador++;\r\n        });\r\n        this.setState({ dataMediaWriting: arreglo });\r\n\r\n        StudentService.deleteMultimedia(writing.id, writing.ruta)\r\n            .then(response => {\r\n            })\r\n            .catch(error => {\r\n                console.log(error.message);\r\n            });\r\n    }\r\n\r\n    //Carga los ficheros multimedia del escrito \r\n    onFileChange(e) {\r\n        this.setState({ imgCollection: e.target.files });\r\n    }\r\n\r\n    //convierte la descripción del escrito a html y lo guarda en el form\r\n    editorChange = () => {\r\n        this.setState({\r\n            form: {\r\n                ...this.state.form,\r\n                escrito: draftToHtml(convertToRaw(this.state.editorState.getCurrentContent()))\r\n            }\r\n        });\r\n    };\r\n\r\n    onEditorStateChange = (editorState) => {\r\n        this.setState({\r\n            editorState\r\n        });\r\n    };\r\n\r\n    onContentStateChange = contentState => {\r\n        this.setState({\r\n            contentState\r\n        });\r\n    };\r\n\r\n    //Obtiene el nombre de los ficheros multimedia desafio/escrito\r\n    showTitle = (challenge) => {\r\n        var str = challenge.ruta;\r\n        var res = str.split(\"/\");\r\n        return res[8];\r\n    }\r\n\r\n    //Muestra modal de confirmación para eliminar fichero multimedia\r\n    askDeleteFile = (writing) => {\r\n        var str = writing.ruta;\r\n        var res = str.split(\"/\");\r\n        this.setState({\r\n            nameDeleteFileMedia: res[8],\r\n            deleteFileMedia: writing\r\n        });\r\n        this.showModalDeleteFile();\r\n    }\r\n\r\n    //Muestra el modal de eliminar fichero\r\n    showModalDeleteFile = () => {\r\n        this.setState({\r\n            modalDeleteFile: true,\r\n        });\r\n    };\r\n\r\n    //Cierra el modal de eliminar fichero\r\n    closeModalDeleteFile = () => {\r\n        this.setState({ modalDeleteFile: false });\r\n    };\r\n\r\n    onChangeWritingName = e => {\r\n        e.preventDefault();\r\n        const { name, value } = e.target;\r\n        let formErrors = { ...this.state.formErrors };\r\n        switch (name) {\r\n            case \"title\":\r\n                formErrors.title =\r\n                    value.length < 1 ? \"Campo obligatorio requerido\" : \"\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            formErrors,\r\n            form: {\r\n                ...this.state.form,\r\n                title: e.target.value\r\n            }\r\n        });\r\n    }\r\n\r\n    //Devuelve el tipo de desafio\r\n    showCollaborative = () => {\r\n        if (this.state.challenge.colaborativo === 1) {\r\n            return \"Individual\"\r\n        }\r\n        else {\r\n            return \"Colaborativo\"\r\n        }\r\n    }\r\n\r\n    //Desactiva boton\r\n    disabledButton = () => {\r\n        if (this.state.form.title.length === 0  || this.state.form.escrito.length === 0 || this.state.form.escrito === \"<p></p>\\n\") {\r\n            return true;//desactivar\r\n        }\r\n        else\r\n            return false;\r\n    };\r\n\r\nonModalEditWriting = (modal) => {\r\n        this.setState({\r\n            modalEditWriting: modal,\r\n        });\r\n    };\r\n\r\n    infoWriting = (data) => {\r\n        this.state.data.map(function(writing){\r\n            return `${writing.idGrupo}/${writing.idDesafio}/${writing.id}`;\r\n       })\r\n    }\r\n\r\n    /*Dibuja la pagina */\r\n    render() {\r\n        let contentState, editorState2;\r\n        const { editorState, dataMediaChallenge, dataMediaWriting, formErrors, data, escritosNoCombinados, textoEscritoCombinado } = this.state;\r\n        return (\r\n            <div className=\"container\">\r\n                <Card className=\"card-edit\">\r\n                    <Card.Body>\r\n                        <div className={\"row-edit\"}>\r\n                            <div className={\"section-title\"}>\r\n                                <h2>Editar Escrito {this.showCollaborative()}</h2>\r\n                            </div>\r\n                        </div>\r\n                        <div className={\"row-edit\"}>\r\n                            <label className={\"form-label\"}>Detalles del desafío</label>\r\n                        </div>\r\n                        <hr />\r\n                        <ul className={\"flex-row\"}>\r\n                            <li className={\"flex-item-form\"}>\r\n                                <label className='form-label'>Nombre</label>\r\n                                <h5> {this.state.challenge.titulo} </h5>\r\n                            </li>\r\n                            <li className={\"flex-item-form\"}>\r\n                                <label className='form-label'>Categoria</label>\r\n                                <h5>{this.state.challenge.nombre}</h5>\r\n                            </li>\r\n                        </ul>\r\n                        <div className=\"row-edit\">\r\n                            <label className='form-label'>Leer la descripción del Desafío</label>\r\n                            <div className=\"challenge-inputs\"\r\n                                dangerouslySetInnerHTML={{ __html: this.state.challenge.descripcion }}>\r\n\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row-edit\">\r\n                            <label className='form-label'>Ficheros Multimedia: </label>\r\n\r\n                            {dataMediaChallenge.length > 0 ? (\r\n\r\n                                <table>\r\n                                    <tbody>\r\n                                        <div className={\"table-multi\"}>\r\n                                            {dataMediaChallenge.map((challenge) => (\r\n                                                <tr key={challenge.id}>\r\n                                                    <td>{this.showTitle(challenge)}</td>\r\n                                                    <td>\r\n                                                        <div className={\"form-button\"}>\r\n                                                            <Button onClick={() => window.open(challenge.ruta)}>Ver</Button>\r\n                                                        </div>\r\n                                                    </td>\r\n                                                </tr>\r\n                                            ))}\r\n                                        </div>\r\n                                    </tbody>\r\n                                </table>\r\n                            ) : (\r\n                                <div className=\"row-edit\">\r\n                                    <p>No hay ficheros para mostrar</p>\r\n                                </div>\r\n                            )}\r\n                        </div>\r\n                        <br />\r\n                        <div className={\"row-edit\"}>\r\n                            <label className={\"form-label\"}>Espacio de escritura</label>\r\n                        </div>\r\n                        <hr />\r\n                        <div className={\"row-edit\"}>\r\n                            <div className=\"form-inputs\">\r\n                                <label className='form-label'>Titulo</label>\r\n                                <div>\r\n                                    <input\r\n                                        className={formErrors.title.length > 0 ? \"error\" : \"form-input\"}\r\n                                        type=\"text\"\r\n                                        name=\"title\"\r\n                                        placeholder=\"Escribe el título\"\r\n                                        value={this.state.form.title}\r\n                                        // onChange={this.handleChange}\r\n                                        onChange={this.onChangeWritingName}\r\n                                    />\r\n                                    {formErrors.title.length > 0 && (\r\n                                        <span className=\"alert-login\">{formErrors.title}</span>\r\n                                    )}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row-edit\">\r\n                            <label className='form-label' >Escribe aquí</label>\r\n\r\n                            <Editor\r\n                                \r\n                                editorState = {editorState}\r\n                                // toolbarClassName=\"toolbarClassName\"\r\n                                // // wrapperClassName=\"demo-wrapper\"\r\n                                // // editorClassName=\"border-edit\"\r\n                                wrapperClassName=\"wrapperClassName1\"\r\n                                editorClassName=\"editorClassName1\"\r\n                                toolbarClassName=\"toolbarClassName1\"\r\n                                onEditorStateChange={this.onEditorStateChange}\r\n                                onContentStateChange={this.onContentStateChange}\r\n                                // onChange={this.editorChange}\r\n\r\n                                onChange={\r\n                                    (event, editor) => {\r\n                                        let formErrors = { ...this.state.formErrors };\r\n                                        if (!editorState.getCurrentContent().hasText()) {\r\n                                            formErrors.description = \"Campo texto vacío\";\r\n                                        }\r\n                                        else {\r\n                                            formErrors.description = \"\";\r\n                                        }\r\n                                        this.setState({\r\n                                            formErrors,\r\n                                            form: {\r\n                                                ...this.state.form,\r\n                                                escrito: draftToHtml(convertToRaw(this.state.editorState.getCurrentContent()))\r\n                                            }\r\n                                        });\r\n                                    }\r\n                                }\r\n                                className={formErrors.description.length > 0 ? \"error\" : \"form-control\"}\r\n                            />\r\n                            {formErrors.description.length > 0 && (\r\n                                <span className=\"alert-login\">{formErrors.description}</span>\r\n                            )}\r\n\r\n                        </div>\r\n                        <br />\r\n                        <div class=\"row-edit\">\r\n                            <label className='form-label'>Puedes agregar un fichero multimedia si lo deseas (imagen,video o audio): </label>\r\n                            <div className=\"form\">\r\n                                <input type=\"file\" name=\"imgCollection\" onChange={this.onFileChange} multiple />\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div class=\"row-edit\">\r\n                            <label className='form-label'>Ficheros Multimedia</label>\r\n                            {dataMediaWriting.length > 0 ? (\r\n                                <table>\r\n                                    <tbody>\r\n                                        <div className={\"table-multi\"}>\r\n                                            {dataMediaWriting.map((writing) => (\r\n                                                <tr key={writing.id}>\r\n                                                    <td>{this.showTitle(writing)}</td>\r\n                                                    <td>\r\n                                                        <div className=\"form-button\">\r\n                                                            <Button onClick={() => window.open(writing.ruta)}>Ver</Button>\r\n                                                        </div>\r\n                                                    </td>\r\n                                                    <td>\r\n                                                        <div className=\"form-button\">\r\n                                                            <Button variant=\"danger\" onClick={() => this.askDeleteFile(writing)}>Eliminar</Button>\r\n                                                        </div>\r\n                                                    </td>\r\n                                                </tr>\r\n                                            ))}\r\n                                        </div>\r\n                                    </tbody>\r\n                                </table>\r\n                            ) : (\r\n                                <div className=\"row-edit\">\r\n                                    <p>No hay ficheros para mostrar</p>\r\n                                </div>\r\n                            )}\r\n                        </div>\r\n                        <br />\r\n\r\n                        <div className={\"row-edit\"}>\r\n                            <div className=\"form-button\">\r\n                                <Button text='enviar' onClick={() => this.onModalEditWriting(true)} disabled={this.disabledButton()} > Guardar  </Button>\r\n                            </div>\r\n                            <div className=\"form-button\">\r\n                                <Button onClick={() => window.location.href = '/student/writingsTabs'}>Cancelar</Button>\r\n                            </div>\r\n\r\n                            <div className=\"form-button\">\r\n                                <Button onClick={() => window.location.href = `/student/versionsWriting/${this.props.match.params.idGroup}/${this.props.match.params.idChallenge}/${this.props.match.params.idWriting}`}>Acceder a versiones anteriores</Button>\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n                    </Card.Body>\r\n                </Card>\r\n\r\n                <Modal show={this.state.modalDeleteFile}>\r\n                    <Modal.Header>\r\n                        <div><h5>¿Seguro que desea eliminar {this.state.nameDeleteFileMedia}?</h5> </div>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        {/* <FormGroup>\r\n                        </FormGroup> */}\r\n                    </Modal.Body>\r\n\r\n                    <Modal.Footer>\r\n                        <Button onClick={() => this.deleteFile(this.state.deleteFileMedia)}>Aceptar</Button>\r\n                        <Button variant=\"danger\" onClick={() => this.closeModalDeleteFile()}>Cancelar</Button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n                \r\n                <Modal show={this.state.modalEditWriting}>\r\n                    <Modal.Header>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                    <p> ¿Deseas guardar los cambios?</p>\r\n                    </Modal.Body>\r\n\r\n                    <Modal.Footer>\r\n                        <Button onClick={() => this.editWriting()}>Aceptar</Button>\r\n                        <Button variant=\"danger\" onClick={() => this.onModalEditWriting(false)}>Cancelar</Button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n\r\n\r\n\r\n                <Modal show={this.state.modalCombinarEscrito}>\r\n                    <Modal.Header>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                    <p> ¿Deseas combinar este escrito?</p>\r\n                    </Modal.Body>\r\n\r\n                    <Modal.Footer>\r\n                        <Button onClick={() => this.combinarEscrito(this.state.idWritingSelect)}>Aceptar</Button>\r\n                        <Button variant=\"danger\" onClick={() => this.onModalCombinarEscrito(false)}>Cancelar</Button>\r\n                    </Modal.Footer>\r\n                </Modal> \r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default EditWriting;","/*\r\n*  Name_file :EditWriting.js\r\n*  Description: Pagina de editar Escrito\r\n*/\r\n\r\nimport React, { Component } from 'react';\r\nimport { Link } from \"react-router-dom\";\r\n\r\n/*Importaciones del editor */\r\nimport { Editor } from \"react-draft-wysiwyg\";\r\nimport { EditorState, convertToRaw } from \"draft-js\";\r\nimport \"react-draft-wysiwyg/dist/react-draft-wysiwyg.css\";\r\nimport draftToHtml from \"draftjs-to-html\";\r\nimport { stateFromHTML } from 'draft-js-import-html';// escribe el 'html' en el editor\r\n// import EditorText from '../../TextEditor/TextEditor.js';\r\n\r\n/**Datos del usuario */\r\nimport AuthUser from '../../../services/authenticity/auth-service.js';\r\n\r\n/**Servicios del estudiante */\r\nimport StudentService from '../../../services/student/student-service.js';\r\n\r\n/*Importacion del css*/\r\nimport '../../../styles/Writing.css';\r\nimport '../../../styles/Challenge.css';\r\nimport '../../../styles/styleGeneral.css';\r\nimport '../../../styles/styleCard.css';\r\n\r\n/*Componentes de estilo Bootstrap*/\r\nimport ListGroup from 'react-bootstrap/ListGroup';\r\nimport Alert from 'react-bootstrap/Alert';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Modal from 'react-bootstrap/Modal';\r\n\r\n\r\nclass ViewWriting extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.onFileChange = this.onFileChange.bind(this);\r\n        this.state = {\r\n            imgCollection: [],//array de ficheros multimedia\r\n            dataTeamStudent: [],//contiene el equipo del estudiante\r\n            contentState: null,//editor\r\n            editorState: EditorState.createEmpty(),\r\n            challenge: '',//contiene el desafio \r\n            writing: '',//contiene el escrito\r\n            dataMediaChallenge: [],//array de multimedia del desafio\r\n            dataMediaWriting: [],//array de multimedia del escrito\r\n            modalDeleteFile: false,\r\n            deleteFileMedia: '',//fichero multimedia del escrito que desea ser borrado\r\n            nameDeleteFileMedia: '',//nomnbre del fichero multimedia del escrito que desea ser borrado\r\n            form: {\r\n                idWriter: '',\r\n                escrito: ''\r\n            }\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        /*Obtiene el desafio seleccionado*/\r\n        StudentService.getChallenge(this.props.match.params.idChallenge)\r\n            .then(response => {\r\n                this.setState({\r\n                    challenge: response[0]\r\n                });\r\n                //Si es colaborativo\r\n                if (response[0].colaborativo === 2) {\r\n                    /*Obtiene equipo del estudiante correspondiente a un grupo en concreto*/\r\n                    StudentService.getTeamStudentGroup(AuthUser.getCurrentUser().id, this.props.match.params.idGroup)\r\n                        .then(response => {\r\n                            this.setState({\r\n                                dataTeamStudent: response,\r\n                                form: {\r\n                                    ...this.state.form,\r\n                                    idWriter: response[0].idEquipo\r\n                                }\r\n                            });\r\n                        }).catch(error => {\r\n                            console.log(error.message);\r\n                        })\r\n                }\r\n                else {//si es individual\r\n                    this.setState({\r\n                        dataTeamStudent: response,\r\n                        form: {\r\n                            ...this.state.form,\r\n                            idWriter: AuthUser.getCurrentUser().id\r\n                        }\r\n                    });\r\n                }\r\n\r\n                /*Obtiene multimedia del escrito del estudiante/equipo */\r\n                StudentService.getMultimediaWriting(this.props.match.params.idChallenge, this.state.form.idWriter)\r\n                    .then(response => {\r\n                        this.setState({ dataMediaWriting: response.data });\r\n                    }).catch(error => {\r\n                        console.log(error.message);\r\n                    });\r\n\r\n            }).catch(error => {\r\n                console.log(error.message);\r\n            });\r\n\r\n        /*Obtiene multimedia del desafio*/\r\n        StudentService.getMultimediaChallenge(this.props.match.params.idChallenge)\r\n            .then(response => {\r\n                this.setState({ dataMediaChallenge: response.data, });\r\n            }).catch(error => {\r\n                console.log(error.message);\r\n            });\r\n\r\n        /*Obtiene el escrito del estudiante */\r\n        StudentService.getWriting(this.props.match.params.idWriting)\r\n            .then(response => {\r\n                var contentState = stateFromHTML(response.data[0].texto);\r\n                let editorState = EditorState.createWithContent(contentState);\r\n                // this.setState({ editorState: editorState });\r\n                this.setState({\r\n                    editorState: editorState,\r\n                    writing: response.data[0],\r\n                    form: {\r\n                        ...this.state.form,\r\n                        escrito: response.data[0].texto\r\n                    }\r\n                });\r\n            }).catch(error => {\r\n                console.log(error.message);\r\n            });\r\n    }\r\n\r\n    //Envia el escrito editado \r\n    editWriting = () => {\r\n        /*Edita escrito del estudiante*/\r\n        StudentService.editWriting(this.props.match.params.idWriting, this.props.match.params.idGroup, this.props.match.params.idChallenge, this.state.form.idWriter, this.state.form.escrito, this.state.challenge.colaborativo)\r\n            .then(response => {\r\n                if (this.state.imgCollection.length > 0) {\r\n                    StudentService.sendMultimedia(this.state.imgCollection, this.state.form.idWriter, this.props.match.params.idChallenge, this.state.challenge.colaborativo)\r\n                        .then(response => {\r\n                            // window.location.href = '/student/groups';\r\n                            window.location.href = '/student';\r\n                        }).catch(error => {\r\n                            console.log(error.message);\r\n                        });\r\n                }\r\n                else {\r\n                    window.location.href = '/student';\r\n                }\r\n            })\r\n            .catch(error => {\r\n                console.log(error.message);\r\n            });\r\n    }\r\n\r\n    //Elimina el fichero multimedia del escrito\r\n    deleteFile = (writing) => {\r\n        this.closeModalDeleteFile();\r\n        var contador = 0;\r\n        var arreglo = this.state.dataMediaWriting;\r\n        arreglo.map((registro) => {\r\n            if (writing.id === registro.id) {\r\n                arreglo.splice(contador, 1);\r\n            }\r\n            contador++;\r\n        });\r\n        this.setState({ dataMediaWriting: arreglo });\r\n        StudentService.deleteMultimedia(writing.id, writing.ruta)\r\n            .then(response => {\r\n            })\r\n            .catch(error => {\r\n                console.log(error.message);\r\n            });\r\n    }\r\n\r\n    //Carga los ficheros multimedia del escrito \r\n    onFileChange(e) {\r\n        this.setState({ imgCollection: e.target.files });\r\n    }\r\n\r\n    //convierte la descripción del escrito a html y lo guarda en el form\r\n    editorChange = () => {\r\n        this.setState({\r\n            form: {\r\n                ...this.state.form,\r\n                escrito: draftToHtml(convertToRaw(this.state.editorState.getCurrentContent()))\r\n            }\r\n        });\r\n    };\r\n\r\n    onEditorStateChange = (editorState) => {\r\n        this.setState({\r\n            editorState\r\n        });\r\n    };\r\n\r\n    onContentStateChange = contentState => {\r\n        this.setState({\r\n            contentState\r\n        });\r\n    };\r\n\r\n    //Obtiene el nombre de los ficheros multimedia desafio/escrito\r\n    showTitle = (challenge) => {\r\n        var str = challenge.ruta;\r\n        var res = str.split(\"/\");\r\n        return res[8];\r\n    }\r\n\r\n    //Muestra modal de confirmación para eliminar fichero multimedia\r\n    askDeleteFile = (writing) => {\r\n        var str = writing.ruta;\r\n        var res = str.split(\"/\");\r\n        this.setState({\r\n            nameDeleteFileMedia: res[8],\r\n            deleteFileMedia: writing\r\n        });\r\n        this.showModalDeleteFile();\r\n    }\r\n\r\n    //Muestra el modal de eliminar fichero\r\n    showModalDeleteFile = () => {\r\n        this.setState({\r\n            modalDeleteFile: true,\r\n        });\r\n    };\r\n\r\n    //Cierra el modal de eliminar fichero\r\n    closeModalDeleteFile = () => {\r\n        this.setState({ modalDeleteFile: false });\r\n    };\r\n\r\n    //Muestra el tipo de desafio\r\n    showTypeChallenge = () => {\r\n\r\n        if (this.state.challenge.colaborativo === 1) {\r\n            return \"Escrito individual\"\r\n        }\r\n        else {\r\n            return \"Escrito Colaborativo\"\r\n        }\r\n    }\r\n\r\n    /*Dibuja la pagina */\r\n    render() {\r\n        const { dataMediaChallenge } = this.state;\r\n        const { dataMediaWriting } = this.state;\r\n        // const { formErrors } = this.state;\r\n        return (\r\n            <>\r\n                <div className=\"container\">\r\n                    <Card className=\"card-edit\">\r\n                        <Card.Body>\r\n                            <div className={\"row-edit\"}>\r\n                                <div className={\"section-title\"}>\r\n                                    <h2>{this.showTypeChallenge()}</h2>\r\n                                </div>\r\n                            </div>\r\n                            <div className={\"row-edit\"}>\r\n                                <label className={\"form-label\"} htmlFor=\"\">\r\n                                    DETALLES DEL DESAFÍO\r\n                                </label>\r\n                            </div>\r\n                            <hr/>\r\n                            <ul className={\"flex-row\"}>\r\n                                <li className={\"flex-item-form\"}>\r\n                                    <label className={\"form-label\"} htmlFor=\"\">Nombre</label>\r\n                                    <h5> {this.state.challenge.titulo} </h5>\r\n                                </li>\r\n                                <li className={\"flex-item-form\"}>\r\n                                    <label className='form-label'>Categoria</label>\r\n                                    <h5>{this.state.challenge.nombre}</h5>\r\n                                </li>\r\n                            </ul>\r\n                            <div className=\"row-edit\">\r\n                                <label className='form-label'>Leer la descripción del Desafío</label>\r\n                                <div className=\"challenge-inputs\" dangerouslySetInnerHTML={{ __html: this.state.challenge.descripcion }}></div>\r\n                            </div>\r\n                            <div className=\"row-edit\">\r\n                                <label className='form-label'>Ficheros Multimedia: </label>\r\n                                <table>\r\n                                    <tbody>\r\n                                        <div style={{ width: \"500px\", height: \"250px\", overflow: \"scroll\", behavior: \"smooth\" }}>\r\n                                            {dataMediaChallenge.map((challenge) => (\r\n                                                <tr key={challenge.id}>\r\n                                                    <td>{this.showTitle(challenge)}</td>\r\n                                                    <td><Button onClick={() => window.open(challenge.ruta)}>Ver</Button></td>\r\n                                                </tr>\r\n                                            ))}\r\n                                        </div>\r\n                                    </tbody>\r\n                                </table>\r\n                            </div>\r\n                            <br/>\r\n                            <div className={\"row-edit\"}>\r\n                                <label className={\"form-label\"} htmlFor=\"\">\r\n                                    Escrito\r\n                                </label>\r\n                            </div>\r\n                            <hr/>\r\n                            <div className=\"row-edit\">\r\n                                <label className='form-label'>Titulo </label>\r\n                                <h5>{this.state.writing.nombre}</h5>\r\n                            </div>\r\n                            <div className=\"row-edit\">\r\n                                <label className='form-label'>Descripción </label>\r\n                                <div className={\"challenge-inputs\"}>\r\n                                    <div dangerouslySetInnerHTML={{ __html: this.state.form.escrito }}></div>\r\n                                </div>\r\n                            </div>\r\n\r\n\r\n                            <div class=\"row-edit\">\r\n                                <label className='form-label'>Ficheros Multimedia: </label>\r\n                                <table>\r\n                                    <tbody>\r\n                                        <div style={{ width: \"500px\", height: \"250px\", overflow: \"scroll\", behavior: \"smooth\" }}>\r\n                                            {dataMediaWriting.map((writing) => (\r\n                                                <tr key={writing.id}>\r\n                                                    <td>{this.showTitle(writing)}</td>\r\n                                                    <td><Button onClick={() => window.open(writing.ruta)}>Ver</Button></td>\r\n                                                </tr>\r\n                                            ))}\r\n                                        </div>\r\n                                    </tbody>\r\n                                </table>\r\n                            </div>\r\n\r\n                            <div class=\"row-edit\">\r\n                                <label className='form-label'>Calificación: </label>\r\n                                <td><textarea rows=\"2\" cols=\"10\" value={this.state.writing.puntuacion} readOnly={true} style={{ resize: \"none\", textAlign: \"center\" }} ></textarea></td>\r\n                            </div>\r\n\r\n                            <div class=\"row-edit\">\r\n                                <label className='form-label'>Comentarios: </label>\r\n                                <td><textarea rows=\"10\" cols=\"70\" value={this.state.writing.comentario} readOnly={true} style={{ resize: \"none\", justifyContent: \"center\" }} ></textarea></td>\r\n                            </div>\r\n                            <div className={\"row-edit\"}>\r\n                                <div className=\"form-button\">\r\n                                    <Button onClick={() => window.location.href = '/student'}>Volver</Button>\r\n                                </div>\r\n                            </div>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </div>\r\n\r\n                <Modal show={this.state.modalDeleteFile}>\r\n                    <Modal.Header>\r\n                        <div><h5>¿Estás seguro de eliminar {this.state.nameDeleteFileMedia}?</h5> </div>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                    </Modal.Body>\r\n\r\n                    <Modal.Footer>\r\n                        <Button onClick={() => this.deleteFile(this.state.deleteFileMedia)}>Aceptar</Button>\r\n                        <Button variant=\"danger\" onClick={() => this.closeModalDeleteFile()}>Cancelar</Button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n            </>\r\n        );\r\n    }\r\n}\r\nexport default ViewWriting;","const linksStudent = [\r\n    {\r\n        path: \"/groups\",\r\n        name: \"Grupos\",\r\n        icon:\"/group.png\",\r\n        id: \"challenges\"\r\n    },\r\n    {\r\n        path: \"/challengesTabs\",\r\n        name: \"Crear Escrito\",\r\n        icon:\"/create-new.png\",\r\n        id: \"desafios\"\r\n    },\r\n    {\r\n        path: \"/writingsTabs\",\r\n        name: \"Escritos\",\r\n        icon:\"/writing.png\",\r\n        id: \"escritos\"\r\n    },\r\n    {\r\n        path: \"/teams\",\r\n        name: \"Equipos\",\r\n        icon:\"/team.png\",\r\n        id: \"teams\"\r\n    },\r\n    {\r\n        path: \"/visualizecollections\",\r\n        name: \"Colecciones\",\r\n        icon: \"/collection.png\",\r\n        id: \"colecciones\",\r\n    }\r\n];\r\n\r\nexport default linksStudent;","import io from \"socket.io-client\";\r\n\r\nlet socket = io(\"http://localhost:3001\");\r\n// const io  = require ( \"socket.io-client\" ); \r\n// const socket = io ( \"//localhost:3001\" , { \r\n//   withCredentials: true , \r\n//   extraHeaders: { \"my-custom-header\" : \"abcd\"   } });\r\n\r\nexport default socket;\r\n\r\n","// import React, { useState } from \"react\";\r\n// import socket from \"../../../utils/Socket\";\r\n\r\n\r\n// function EditWritingTeam() {\r\n//    socket.emit('conectado',\"hola desde cliente\");\r\n  \r\n//     return (\r\n//       <div className=\"App\">\r\n//        fdafadfafa\r\n//       </div>\r\n//     );\r\n//   }\r\n  \r\n//   export default EditWritingTeam;\r\n  \r\nimport React, { useState, useEffect, useRef } from \"react\";\r\nimport socket from \"../../../utils/Socket\";\r\n\r\n/**Datos del usuario */\r\nimport AuthUser from '../../../services/authenticity/auth-service.js';\r\nimport '../../../styles/App.css';\r\n\r\nimport Button from 'react-bootstrap/Button';\r\n\r\n// const Chat = ({ nombre,prueba}) => {\r\n  const Chat = ({pruebaChange,nombre}) => {\r\n\r\n  const [mensaje, setMensaje] = useState(\"\");\r\n  const [mensajes, setMensajes] = useState([]);\r\n\r\n  //se ejecuta cuando la componente se renderiza username\r\n  useEffect(() => {\r\n    socket.emit(\"conectado\", nombre);//para pasarle al servidor el nombre del usuario\r\n  }, [nombre]);//se ejecuta cuando ya exista un nombre y no antes\r\n\r\n\r\n  //Captura cuando el servidor envia mensajes\r\n  useEffect(() => {\r\n    socket.on(\"mensajes\", (mensaje) => {\r\n      \r\n      setMensajes([...mensajes, mensaje]);//... indica que se añadira al final del array\r\n    });\r\n    return () => {\r\n      socket.off();//evitar bucle, disconectar no este continuamente los sockets abiertos y evitar cuelgues\r\n    };\r\n  }, [mensajes]);\r\n\r\n  //para que el scroolbar se baje solo cuando el textArea este lleno\r\n  const divRef = useRef(null);\r\n  \r\n  // useEffect(() => {\r\n  //   // divRef.current.scrollIntoView({ behavior: \"smooth\" });\r\n  // });\r\n\r\n\r\n  //cuando se envia el formulario\r\n  const submit = (e) => {\r\n    e.preventDefault();//para impedir la recarga de la pagina\r\n    socket.emit(\"mensaje\", nombre, mensaje);\r\n  \r\n    pruebaChange(nombre,mensaje,mensajes);\r\n    setMensaje(\"\");//cuando se envia el mensaje se borra el textArea\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <label htmlFor=\"\">Borrador</label>\r\n      <div className=\"chat\">\r\n        {mensajes.map((e, i) => (\r\n          <div key={i}>\r\n            <div>{e.nombre}</div>\r\n            <div>{e.mensaje}</div>\r\n          </div>\r\n        ))}\r\n\r\n        {/* <div ref={divRef}></div> */}\r\n\r\n      </div>\r\n\r\n      <form onSubmit={submit}>\r\n        <label htmlFor=\"\">Escribe en el borrador</label>\r\n        <div>\r\n        <textarea name=\"\"  id=\"\"  cols=\"30\"  rows=\"10\"  value={mensaje}  onChange={(e) => setMensaje(e.target.value)}></textarea></div>\r\n        <button>Escribir</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chat;\r\n","/*\r\n*  Name_file :EditWriting.js\r\n*  Description: Pagina de editar Escrito\r\n*/\r\n\r\nimport React, { Component } from 'react';\r\nimport { Link } from \"react-router-dom\";\r\n\r\n/*Importaciones del editor */\r\nimport { Editor } from \"react-draft-wysiwyg\";\r\nimport { EditorState, convertToRaw } from \"draft-js\";\r\nimport \"react-draft-wysiwyg/dist/react-draft-wysiwyg.css\";\r\nimport draftToHtml from \"draftjs-to-html\";\r\nimport { stateFromHTML } from 'draft-js-import-html';// escribe el 'html' en el editor\r\n// import EditorText from '../../TextEditor/TextEditor.js';\r\n\r\n/**Datos del usuario */\r\nimport AuthUser from '../../../services/authenticity/auth-service.js';\r\n\r\n/**Servicios del estudiante */\r\nimport StudentService from '../../../services/student/student-service.js';\r\n\r\n/*Importacion del css*/\r\nimport '../../../styles/Writing.css';\r\nimport '../../../styles/Challenge.css';\r\nimport '../../../styles/styleGeneral.css';\r\nimport '../../../styles/styleCard.css';\r\n\r\n/*Componentes de estilo Bootstrap*/\r\nimport ListGroup from 'react-bootstrap/ListGroup';\r\nimport Alert from 'react-bootstrap/Alert';\r\nimport Card from 'react-bootstrap/Card';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Modal from 'react-bootstrap/Modal';\r\n\r\nimport Chat from \"./Chat\"\r\n\r\n\r\n\r\n\r\nimport socket from \"../../../utils/Socket\";\r\n\r\nclass EditWritingTeam extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.onFileChange = this.onFileChange.bind(this);\r\n        this.state = {\r\n            imgCollection: [],//array de ficheros multimedia\r\n            contentState: null,//editor\r\n            editorState: EditorState.createEmpty(),\r\n            challenge: '',//contiene el desafio \r\n            dataMediaChallenge: [],//array de multimedia del desafio\r\n            dataMediaWriting: [],//array de multimedia del escrito\r\n            modalDeleteFile: false,\r\n            deleteFileMedia: '',//fichero multimedia del escrito que desea ser borrado\r\n            nameDeleteFileMedia: '',//nomnbre del fichero multimedia del escrito que desea ser borrado\r\n            writing: '',\r\n            log: '',\r\n            form: {\r\n                idWriter: '',\r\n                title: '',\r\n                escrito: '',\r\n            }\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        /*Obtiene el desafio seleccionado*/\r\n        StudentService.getChallenge(this.props.match.params.idChallenge)\r\n            .then(response => {\r\n                this.setState({ challenge: response[0] });\r\n                //Si es colaborativo\r\n                if (response[0].colaborativo === 2) {\r\n                    /*Obtiene equipo del estudiante correspondiente a un grupo en concreto*/\r\n                    StudentService.getTeamStudentGroup(AuthUser.getCurrentUser().id, this.props.match.params.idGroup)\r\n                        .then(response => {\r\n                            this.setState({\r\n                                form: {\r\n                                    ...this.state.form,\r\n                                    idWriter: response[0].idEquipo\r\n                                }\r\n                            });\r\n                            /*Obtiene multimedia del escrito del equipo */\r\n                            StudentService.getMultimediaWriting(this.props.match.params.idChallenge, response[0].idEquipo)\r\n                                .then(response => {\r\n                                    this.setState({ dataMediaWriting: response.data });\r\n                                }).catch(error => {\r\n                                    console.log(error.message);\r\n                                });\r\n                        }).catch(error => {\r\n                            console.log(error.message);\r\n                        })\r\n                }\r\n            }).catch(error => {\r\n                console.log(error.message);\r\n            });\r\n        /*Obtiene multimedia del desafio*/\r\n        StudentService.getMultimediaChallenge(this.props.match.params.idChallenge)\r\n            .then(response => {\r\n                this.setState({ dataMediaChallenge: response.data, });\r\n            }).catch(error => {\r\n                console.log(error.message);\r\n            });\r\n\r\n        /*Obtiene el escrito del estudiante */\r\n        StudentService.getWriting(this.props.match.params.idWriting)\r\n            .then(response => {\r\n\r\n                var contentState = stateFromHTML(response.data[0].texto);\r\n                let editorState = EditorState.createWithContent(contentState);\r\n                // this.setState({ editorState: editorState });\r\n                this.setState({\r\n                    writing: response.data[0],\r\n                    editorState: editorState,\r\n                    log: response.data[0].registro,\r\n                    form: {\r\n                        ...this.state.form,\r\n                        title: response.data[0].nombre,\r\n                        escrito: response.data[0].texto\r\n\r\n                    }\r\n                });\r\n            }).catch(error => {\r\n                console.log(error.message);\r\n            });\r\n    }\r\n\r\n    //Envia el escrito editado \r\n    editWriting = () => {\r\n\r\n        /*Edita escrito del estudiante*/\r\n        StudentService.editWritingTeam(this.props.match.params.idWriting, this.props.match.params.idGroup, this.props.match.params.idChallenge, this.state.form.idWriter, this.state.form.title, this.state.form.escrito, this.state.log, this.state.challenge.colaborativo)\r\n            .then(response => {\r\n                if (this.state.imgCollection.length > 0) {\r\n                    StudentService.sendMultimedia(this.state.imgCollection, this.state.form.idWriter, this.props.match.params.idChallenge, this.state.challenge.colaborativo)\r\n                        .then(response => {\r\n                            // window.location.href = '/student/groups';\r\n                            window.location.href = '/student';\r\n                        }).catch(error => {\r\n                            console.log(error.message);\r\n                        });\r\n                }\r\n                else {\r\n                    window.location.href = '/student';\r\n                }\r\n            })\r\n            .catch(error => {\r\n                console.log(error.message);\r\n            });\r\n    }\r\n\r\n    //Elimina el fichero multimedia del escrito\r\n    deleteFile = (writing) => {\r\n        this.closeModalDeleteFile();\r\n        var contador = 0;\r\n        var arreglo = this.state.dataMediaWriting;\r\n        arreglo.map((registro) => {\r\n            if (writing.id === registro.id) {\r\n                arreglo.splice(contador, 1);\r\n            }\r\n            contador++;\r\n        });\r\n        this.setState({ dataMediaWriting: arreglo });\r\n        StudentService.deleteMultimedia(writing.id, writing.ruta)\r\n            .then(response => {\r\n            })\r\n            .catch(error => {\r\n                console.log(error.message);\r\n            });\r\n    }\r\n\r\n    //Carga los ficheros multimedia del escrito \r\n    onFileChange(e) {\r\n        this.setState({ imgCollection: e.target.files });\r\n    }\r\n\r\n\r\n\r\n    //Editor -->convierte la descripción del escrito a html y lo guarda en el form\r\n    editorChange = () => {\r\n        this.setState({\r\n            form: {\r\n                ...this.state.form,\r\n                escrito: draftToHtml(convertToRaw(this.state.editorState.getCurrentContent()))\r\n            }\r\n        });\r\n    };\r\n\r\n    /**Editor -->almacena el estado del editor(cada vez que se edita el editor)*/\r\n    onEditorStateChange = (editorState) => {\r\n        this.setState({\r\n            editorState\r\n        });\r\n    };\r\n\r\n    /**Editor-->almacena todo el contenido que hay en el editor */\r\n    onContentStateChange = contentState => {\r\n        this.setState({\r\n            contentState\r\n        });\r\n    };\r\n\r\n    //Obtiene el nombre de los ficheros multimedia desafio/escrito\r\n    showTitle = (challenge) => {\r\n        var str = challenge.ruta;\r\n        var res = str.split(\"/\");\r\n        return res[8];\r\n    }\r\n\r\n    //Muestra modal de confirmación para eliminar fichero multimedia\r\n    askDeleteFile = (writing) => {\r\n        var str = writing.ruta;\r\n        var res = str.split(\"/\");\r\n        this.setState({\r\n            nameDeleteFileMedia: res[8],\r\n            deleteFileMedia: writing\r\n        });\r\n        this.showModalDeleteFile();\r\n    }\r\n\r\n    //Muestra el modal de eliminar fichero\r\n    showModalDeleteFile = () => {\r\n        this.setState({\r\n            modalDeleteFile: true,\r\n        });\r\n    };\r\n\r\n    //Cierra el modal de eliminar fichero\r\n    closeModalDeleteFile = () => {\r\n        this.setState({ modalDeleteFile: false });\r\n    };\r\n\r\n    //actualiza el titulo del escrito\r\n    onChangeWritingName = e => {\r\n        this.setState({\r\n            form: {\r\n                ...this.state.form,\r\n                title: e.target.value\r\n            }\r\n        });\r\n    }\r\n\r\n    //Devuelve una cadena de tipo de desafio\r\n    showCollaborative = () => {\r\n        if (this.state.challenge.colaborativo === 1) {\r\n            return \"Individual\"\r\n        }\r\n        else {\r\n            return \"Colaborativo\"\r\n        }\r\n    }\r\n\r\n    /* */\r\n    pruebaChange = (nombre, mensaje, mensajes) => {\r\n        // mensajes.push([nombre,mensaje])\r\n        // let dataMessage = { nombre: nombre, mensaje: mensaje };\r\n        // mensajes.push(dataMessage)\r\n\r\n        // mensajes.map((e, i) => (\r\n        //     this.setState({\r\n        //         // log: mensajes\r\n        //         log: this.state.log + \"<p>\" + \"<strong>\" + e.nombre + \"</strong>\" + \"<br/>\" + e.mensaje + \"<br/>\" + \"</p>\"\r\n        //     })\r\n        // ))\r\n\r\n        //   this.setState({\r\n        //     log: this.state.log + \"<p>\"+ \"<strong>\"+ nombre + \"</strong>\"+\"<br/>\" + mensaje + \"<br/>\" + \"</p>\"\r\n        // }) \r\n        \r\n        for (var i=0; i<mensajes.length; i++){\r\n                 this.setState({\r\n                // log: mensajes\r\n                log: this.state.log + \"<p>\" + \"<strong>\" + mensajes[i].nombre + \"</strong>\" + \"<br/>\" + mensajes[i].mensaje + \"<br/>\" + \"</p>\"\r\n            })\r\n        }\r\n    };\r\n\r\n    /*Dibuja la pagina */\r\n    render() {\r\n        const { dataMediaChallenge, dataMediaWriting } = this.state;\r\n        // const { formErrors } = this.state;\r\n        return (\r\n            <>\r\n                <div className=\"container\">\r\n                    <label className='form-label'>Editar Escrito {this.showCollaborative()}</label>\r\n                    <Card className=\"card-edit\">\r\n                        <Card.Body>\r\n                            <div className=\"row-edit\">\r\n                                <h2 > {this.state.challenge.titulo} </h2>\r\n                            </div>\r\n                            <div className=\"row-edit\">\r\n                                <label className='form-label'>Categoria</label>\r\n                                <p>{this.state.challenge.nombre}</p>\r\n                            </div>\r\n\r\n                            <div className=\"row-edit\">\r\n                                <label className='form-label'>Leer la descripción del Desafío</label>\r\n                                <div className=\"challenge-inputs\" dangerouslySetInnerHTML={{ __html: this.state.challenge.descripcion }}></div>\r\n                            </div>\r\n\r\n                            <div className=\"row-edit\">\r\n                                <label className='form-label'>Ficheros Multimedia: </label>\r\n                                <table>\r\n                                    <tbody>\r\n                                        <div style={{ width: \"500px\", height: \"250px\", overflow: \"scroll\", behavior: \"smooth\" }}>\r\n                                            {dataMediaChallenge.map((challenge) => (\r\n                                                <tr key={challenge.id}>\r\n                                                    <td>{this.showTitle(challenge)}</td>\r\n                                                    <td><Button onClick={() => window.open(challenge.ruta)}>Ver</Button></td>\r\n                                                </tr>\r\n                                            ))}\r\n                                        </div>\r\n                                    </tbody>\r\n                                </table>\r\n                            </div>\r\n\r\n                            <div className=\"form-inputs\">\r\n                                <label className='form-label'>Titulo</label>\r\n                                <div>\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        name=\"title\"\r\n                                        placeholder=\"Escribe el título\"\r\n                                        value={this.state.form.title}\r\n                                        // onChange={this.handleChange}\r\n                                        onChange={this.onChangeWritingName}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"row-edit\">\r\n                                <label className='form-label'>Descripción </label>\r\n                                <Editor\r\n                                    editorState={this.state.editorState}\r\n                                    toolbarClassName=\"toolbarClassName1\"\r\n                                    wrapperClassName=\"wrapperClassName1\"\r\n                                    editorClassName=\"editorClassName1\"\r\n                                    onEditorStateChange={this.onEditorStateChange}\r\n                                    onContentStateChange={this.onContentStateChange}\r\n                                    onChange={this.editorChange}\r\n                                />\r\n                                {/* <EditorText onEditorStateChange={this.onEditorStateChange} onContentStateChange={this.onContentStateChange}  onChange={this.editorChange} param={this.state.editorState}/> */}\r\n                            </div>\r\n\r\n                            <div class=\"row-edit\">\r\n                                <label className='form-label'>Puedes agregar un fichero multimedia si lo deseas (imagen,video o audio): </label>\r\n                                <div className=\"form\">\r\n                                    <input type=\"file\" name=\"imgCollection\" onChange={this.onFileChange} multiple />\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div class=\"row-edit\">\r\n                                <label className='form-label' >Ficheros Multimedia: </label>\r\n                                <table>\r\n                                    <tbody  >\r\n                                        <div style={{ width: \"500px\", height: \"250px\", overflow: \"scroll\", behavior: \"smooth\" }}>\r\n                                            {dataMediaWriting.map((writing) => (\r\n                                                <tr key={writing.id}>\r\n                                                    <td>{this.showTitle(writing)}</td>\r\n                                                    <td><Button onClick={() => window.open(writing.ruta)}>Ver</Button></td>\r\n                                                    <td><Button variant=\"danger\" onClick={() => this.askDeleteFile(writing)}>Eliminar</Button></td>\r\n                                                </tr>\r\n                                            ))}\r\n                                        </div>\r\n                                    </tbody>\r\n                                </table>\r\n                            </div>\r\n\r\n                            <div class=\"row-edit\">\r\n                                <Chat pruebaChange={this.pruebaChange} nombre={AuthUser.getCurrentUser().username} />\r\n                                {/* <Chat  nombre={this.state.manual} /> */}\r\n                            </div>\r\n\r\n\r\n                            <div className=\"form-select\">\r\n                                <Button text='enviar' onClick={() => this.editWriting()}> Guardar  </Button>\r\n                            </div>\r\n                            <div className=\"form-select\">\r\n                                <Button onClick={() => window.location.href = '/student'}>Cancelar</Button>\r\n                            </div>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </div>\r\n\r\n                <Modal show={this.state.modalDeleteFile}>\r\n                    <Modal.Header>\r\n                        <div><h5>¿Estás seguro de eliminar {this.state.nameDeleteFileMedia}?</h5> </div>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        {/* <FormGroup>\r\n                        </FormGroup> */}\r\n                    </Modal.Body>\r\n\r\n                    <Modal.Footer>\r\n                        <Button onClick={() => this.deleteFile(this.state.deleteFileMedia)}>Aceptar</Button>\r\n                        <Button variant=\"danger\" onClick={() => this.closeModalDeleteFile()}>Cancelar</Button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n            </>\r\n        );\r\n    }\r\n}\r\nexport default EditWritingTeam;","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport StudentService from '../../../services/student/student-service.js';\r\n\r\n//Fecha y Hora\r\nimport moment from 'moment';\r\n\r\nimport Button from 'react-bootstrap/Button';\r\nimport Table from \"react-bootstrap/Table\";\r\nimport Card from 'react-bootstrap/Card';\r\n\r\n//Estilos\r\nimport '../../../styles/styleGeneral.css';\r\nimport '../../../styles/styleCard.css';\r\n\r\n\r\nclass VersionsfromWriting extends Component\r\n{\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n        this.state = {\r\n            data: [],\r\n            challenge: '',\r\n            dataTeam: [],\r\n            challenge2: '',\r\n            colaborativo: false,\r\n        }\r\n    \r\n    }\r\n\r\n    componentDidMount() {\r\n        // obtiene las versiones del escrito de un estudiante\r\n        StudentService.getVersionsfromWriting(this.props.match.params.idWriting)\r\n            .then(response => {\r\n                if (response.length !== 0) {\r\n                    this.setState({ data: response.data, challenge: response.data[0].nombreDesafio });\r\n                }\r\n            })\r\n            .catch(error => {\r\n                console.log(error.message);\r\n            })\r\n\r\n        // obtiene las versiones del escrito de un equipo\r\n        StudentService.getVersionsfromWritingTeam(this.props.match.params.idWriting)\r\n            .then(response => {\r\n                this.setState({ dataTeam: response, challenge2: response[0].nombreDesafio, colaborativo: true });\r\n            })\r\n            .catch(error => {\r\n                console.log(error.message);\r\n            })\r\n        \r\n    }\r\n\r\n    //Devuelve el tipo de desafio\r\n    showCollaborative = () => {\r\n        if (this.state.challenge.colaborativo === 1) {\r\n            return \"Individual\"\r\n        }\r\n        else {\r\n            return \"Colaborativo\"\r\n        }\r\n    }\r\n\r\n    /*Dibuja la pagina  */\r\n    render() {\r\n        let formatedDate;\r\n        let { data, challenge, dataTeam, colaborativo } = this.state;\r\n        return (\r\n            <div class=\"container\">\r\n                <Card className=\"card-long\">\r\n                    <Card.Body>\r\n                        {\r\n                            <>\r\n                            <div className={\"row-edit\"}>\r\n                                <label className={\"form-label\"} htmlFor=\"\">Lista de versiones</label>\r\n                            </div>\r\n                            <hr />\r\n                            <ul className={\"flex-row\"}>\r\n                                <li className={\"flex-item-form\"}>\r\n                                    <label className='form-label'>Desafío</label>\r\n                                    {colaborativo === false ? <h5> {challenge} </h5> : <h5>{this.state.challenge2}</h5>}\r\n                                </li>\r\n                            </ul>\r\n                            <div className=\"row-edit\">\r\n                                <Table bordered hover responsive>\r\n                                    <thead>\r\n                                        <tr>\r\n                                            <th> Versión</th>\r\n                                            <th> Título</th>\r\n                                            {colaborativo === false ? <th>Estudiante</th> : <th>Equipo</th>}\r\n                                            <th>Fecha de modificación</th>\r\n                                            <th>Hora</th>\r\n                                            <th>Acciones</th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        {\r\n                                        colaborativo === false ?\r\n                                        (\r\n                                            data.map((writing) => (\r\n                                                < tr key={writing.idEscrito}>\r\n                                                    <td>{writing.idVersion}</td>\r\n                                                    <td>{writing.nombreEscrito}</td>\r\n                                                    <td>{writing.nombre} {writing.apellidos}</td>\r\n                                                    <td >{formatedDate = moment(writing.fecha).format('DD/MM/YYYY')}</td>\r\n                                                    <td >{formatedDate = moment(writing.fecha).format('LT')}</td>\r\n                                                    <td >\r\n                                                        <Link to={`/student/editVersionfromWriting/${writing.idGrupo}/${writing.idDesafio}/${writing.idEscrito}/${writing.idVersion}`}>\r\n                                                            <img src=\"/edit.png\" alt=\"\"/>\r\n                                                            <Button variant=\"link\">\r\n                                                                Editar\r\n                                                            </Button>\r\n                                                        </Link>\r\n                                                    </td>\r\n                                                </tr>\r\n                                            ))\r\n                                        ) : \r\n                                        (\r\n                                            dataTeam.map((writingTeam) => (\r\n                                                < tr key={writingTeam.idEscrito}>\r\n                                                    <td>{writingTeam.idVersion}</td>\r\n                                                    <td>{writingTeam.nombreEscrito}</td>\r\n                                                    <td>{writingTeam.nombreEquipo }</td>\r\n                                                    <td >{formatedDate = moment(writingTeam.fecha).format('DD/MM/YYYY')}</td>\r\n                                                    <td >{formatedDate = moment(writingTeam.fecha).format('LT')}</td>\r\n                                                    <td >\r\n                                                        <Link to={`/student/editVersionfromWriting/${writingTeam.idGrupo}/${writingTeam.idDesafio}/${writingTeam.idEscrito}/${writingTeam.idVersion}`}>\r\n                                                            <img src=\"/edit.png\" alt=\"\"/>\r\n                                                            <Button variant=\"link\">\r\n                                                                Editar\r\n                                                            </Button>\r\n                                                        </Link>\r\n                                                    </td>\r\n                                                </tr>\r\n                                            ))\r\n                                        )\r\n                                        }\r\n                                    </tbody>\r\n                                </Table>\r\n                            </div>\r\n                            </>\r\n                        }\r\n\r\n                    </Card.Body>\r\n                </Card>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default VersionsfromWriting;\r\n","/*\r\n*  Name_file :EditWriting.js\r\n*  Description: Pagina de editar Escrito\r\n*/\r\nimport React, { Component } from 'react';\r\nimport { Link } from \"react-router-dom\";\r\n\r\n/*Importaciones del editor */\r\nimport { Editor } from \"react-draft-wysiwyg\";\r\nimport { EditorState, convertToRaw } from \"draft-js\";\r\nimport \"react-draft-wysiwyg/dist/react-draft-wysiwyg.css\";\r\nimport draftToHtml from \"draftjs-to-html\";\r\nimport { stateFromHTML } from 'draft-js-import-html';// escribe el 'html' en el editor\r\n// import EditorText from '../../TextEditor/TextEditor.js';\r\n\r\n/**Datos del usuario */\r\nimport AuthUser from '../../../services/authenticity/auth-service.js';\r\n\r\n/**Servicios del estudiante */\r\nimport StudentService from '../../../services/student/student-service.js';\r\n\r\n/*Importacion del css*/\r\nimport '../../../styles/Writing.css';\r\nimport '../../../styles/Challenge.css';\r\nimport '../../../styles/styleGeneral.css';\r\nimport '../../../styles/styleCard.css';\r\n\r\n/*Componentes de estilo Bootstrap*/\r\nimport ListGroup from 'react-bootstrap/ListGroup';\r\nimport Alert from 'react-bootstrap/Alert';\r\nimport Card from 'react-bootstrap/Card';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Table from \"react-bootstrap/Table\";\r\nimport Modal from 'react-bootstrap/Modal';\r\n\r\n\r\n\r\nclass EditVersionfromWriting extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.onFileChange = this.onFileChange.bind(this);\r\n        this.state = {\r\n            imgCollection: [],//array de ficheros multimedia\r\n            contentState: null,//editor\r\n            editorState: EditorState.createEmpty(),\r\n            challenge: '',//contiene el desafio \r\n            dataMediaChallenge: [],//array de multimedia del desafio\r\n            dataMediaWriting: [],//array de multimedia del escrito\r\n            modalDeleteFile: false,\r\n            deleteFileMedia: '',//fichero multimedia del escrito que desea ser borrado\r\n            nameDeleteFileMedia: '',//nombre del fichero multimedia del escrito que desea ser borrado\r\n            modalEditWriting: false,\r\n            writing: '',\r\n            formErrors: {\r\n                title: '',\r\n                description: '',\r\n            },\r\n            form: {\r\n                idWriter: '',\r\n                title: '',\r\n                escrito: ''\r\n            },\r\n            modalInsertVersion: false,\r\n            maxIdVersion: -1\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        /*Obtiene el desafio seleccionado*/\r\n        StudentService.getChallenge(this.props.match.params.idChallenge)\r\n            .then(response => {\r\n                this.setState({ challenge: response[0] });\r\n                //Si es colaborativo\r\n                if (response[0].colaborativo === 2) {\r\n                    /*Obtiene equipo del estudiante correspondiente a un grupo en concreto*/\r\n                    StudentService.getTeamStudentGroup(AuthUser.getCurrentUser().id, this.props.match.params.idGroup)\r\n                        .then(response => {\r\n                            this.setState({ form: { ...this.state.form, idWriter: response[0].idEquipo } });\r\n                            /*Obtiene multimedia del escrito del equipo */\r\n                            StudentService.getMultimediaWriting(this.props.match.params.idChallenge, response[0].idEquipo/*, this.props.match.params.idVersion*/)\r\n                                .then(response => {\r\n                                    this.setState({ dataMediaWriting: response.data });\r\n                                }).catch(error => {\r\n                                    console.log(error.message);\r\n                                });\r\n                        }).catch(error => {\r\n                            console.log(error.message);\r\n                        })\r\n                }\r\n                else {//si es individual\r\n                    this.setState({\r\n                        form: {\r\n                            ...this.state.form,\r\n                            idWriter: AuthUser.getCurrentUser().id\r\n                        }\r\n                    });\r\n\r\n                    /*Obtiene multimedia del escrito del estudiante */\r\n                    StudentService.getMultimediaWriting(this.props.match.params.idChallenge, AuthUser.getCurrentUser().id/*, this.props.match.params.idVersion*/)\r\n                        .then(response => {\r\n                            this.setState({ dataMediaWriting: response.data });\r\n                        }).catch(error => {\r\n                            console.log(error.message);\r\n                        });\r\n                }\r\n\r\n            }).catch(error => {\r\n                console.log(error.message);\r\n            });\r\n\r\n        /*Obtiene multimedia del desafio*/\r\n        StudentService.getMultimediaChallenge(this.props.match.params.idChallenge)\r\n            .then(response => {\r\n                this.setState({ dataMediaChallenge: response.data, });\r\n            }).catch(error => {\r\n                console.log(error.message);\r\n            });\r\n\r\n\r\n        // Obtiene el escrito\r\n        StudentService.getChallenge(this.props.match.params.idChallenge)\r\n        .then(response => {\r\n            this.setState({ challenge: response[0] });\r\n            //Si es individual\r\n            if (response[0].colaborativo === 1)\r\n            {\r\n                /*Obtiene el escrito de un estudiante con su correspondiente versión */\r\n                StudentService.getVersionsfromWriting(this.props.match.params.idWriting)\r\n                .then(response => {\r\n                    var contentState = stateFromHTML(response.data[this.props.match.params.idVersion - 1].texto);\r\n                    let editorState = EditorState.createWithContent(contentState);\r\n                    // this.setState({ editorState: editorState });\r\n                    this.setState({\r\n                        writing: response.data[this.props.match.params.idVersion - 1],\r\n                        editorState: editorState,\r\n                        form: {\r\n                            ...this.state.form,\r\n                            title: response.data[this.props.match.params.idVersion - 1].nombreEscrito,\r\n                            escrito: response.data[this.props.match.params.idVersion - 1].texto\r\n                        }\r\n                    });\r\n                }).catch(error => {\r\n                    console.log(error.message);\r\n                });\r\n            }\r\n            // Es colaborativo\r\n            else\r\n            {\r\n                 /*Obtiene el escrito de un equipo con su correspondiente versión */\r\n                 StudentService.getVersionsfromWritingTeam(this.props.match.params.idWriting)\r\n                 .then(response => {\r\n                     var contentState = stateFromHTML(response[this.props.match.params.idVersion - 1].texto);\r\n                     let editorState = EditorState.createWithContent(contentState);\r\n                     // this.setState({ editorState: editorState });\r\n                     this.setState({\r\n                         writing: response[this.props.match.params.idVersion - 1],\r\n                         editorState: editorState,\r\n                         form: {\r\n                             ...this.state.form,\r\n                             title: response[this.props.match.params.idVersion - 1].nombreEscrito,\r\n                             escrito: response[this.props.match.params.idVersion - 1].texto\r\n                         }\r\n                     });\r\n                 }).catch(error => {\r\n                     console.log(error.message);\r\n                 });\r\n            }\r\n            \r\n        }).catch(error => {\r\n            console.log(error.message);\r\n        });\r\n\r\n\r\n        /* Devuelve la última versión de un escrito, es decir, el mayor id */\r\n        StudentService.getHighestidVersionfromWriting(this.props.match.params.idWriting)\r\n        .then(response => {\r\n            this.setState({ maxIdVersion: response[0].maxId });\r\n        }).catch(error => {\r\n            console.log(error.message);\r\n        });\r\n    }\r\n\r\n    \r\n    // Envía la nueva versión del escrito\r\n    insertVersion = () => {\r\n        this.onModalInsertVersion(false)\r\n        /*Añade una nueva versión de un escrito */\r\n        StudentService.insertVersionfromWriting(this.props.match.params.idWriting, this.state.maxIdVersion + 1, this.props.match.params.idChallenge, this.state.form.idWriter, this.state.form.title, this.state.form.escrito, this.state.challenge.colaborativo)\r\n        .then(response => {\r\n            // Edito el escrito en la tabla escrito con los datos de la última versión\r\n            StudentService.editWriting(this.props.match.params.idWriting, this.props.match.params.idGroup, this.props.match.params.idChallenge, this.state.form.idWriter, this.state.form.title, this.state.form.escrito, this.state.challenge.colaborativo)\r\n            .then(response => {\r\n                if (this.state.imgCollection.length > 0) {\r\n                    StudentService.sendMultimedia(this.state.imgCollection, this.state.form.idWriter, this.props.match.params.idChallenge, this.state.challenge.colaborativo/*, this.state.maxIdVersion + 1*/)\r\n                        .then(response => {\r\n                            window.location.href = `/student/versionsWriting/${this.props.match.params.idGroup}/${this.props.match.params.idChallenge}/${this.props.match.params.idWriting}`;\r\n                        }).catch(error => {\r\n                            console.log(error.message);\r\n                        });\r\n                }\r\n                else {\r\n                    window.location.href = `/student/versionsWriting/${this.props.match.params.idGroup}/${this.props.match.params.idChallenge}/${this.props.match.params.idWriting}`;\r\n                }\r\n            })\r\n            .catch(error => {\r\n                console.log(error.message);\r\n            });\r\n        })\r\n        .catch(error => {\r\n            console.log(error.message);\r\n        });\r\n    }\r\n\r\n    onModalInsertVersion = (modal) => {\r\n        this.setState({\r\n            modalInsertVersion: modal,\r\n        });\r\n    };\r\n\r\n    //Elimina el fichero multimedia del escrito\r\n    deleteFile = (writing) => {\r\n        this.closeModalDeleteFile();\r\n        var contador = 0;\r\n        var arreglo = this.state.dataMediaWriting;\r\n        arreglo.map((registro) => {\r\n            if (writing.id === registro.id) {\r\n                arreglo.splice(contador, 1);\r\n            }\r\n            contador++;\r\n        });\r\n        this.setState({ dataMediaWriting: arreglo });\r\n\r\n        StudentService.deleteMultimedia(writing.id, writing.ruta)\r\n            .then(response => {\r\n            })\r\n            .catch(error => {\r\n                console.log(error.message);\r\n            });\r\n    }\r\n\r\n    //Carga los ficheros multimedia del escrito \r\n    onFileChange(e) {\r\n        this.setState({ imgCollection: e.target.files });\r\n    }\r\n\r\n    //convierte la descripción del escrito a html y lo guarda en el form\r\n    editorChange = () => {\r\n        this.setState({\r\n            form: {\r\n                ...this.state.form,\r\n                escrito: draftToHtml(convertToRaw(this.state.editorState.getCurrentContent()))\r\n            }\r\n        });\r\n    };\r\n\r\n    onEditorStateChange = (editorState) => {\r\n        this.setState({\r\n            editorState\r\n        });\r\n    };\r\n\r\n    onContentStateChange = contentState => {\r\n        this.setState({\r\n            contentState\r\n        });\r\n    };\r\n\r\n    //Obtiene el nombre de los ficheros multimedia desafio/escrito\r\n    showTitle = (challenge) => {\r\n        var str = challenge.ruta;\r\n        var res = str.split(\"/\");\r\n        return res[8];\r\n    }\r\n\r\n    //Muestra modal de confirmación para eliminar fichero multimedia\r\n    askDeleteFile = (writing) => {\r\n        var str = writing.ruta;\r\n        var res = str.split(\"/\");\r\n        this.setState({\r\n            nameDeleteFileMedia: res[8],\r\n            deleteFileMedia: writing\r\n        });\r\n        this.showModalDeleteFile();\r\n    }\r\n\r\n    //Muestra el modal de eliminar fichero\r\n    showModalDeleteFile = () => {\r\n        this.setState({\r\n            modalDeleteFile: true,\r\n        });\r\n    };\r\n\r\n    //Cierra el modal de eliminar fichero\r\n    closeModalDeleteFile = () => {\r\n        this.setState({ modalDeleteFile: false });\r\n    };\r\n\r\n    onChangeWritingName = e => {\r\n        e.preventDefault();\r\n        const { name, value } = e.target;\r\n        let formErrors = { ...this.state.formErrors };\r\n        switch (name) {\r\n            case \"title\":\r\n                formErrors.title =\r\n                    value.length < 1 ? \"Campo obligatorio requerido\" : \"\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            formErrors,\r\n            form: {\r\n                ...this.state.form,\r\n                title: e.target.value\r\n            }\r\n        });\r\n    }\r\n\r\n    //Devuelve el tipo de desafio\r\n    showCollaborative = () => {\r\n        if (this.state.challenge.colaborativo === 1) {\r\n            return \"Individual\"\r\n        }\r\n        else {\r\n            return \"Colaborativo\"\r\n        }\r\n    }\r\n\r\n    // //Desactiva boton\r\n    // disabledButton = () => {\r\n    //     if (this.state.form.title.length === 0  || this.state.form.escrito.length === 0 || this.state.form.escrito === \"<p></p>\\n\") {\r\n    //         return true;//desactivar\r\n    //     }\r\n    //     else\r\n    //         return false;\r\n    // };\r\n\r\n    onModalEditWriting = (modal) => {\r\n        this.setState({\r\n            modalEditWriting: modal,\r\n        });\r\n    };\r\n\r\n    infoWriting = (data) => {\r\n        this.state.data.map(function(writing){\r\n            return `${writing.idGrupo}/${writing.idDesafio}/${writing.id}`;\r\n       })\r\n    }\r\n\r\n    /*Dibuja la pagina */\r\n    render() {\r\n        const { editorState, dataMediaChallenge, dataMediaWriting, formErrors } = this.state;\r\n        return (\r\n            <div className=\"container\">\r\n                <Card className=\"card-edit\">\r\n                    <Card.Body>\r\n                        <div className={\"row-edit\"}>\r\n                            <div className={\"section-title\"}>\r\n                                <h2>Editar Escrito {this.showCollaborative()}</h2>\r\n                            </div>\r\n                        </div>\r\n                        <div className={\"row-edit\"}>\r\n                            <label className={\"form-label\"}>Detalles del desafío</label>\r\n                        </div>\r\n                        <hr />\r\n                        <ul className={\"flex-row\"}>\r\n                            <li className={\"flex-item-form\"}>\r\n                                <label className='form-label'>Nombre</label>\r\n                                <h5> {this.state.challenge.titulo} </h5>\r\n                            </li>\r\n                            <li className={\"flex-item-form\"}>\r\n                                <label className='form-label'>Categoria</label>\r\n                                <h5>{this.state.challenge.nombre}</h5>\r\n                            </li>\r\n                        </ul>\r\n                        <div className=\"row-edit\">\r\n                            <label className='form-label'>Leer la descripción del Desafío</label>\r\n                            <div className=\"challenge-inputs\"\r\n                                dangerouslySetInnerHTML={{ __html: this.state.challenge.descripcion }}>\r\n\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row-edit\">\r\n                            <label className='form-label'>Ficheros Multimedia: </label>\r\n\r\n                            {dataMediaChallenge.length > 0 ? (\r\n\r\n                                <table>\r\n                                    <tbody>\r\n                                        <div className={\"table-multi\"}>\r\n                                            {dataMediaChallenge.map((challenge) => (\r\n                                                <tr key={challenge.id}>\r\n                                                    <td>{this.showTitle(challenge)}</td>\r\n                                                    <td>\r\n                                                        <div className={\"form-button\"}>\r\n                                                            <Button onClick={() => window.open(challenge.ruta)}>Ver</Button>\r\n                                                        </div>\r\n                                                    </td>\r\n                                                </tr>\r\n                                            ))}\r\n                                        </div>\r\n                                    </tbody>\r\n                                </table>\r\n                            ) : (\r\n                                <div className=\"row-edit\">\r\n                                    <p>No hay ficheros para mostrar</p>\r\n                                </div>\r\n                            )}\r\n                        </div>\r\n                        <br />\r\n                        <div className={\"row-edit\"}>\r\n                            <label className={\"form-label\"}>Espacio de escritura</label>\r\n                        </div>\r\n                        <hr />\r\n                        <div className={\"row-edit\"}>\r\n                            <div className=\"form-inputs\">\r\n                                <label className='form-label'>Titulo</label>\r\n                                <div>\r\n                                    <input\r\n                                        className={formErrors.title.length > 0 ? \"error\" : \"form-input\"}\r\n                                        type=\"text\"\r\n                                        name=\"title\"\r\n                                        placeholder=\"Escribe el título\"\r\n                                        value={this.state.form.title}\r\n                                        // onChange={this.handleChange}\r\n                                        onChange={this.onChangeWritingName}\r\n                                    />\r\n                                    {formErrors.title.length > 0 && (\r\n                                        <span className=\"alert-login\">{formErrors.title}</span>\r\n                                    )}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row-edit\">\r\n                            <label className='form-label' >Escribe aquí</label>\r\n                            <Editor\r\n                                editorState={editorState}\r\n                                // toolbarClassName=\"toolbarClassName\"\r\n                                // // wrapperClassName=\"demo-wrapper\"\r\n                                // // editorClassName=\"border-edit\"\r\n                                wrapperClassName=\"wrapperClassName1\"\r\n                                editorClassName=\"editorClassName1\"\r\n                                toolbarClassName=\"toolbarClassName1\"\r\n                                onEditorStateChange={this.onEditorStateChange}\r\n                                onContentStateChange={this.onContentStateChange}\r\n                                // onChange={this.editorChange}\r\n\r\n                                onChange={\r\n                                    (event, editor) => {\r\n                                        let formErrors = { ...this.state.formErrors };\r\n                                        if (!editorState.getCurrentContent().hasText()) {\r\n                                            formErrors.description = \"Campo texto vacío\";\r\n                                        }\r\n                                        else {\r\n                                            formErrors.description = \"\";\r\n                                        }\r\n                                        this.setState({\r\n                                            formErrors,\r\n                                            form: {\r\n                                                ...this.state.form,\r\n                                                escrito: draftToHtml(convertToRaw(this.state.editorState.getCurrentContent()))\r\n                                            }\r\n                                        });\r\n                                    }\r\n                                }\r\n                                className={formErrors.description.length > 0 ? \"error\" : \"form-control\"}\r\n                            />\r\n                            {formErrors.description.length > 0 && (\r\n                                <span className=\"alert-login\">{formErrors.description}</span>\r\n                            )}\r\n\r\n                        </div>\r\n                        <br />\r\n                        <div class=\"row-edit\">\r\n                            <label className='form-label'>Puedes agregar un fichero multimedia si lo deseas (imagen,video o audio): </label>\r\n                            <div className=\"form\">\r\n                                <input type=\"file\" name=\"imgCollection\" onChange={this.onFileChange} multiple />\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div class=\"row-edit\">\r\n                            <label className='form-label'>Ficheros Multimedia</label>\r\n                            {dataMediaWriting.length > 0 ? (\r\n                                <table>\r\n                                    <tbody>\r\n                                        <div className={\"table-multi\"}>\r\n                                            {dataMediaWriting.map((writing) => (\r\n                                                <tr key={writing.id}>\r\n                                                    <td>{this.showTitle(writing)}</td>\r\n                                                    <td>\r\n                                                        <div className=\"form-button\">\r\n                                                            <Button onClick={() => window.open(writing.ruta)}>Ver</Button>\r\n                                                        </div>\r\n                                                    </td>\r\n                                                    <td>\r\n                                                        <div className=\"form-button\">\r\n                                                            <Button variant=\"danger\" onClick={() => this.askDeleteFile(writing)}>Eliminar</Button>\r\n                                                        </div>\r\n                                                    </td>\r\n                                                </tr>\r\n                                            ))}\r\n                                        </div>\r\n                                    </tbody>\r\n                                </table>\r\n                            ) : (\r\n                                <div className=\"row-edit\">\r\n                                    <p>No hay ficheros para mostrar</p>\r\n                                </div>\r\n                            )}\r\n                        </div>\r\n                        <br />\r\n\r\n                        <div className={\"row-edit\"}>\r\n                            <div className=\"form-button\">\r\n                                <Button text='enviar' onClick={() => this.onModalInsertVersion(true)} > Guardar como escrito actual </Button>\r\n                            </div>\r\n                            <div className=\"form-button\">\r\n                                <Button onClick={() => window.location.href = `/student/versionsWriting/${this.props.match.params.idGroup}/${this.props.match.params.idChallenge}/${this.props.match.params.idWriting}`}>Cancelar</Button>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </Card.Body>\r\n                </Card>\r\n\r\n                <Modal show={this.state.modalDeleteFile}>\r\n                    <Modal.Header>\r\n                        <div><h5>¿Seguro que desea eliminar {this.state.nameDeleteFileMedia}?</h5> </div>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        {/* <FormGroup>\r\n                        </FormGroup> */}\r\n                    </Modal.Body>\r\n\r\n                    <Modal.Footer>\r\n                        <Button onClick={() => this.deleteFile(this.state.deleteFileMedia)}>Aceptar</Button>\r\n                        <Button variant=\"danger\" onClick={() => this.closeModalDeleteFile()}>Cancelar</Button>\r\n                    </Modal.Footer>\r\n                </Modal>          \r\n\r\n                <Modal show={this.state.modalInsertVersion}>\r\n                    <Modal.Header>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                    <p> ¿Deseas guardar los cambios?</p>\r\n                    </Modal.Body>\r\n\r\n                    <Modal.Footer>\r\n                        <Button onClick={() => this.insertVersion()}>Aceptar</Button>\r\n                        <Button variant=\"danger\" onClick={() => this.onModalInsertVersion(false)}>Cancelar</Button>\r\n                    </Modal.Footer>\r\n                </Modal>  \r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default EditVersionfromWriting;","import React, { Component, useState } from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport StudentService from '../../../services/student/student-service.js';\r\nimport AuthUser from '../../../services/authenticity/auth-service.js';\r\n\r\nimport Dropdown from 'react-bootstrap/Dropdown';\r\nimport DropdownMenu from 'react-bootstrap/DropdownMenu';\r\nimport DropdownItem from 'react-bootstrap/DropdownItem';\r\nimport DropdownToggle from 'react-bootstrap/DropdownToggle';\r\nimport FormControl from 'react-bootstrap/FormControl';\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport Card from 'react-bootstrap/Card';\r\nimport Icon from '@material-ui/core/Icon';\r\nimport ExpandMoreRoundedIcon from '@material-ui/icons/ExpandMoreRounded';\r\nimport AdminService from '../../../services/admin/adminService.js';\r\nimport Alert from \"react-bootstrap/Alert\";\r\nimport { Tab, Tabs, TabList, TabPanel } from 'react-tabs';\r\nimport 'react-tabs/style/react-tabs.css';\r\nimport Accordion from 'react-bootstrap/Accordion';\r\n\r\n//Estilos\r\n import '../../../styles/styleCard.css';\r\n import '../../../styles/styleGeneral.css';\r\n import '../../../styles/styleButton.css';\r\n\r\n const CustomToggle = React.forwardRef(({ children, onClick }, ref) => (\r\n    <a\r\n      href=\"\"\r\n      ref={ref}\r\n      onClick={(e) => {\r\n        e.preventDefault();\r\n        onClick(e);\r\n      }}\r\n    >\r\n      {children}\r\n      {<Icon><ExpandMoreRoundedIcon></ExpandMoreRoundedIcon></Icon>}\r\n    </a>\r\n  ));\r\n  \r\n  const CustomMenu = React.forwardRef(\r\n    ({ children, style, className, 'aria-labelledby': labeledBy }, ref) => {\r\n      const [value, setValue] = useState('');\r\n  \r\n      return (\r\n        <div\r\n          ref={ref}\r\n          style={style}\r\n          className={className}\r\n          aria-labelledby={labeledBy}\r\n        >\r\n          <FormControl\r\n            autoFocus\r\n            className=\"mx-3 my-2 w-auto\"\r\n            placeholder=\"Buscar grupo...\"\r\n            onChange={(e) => setValue(e.target.value)}\r\n            value={value}\r\n          />\r\n          <ul className=\"list-unstyled\">\r\n            {React.Children.toArray(children).filter(\r\n              (child) =>\r\n                !value || child.props.children.toLowerCase().startsWith(value) || child.props.children.toUpperCase().startsWith(value),\r\n            )}\r\n          </ul>\r\n        </div>\r\n      );\r\n    },\r\n  );\r\n\r\n\r\nclass VisualizeCollections extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            dataGroup: [],\r\n            idGroupSelect: 0,\r\n            nameGroupSelect: '',\r\n            nombreColeccion: \"\",\r\n            onAlert: false,\r\n            dataCollection: [],\r\n            filtroBusqueda: '',\r\n            dataCollectionFiltered: [],\r\n            showListCollections: false,\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        \r\n        StudentService.getCollections(AuthUser.getCurrentUser().id, this.state.filtroBusqueda)\r\n          .then(response => {\r\n              if (response.length > 0)\r\n              {\r\n                this.setState({ dataCollection: response, dataCollectionFiltered: response, showListCollections: true });\r\n                this.filterData();\r\n              }\r\n          })\r\n    }\r\n\r\n\r\n    //Filtra los datos de las colecciones buscadas para solo buscar en la base de datos una vez\r\n    filterData = () => {\r\n      let auxArray = [];\r\n      //this.state.filteredData = [];\r\n      for (let i = 0; i < this.state.dataCollection.length; i++) \r\n      {\r\n          if (new RegExp(this.state.filtroBusqueda, 'i').test(this.state.dataCollection[i].nombreColeccion) ||\r\n                (new RegExp(this.state.filtroBusqueda, 'i').test(this.state.dataCollection[i].nombreGrupo)))\r\n          {\r\n              auxArray.push(this.state.dataCollection[i]);\r\n          }\r\n      }\r\n      this.setState({ dataCollectionFiltered: auxArray });\r\n    }\r\n\r\n    /*Lo que escribamos en el input lo guarda en el state async para que lo veamos en tiempo real */\r\n    handleChangeSearch = async e => {\r\n        await this.setState({\r\n            [e.target.name]: e.target.value\r\n        });\r\n        this.filterData();\r\n    }\r\n\r\n\r\n    onAlert(modal) {\r\n        this.setState({\r\n          onAlert: modal\r\n        });\r\n      }\r\n\r\n\r\n    /*Dibuja la pagina  */\r\n    render() {\r\n\r\n      let cartel = <div> </div>;\r\n        let tabla = <ul className={\"flex-items-row-start wrap\"}>\r\n            {this.state.dataCollectionFiltered.map((collection) => (\r\n                <li className={\"items-row\"}>\r\n                    <ul className={\"flex-items-row-evenly\"}>\r\n                        <li className={\"flex-item-list\"}>\r\n                            {collection.nombreColeccion}\r\n                        </li>\r\n                        <li className={\"flex-item-list\"}>\r\n                            {collection.nombreGrupo}\r\n                        </li>\r\n                        <li className={\"flex-item-list\"}>\r\n                            <Link key={collection.idColeccion} to={`/student/visualizecollections/${collection.idColeccion}`}>\r\n                                <Button size={\"sm\"} variant={\"primary\"}> Ver colección </Button>\r\n                            </Link>\r\n                        </li>\r\n                    </ul>\r\n                    <hr />\r\n                </li>\r\n            ))}\r\n        </ul>;\r\n\r\n        if (this.state.dataCollectionFiltered.length === 0) {\r\n            cartel = <div className={\"row-edit\"}>\r\n                <br />\r\n                <h4>No hay resultados para la búsqueda realizada.</h4>\r\n            </div>;\r\n            tabla = <></>;\r\n        }\r\n\r\n\r\n        const { dataGroup,  showListCollections } = this.state;\r\n        return (\r\n            <div className=\"container\">\r\n               <Card className=\"card-long\">\r\n                   <Card.Body>\r\n                       <div className={\"row-edit\"}>\r\n                           <div className={\"section-title\"}>\r\n                               <h2>Colecciones</h2>\r\n                           </div>\r\n                       </div>\r\n\r\n                        {showListCollections ? (\r\n                            <div>\r\n                                <div className={\"row-edit\"}>\r\n                                    <ul className={\"container-column-list\"}>\r\n                                        <li className={\"items-row\"}>\r\n                                            <label className={\"form-label\"}>Buscar colección por su nombre o por grupo: </label>\r\n                                        </li>\r\n                                        <li className={\"items-row\"}>\r\n                                            <input type=\"text\" name=\"filtroBusqueda\" onChange={this.handleChangeSearch} />\r\n                                        </li>\r\n                                        <li className={\"items-row\"}>\r\n                                            <img src=\"../../search.png\" alt=\"\" />\r\n                                        </li>\r\n                                    </ul>\r\n                                </div>\r\n                                <div className={\"row-edit\"}>\r\n                                    <Card className={\"card-long\"}>\r\n                                        <Card.Body >\r\n                                            {cartel}\r\n                                            {tabla}\r\n                                        </Card.Body>\r\n                                    </Card>\r\n                                </div>\r\n                            </div>\r\n                        ) : (\r\n                            <div className=\"table-margin\">\r\n                                <p>No hay colecciones para mostrar</p>\r\n                            </div>\r\n                        )}\r\n\r\n                   </Card.Body>\r\n               </Card>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default VisualizeCollections;","import React, { Component } from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport StudentService from '../../../services/student/student-service.js';\r\n\r\n/**Estilos bibliotecas externas*/\r\nimport  Card from 'react-bootstrap/Card';\r\nimport Alert from 'react-bootstrap/Alert';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Modal from \"react-bootstrap/Modal\";\r\n\r\n/**Estilos css*/\r\nimport 'react-tabs/style/react-tabs.css';\r\nimport '../../../styles/styleGeneral.css';\r\nimport '../../../styles/styleCard.css';\r\n\r\n\r\nclass VisualizeSingleCollection extends Component {\r\n\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n\r\n        this.state = {\r\n            nameCollection: \"\",\r\n            nameGroup: \"\",\r\n            idGroup: -1,\r\n            challengesNotInCollection: [],\r\n            selectedChallenge: false,\r\n            idChallengeSelect: -1,\r\n            dataChallenges: [],\r\n            hayDesafios: false,\r\n        };\r\n    }\r\n\r\n    componentDidMount()\r\n    {\r\n        // Obtenemos una colección\r\n        StudentService.getCollection(this.props.match.params.idCollection)\r\n        .then(response => {\r\n            if (response.length > 0)\r\n            {\r\n                this.setState({ nameCollection: response[0].nombreColeccion, nameGroup: response[0].nombreGrupo, idGroup: response[0].idGrupo });\r\n\r\n            }\r\n        })\r\n\r\n        // Obtenemos los desafíos de la colección\r\n        StudentService.getChallengesFromCollection(this.props.match.params.idCollection)\r\n        .then(response => {\r\n            if (response.length > 0)\r\n            {\r\n                this.setState({ dataChallenges: response, hayDesafios: true });\r\n            }\r\n        })\r\n\r\n    }\r\n\r\n\r\n    handleChangeChallengeSelect = async e => {\r\n        await this.setState({\r\n                [e.target.name]: e.target.value\r\n        });\r\n        if (e.target.value != -1)\r\n            this.setState({ selectedChallenge: true });\r\n        else\r\n            this.setState({ selectedChallenge: false });\r\n    }\r\n\r\n    /*Dibuja la pagina  */\r\n    render() {\r\n        return (\r\n        <div className=\"container\">\r\n            <Card className=\"card-long\">\r\n            <Card.Body>\r\n                <div className={\"row-edit\"}>\r\n                    <div className={\"section-title\"}>\r\n                        <h2>Colección \"{this.state.nameCollection}\"</h2>\r\n                    </div>\r\n                    <br/>\r\n                    <Alert variant={\"info\"}>\r\n                        <img src=\"/info.png\" alt=\"\"/>\r\n                        Puede usar este espacio para ver los desafíos asociados a la colección.\r\n                    </Alert>\r\n                </div>\r\n\r\n                <div className={\"row-edit\"}>\r\n                    <Card className={\"card-long\"}>\r\n                    <Card.Body >\r\n                        <ul className={\"flex-items-row-start wrap\"}>\r\n\r\n                            <li className={\"flex-item-data\"}>\r\n                                <h5>Grupo: <u>{this.state.nameGroup}</u> </h5>\r\n                            </li>\r\n                            <li className={\"flex-item-data\"}>\r\n                                <h5>Desafíos:</h5>\r\n                            </li>\r\n                            <li className={\"items-row\"}>\r\n                                \r\n                                {this.state.hayDesafios == true ? (\r\n                                    this.state.dataChallenges.map((challenge) => (\r\n                                        <>\r\n                                            <ul className={\"flex-items-row-evenly\"}>\r\n                                                <li className={\"flex-item-list\"}>\r\n                                                    {challenge.titulo}\r\n                                                </li>\r\n                                                <li className={\"flex-item-list\"}>\r\n                                                    {challenge.colaborativo == 1  ? (\r\n                                                        \"Individual\"\r\n                                                    ) : (\r\n                                                        \"Colaborativo\"\r\n                                                    )}\r\n                                                </li>\r\n                                                <li className={\"flex-item-list\"}>\r\n                                                    <Link key={challenge.id} to={`/student/visualizecollections/${this.props.match.params.idCollection}/${challenge.id}`}>\r\n                                                        <Button size={\"sm\"} variant={\"primary\"}>\r\n                                                            Ver escritos\r\n                                                        </Button>\r\n                                                    </Link>\r\n                                                </li>\r\n                                            </ul>\r\n                                            <hr />\r\n                                        </>\r\n                                    ))\r\n                                ) : (\r\n                                    <Alert variant={\"danger\"}>\r\n                                        No hay ningún desafío en esta colección\r\n                                    </Alert>\r\n                                )}\r\n\r\n                            </li>\r\n                        </ul>\r\n                    </Card.Body>\r\n                    </Card>\r\n                </div>\r\n\r\n            </Card.Body>\r\n            </Card>\r\n        </div>\r\n        );\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default VisualizeSingleCollection;","import React, { Component } from 'react';\r\nimport StudentService from '../../../services/student/student-service.js';\r\n\r\n/**Estilos bibliotecas externas*/\r\nimport  Card from 'react-bootstrap/Card';\r\nimport Alert from 'react-bootstrap/Alert';\r\n\r\n/**Estilos css*/\r\nimport 'react-tabs/style/react-tabs.css';\r\nimport '../../../styles/styleGeneral.css';\r\nimport '../../../styles/styleCard.css';\r\n\r\n\r\nclass VisualizeChallengeFromCollection extends Component {\r\n\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n\r\n        this.state = {\r\n            nameCollection: \"\",\r\n            nameGroup: \"\",\r\n            idGroup: -1,\r\n            nameChallenge: '',\r\n            dataWritings: [],\r\n            hayEscritos: false,\r\n            colaborativo: -1,\r\n        };\r\n    }\r\n\r\n    componentDidMount()\r\n    {\r\n        // Obtenemos una colección\r\n        StudentService.getCollection(this.props.match.params.idCollection)\r\n        .then(response => {\r\n            if (response.length > 0)\r\n            {\r\n                this.setState({ nameCollection: response[0].nombreColeccion, nameGroup: response[0].nombreGrupo, idGroup: response[0].idGrupo });\r\n            }\r\n\r\n            // Comprobamos si el desafío es individual o colaborativo\r\n            StudentService.getChallenge(this.props.match.params.idChallenge)\r\n            .then(response => {\r\n                this.setState({ colaborativo : response[0].colaborativo, nameChallenge: response[0].titulo });\r\n\r\n                // Si el desafío es individual\r\n                if (response[0].colaborativo == 1)\r\n                {\r\n                    // Obtenemos todos los escritos del desafío\r\n                    StudentService.getWritingsStudentCollection(this.state.idGroup, this.props.match.params.idChallenge)\r\n                    .then(response => {\r\n                        if (response.length > 0)\r\n                        {\r\n                            this.setState({ dataWritings: response, hayEscritos: true });\r\n                        }\r\n                    })\r\n                }\r\n                else // el desafío es colaborativo\r\n                {\r\n                    // Obtenemos todos los escritos del desafío\r\n                    StudentService.getWritingsTeamCollection(this.state.idGroup, this.props.match.params.idChallenge)\r\n                    .then(response => {\r\n                        if (response.length > 0)\r\n                        {\r\n                            this.setState({ dataWritings: response, hayEscritos: true });\r\n                        }\r\n                    })\r\n                }\r\n            })\r\n\r\n        })\r\n\r\n    }\r\n\r\n\r\n    /*Dibuja la pagina  */\r\n    render() {\r\n        return (\r\n        <div className=\"container\">\r\n            <Card className=\"card-long\">\r\n            <Card.Body>\r\n                <div className={\"row-edit\"}>\r\n                    <div className={\"section-title\"}>\r\n                        <h2>Desafío \"{this.state.nameChallenge}\"</h2>\r\n                    </div>\r\n                    <br/>\r\n                    <Alert variant={\"info\"}>\r\n                        <img src=\"/info.png\" alt=\"\"/>\r\n                        En este espacio puede ver los escritos de los alumnos que pertenecen al desafío seleccionado.\r\n                    </Alert>\r\n                </div>\r\n\r\n                <div className={\"row-edit\"}>\r\n                    <Card className={\"card-long\"}>\r\n                    <Card.Body >\r\n                        <ul className={\"flex-items-row-start wrap\"}>\r\n\r\n                            <li className={\"flex-item-data\"}>\r\n                                <h5>Colección: <u>{this.state.nameCollection}</u> </h5>\r\n                            </li>\r\n                            <li className={\"flex-item-data\"}>\r\n                                <h5>Grupo: <u>{this.state.nameGroup}</u> </h5>\r\n                            </li>\r\n                            <br/>\r\n                            <li className={\"flex-item-data\"}>\r\n                                <h5>Escritos:</h5>\r\n                            </li>\r\n                            \r\n                            <li className={\"items-row\"}>\r\n                                {this.state.hayEscritos == true ? (\r\n                                    <>\r\n                                    <ul className={\"flex-items-row-evenly\"}>\r\n                                        <li className={\"flex-item-list\"}>\r\n                                            <u><b>Título:</b></u>\r\n                                        </li>\r\n                                        <li className={\"flex-item-list\"}>\r\n                                            <u><b>\r\n                                            {this.state.colaborativo == 1 ?\r\n                                                (\"Estudiante:\") :\r\n                                                (\"Equipo:\")\r\n                                            }\r\n                                            </b></u>\r\n                                        </li>\r\n                                    </ul>\r\n                                    <br/>\r\n\r\n                                    {this.state.dataWritings.map((writing) => (\r\n                                        <>\r\n                                        <ul className={\"flex-items-row-evenly\"}>\r\n                                            <li className={\"flex-item-list\"}>\r\n                                                {writing.nombreEscrito}\r\n                                            </li>\r\n                                            <li className={\"flex-item-list\"}>\r\n                                                {writing.colaborativo == 1  ? (\r\n                                                    // Individual\r\n                                                    <> {writing.nombreEstudiante} {writing.apellidosEstudiante} </>\r\n                                                ) : (\r\n                                                    // Colaborativo\r\n                                                    <> {writing.nombreEquipo} </>\r\n                                                )}\r\n                                            </li>\r\n                                        </ul>\r\n                                        <hr />\r\n                                        </>\r\n                                    ))}\r\n                                    </>\r\n                                ) : (\r\n                                    <>\r\n                                    <br/>\r\n                                    <Alert variant={\"danger\"}>\r\n                                        No hay ningún escrito para este desafío\r\n                                    </Alert>\r\n                                    </>\r\n                                )}\r\n\r\n                                <br/>\r\n                            </li>\r\n\r\n                        </ul>\r\n                    </Card.Body>\r\n                    </Card>\r\n                </div>\r\n\r\n            </Card.Body>\r\n            </Card>\r\n\r\n        </div>\r\n        );\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default VisualizeChallengeFromCollection;","/*\r\n*  Name_file :routesStudent.js\r\n*  Description: contiene rutas asociadas a componentes del Student\r\n*/\r\n\r\nimport React from 'react';\r\nimport { BrowserRouter, Switch, Route, useRouteMatch } from 'react-router-dom';\r\nimport Sidebar from '../components/sidebar/Sidebar.js';\r\nimport GroupStudent from '../components/pages/student/GroupStudent.js';\r\nimport Teams from '../components/pages/student/Teams.js';\r\nimport TeamStudent from '../components/pages/student/TeamStudent.js';\r\nimport WritingTabs from '../components/pages/student/WritingTabs.js';\r\nimport ChallengeTabs from '../components/pages/student/ChallengeTabs.js';\r\nimport CreateWriting from '../components/pages/student/CreateWriting.js';\r\nimport EditWriting from '../components/pages/student/EditWriting.js';\r\n// import ViewMultimedia from '../components/pages/student/ViewMultimedia.js';\r\nimport ViewWriting from '../components/pages/student/ViewWriting.js';\r\nimport LinksStudent from '../links/links-Student.js';\r\nimport EditWritingTeam from '../components/pages/student/EditWritingTeam.js';\r\nimport VersionsfromWriting from '../components/pages/student/VersionsfromWriting.js';\r\nimport EditVersionfromWriting from '../components/pages/student/EditVersionfromWriting.js';\r\nimport VisualizeCollections from '../components/pages/student/VisualizeCollections.js';\r\nimport VisualizeSingleCollection from '../components/pages/student/VisualizeSingleCollection.js';\r\nimport VisualizeChallengeFromCollection from '../components/pages/student/VisualizeChallengeFromCollection.js';\r\n\r\n// import Teams from '../components/pages/student/Teams.js';\r\n// import Messenger from '../components/pages/student/Messenger.js';\r\n// import Message from '../components/pages/student/Message.js';\r\n\r\n\r\n/*defino las rutas de los componentes\r\nRutas o urls del Student asociado a la componente pages/student*/\r\nfunction Routes() {\r\n    let {url} = useRouteMatch();\r\n    return (\r\n        <BrowserRouter>\r\n            <Sidebar  links={LinksStudent} url={url}/>\r\n            <Switch>        \r\n                <Route exact path=\"/student/groups\" component={GroupStudent} />\r\n                <Route exact path=\"/student/teams\" component={Teams}/>\r\n                <Route exact path=\"/student/writingsTabs\" component={WritingTabs}/>\r\n                <Route exact path=\"/student/ChallengesTabs\" component={ChallengeTabs}/>\r\n                <Route exact path=\"/student/teamStudent/:idGroup\" component={TeamStudent}/>\r\n                <Route exact path=\"/student/writing/:idGroup/:idChallenge\" component={CreateWriting} />\r\n                <Route exact path=\"/student/editWriting/:idGroup/:idChallenge/:idWriting\" component={EditWriting} />\r\n                <Route exact path=\"/student/viewWriting/:idGroup/:idChallenge/:idWriting\" component={ViewWriting} />\r\n                <Route exact path=\"/student/editWritingTeam/:idGroup/:idChallenge/:idWriting\" component={EditWritingTeam} />\r\n                <Route exact path=\"/student/versionsWriting/:idGroup/:idChallenge/:idWriting\" component={VersionsfromWriting} />\r\n                <Route exact path=\"/student/editVersionfromWriting/:idGroup/:idChallenge/:idWriting/:idVersion\" component={EditVersionfromWriting} />\r\n                <Route exact path=\"/student/visualizecollections\" component={VisualizeCollections} />\r\n                <Route exact path=\"/student/visualizecollections/:idCollection\" component={VisualizeSingleCollection} />\r\n                <Route exact path=\"/student/visualizecollections/:idCollection/:idChallenge\" component={VisualizeChallengeFromCollection} />\r\n            </Switch>\r\n        </BrowserRouter>\r\n    );\r\n}\r\n\r\nexport default Routes;","/*\r\n*  Name_file :HomeStudent.js\r\n*  Description: Pagina home del estudiante,contiene la vista del home del estudiante\r\n*    \r\n*/\r\nimport React from 'react';\r\nimport RouteStudent from '../../../routes/routesStudent.js';\r\n\r\nfunction StudentBoard(){\r\n\r\n    /*Dibuja la pagina  del estudiante*/\r\n    return (\r\n       \r\n            <RouteStudent />\r\n    );\r\n   \r\n}\r\n\r\nexport default StudentBoard;","/*\r\n*  Name_file :UserList.js\r\n*  Description: Contiene una lista de los usuarios activos en la plataforma.\r\n*    \r\n*/\r\n\r\nimport React, { Component } from 'react';\r\nimport { Link} from \"react-router-dom\";\r\n\r\n/**Estilos CSS*/\r\nimport '../../../styles/styleGeneral.css';\r\nimport '../../../styles/styleCard.css';\r\nimport '../../../styles/Challenge.css';\r\n\r\n\r\n/**Estilos Bootsrap */\r\nimport Card from 'react-bootstrap/Card';\r\nimport Button  from 'react-bootstrap/Button';\r\nimport ListGroup from 'react-bootstrap/ListGroup';\r\nimport adminService from '../../../services/admin/adminService';\r\nimport Alert from 'react-bootstrap/Alert';\r\n\r\n\r\nclass SearchStudentRes extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            data: [],\r\n            filteredData:[],\r\n            searchName: '',\r\n            searchType: 'nombre',\r\n            searchRole:\"none\"\r\n    \r\n        };\r\n    }\r\n\r\n\r\n  /*Se hacen peticiones al servidor para que me devuelva todos los usuarios buscados*/\r\n    peticionPost = () => {\r\n        adminService.getUsers(this.state.searchName, this.state.searchType).then(response =>{\r\n            this.setState({data:response});\r\n            this.setState({filteredData:response});\r\n            this.filterData();\r\n        })\r\n    }\r\n\r\n    //Filtra los datos de los estudiantes buscados para solo buscar en la base de datos una vez\r\n    filterData = () =>{\r\n        let auxArray = [];\r\n        this.state.filteredData = [];\r\n        for(let i = 0; i < this.state.data.length; i++){\r\n            if(this.state.searchType == \"email\")\r\n            {\r\n                if(new RegExp( this.state.searchName, 'i'  ).test(this.state.data[i].correo))\r\n                {\r\n                    auxArray.push(this.state.data[i]);\r\n                }\r\n            }\r\n            else\r\n            {\r\n                if((new RegExp(this.state.searchName, 'i' ).test(this.state.data[i].nombre)) || (new RegExp( this.state.searchName, 'i' ).test(this.state.data[i].apellidos)) )\r\n                {\r\n                    auxArray.push(this.state.data[i]);\r\n                }\r\n            }\r\n        }\r\n        let finalArray = [];\r\n        if(this.state.searchRole != \"none\")\r\n        {\r\n            for(let i = 0; i < auxArray.length; i++){\r\n                if(auxArray[i].rol === this.state.searchRole){\r\n                    finalArray.push(auxArray[i]);\r\n                }\r\n            }\r\n        }\r\n        else{\r\n            finalArray = auxArray;\r\n        }\r\n\r\n        this.setState({ filteredData: finalArray });\r\n\r\n    }\r\n\r\n    /*Lo que escribamos en el input lo guarda en el state async para que lo veamos en tiempo real */\r\n    handleChangeSearch = async e => {\r\n        await this.setState({\r\n                [e.target.name]: e.target.value\r\n        });\r\n        this.filterData();\r\n    }\r\n\r\n    /*Lo que escribamos en el input lo guarda en el state async para que lo veamos en tiempo real */\r\n    handleChangeSearchType = async e => {\r\n        await this.setState({\r\n                [e.target.name]: e.target.value\r\n        });\r\n        this.filterData();\r\n    }\r\n\r\n    /*Lo que escribamos en el input lo guarda en el state async para que lo veamos en tiempo real */\r\n    handleChangeSearchRole = async e => {\r\n        await this.setState({\r\n                [e.target.name]: e.target.value\r\n        });\r\n        this.filterData();\r\n    }\r\n\r\n    changeViewUserProfile = (idUser) => \r\n    {\r\n        window.location.href = '/admin/users/viewProfile/'+ idUser;\r\n    }\r\n    \r\n\r\n    componentDidMount() {\r\n        this.peticionPost();\r\n    }\r\n\r\n\r\n    /*Dibuja la pagina  */\r\n    render() {\r\n        let cartel =<> </>;\r\n        let tabla = <ul className={\"flex-items-row-start wrap\"}>\r\n            {this.state.filteredData.map((user) => \r\n                (\r\n                    <li className={\"items-row\"}>\r\n                        <br/>\r\n                        <ul className={\"container-column-list wrap\"}>\r\n                            <li className={\"flex-item-list\"}>\r\n                                <img\r\n                                    src={(user.ruta!= \"\") ? (user.ruta) : \"/chicaliteratura.png\" }\r\n                                    alt=\"\" style={{width: '40%',  borderRadius: '80%'}} >\r\n\r\n                                </img>\r\n                            </li>\r\n                            <li className={\"flex-item-list\"}>\r\n                                {user.nombre}\r\n                            </li>\r\n                            <li className={\"flex-item-list\"}>\r\n                                {user.apellidos}\r\n                            </li>\r\n                            <li className={\"flex-item-list\"}>\r\n                                {user.correo}\r\n                            </li>\r\n                            <li className={\"flex-item-list\"}>\r\n                                <Link key={user.id} to={`/admin/users/viewProfile/${user.id}`}>\r\n                                    <Button size={\"sm\"} text='Ver Perfil'> Ver perfil </Button>\r\n                                </Link>\r\n                            </li>\r\n                        </ul>\r\n                        <hr/>\r\n                    </li>\r\n                )\r\n            )}\r\n    </ul>;\r\n        if(this.state.filteredData.length === 0)\r\n        {\r\n            cartel = <div className={\"row-edit\"}>\r\n                        <Alert variant={\"danger\"}>\r\n                            <h6>No hay resultados para la búsqueda realizada.</h6>\r\n                        </Alert>\r\n                    </div>;\r\n            tabla = <div></div>;\r\n        }\r\n\r\n\r\n        return (\r\n            <div className=\"container\">\r\n                <Card className=\"card-edit\">\r\n                    <Card.Body>\r\n                        <div className={\"row-edit\"}>\r\n                            <div className={\"section-title\"}>\r\n                                <h2>Usuarios activos </h2>\r\n                            </div>\r\n                        </div>\r\n                        <div className={\"row-edit\"}>\r\n                            <Alert variant={\"info\"}>\r\n                                <img src=\"/info.png\" alt=\"\"/>\r\n                                 Listado de los usuarios activos en la plataforma.\r\n                            </Alert>\r\n                        </div>\r\n                        <div className={\"row-edit\"}>\r\n                            <ul className={\"flex-row\"}>\r\n                                <li className={\"flex-item-form\"}>\r\n                                    <div className={\"form-select\"}>\r\n                                        <label className={\"form-label\"}>Buscar usuario  <img src=\"/search.png\" alt=\"\"/></label>\r\n                                        <input type=\"text\" name=\"searchName\" onChange={this.handleChangeSearch} />\r\n                                    </div>\r\n    \r\n                                </li>\r\n                                <li className={\"flex-item-form\"}>\r\n                                    <div className={\"form-select\"}>\r\n                                        <label className={\"form-label\"} htmlFor=\"searchType\">Escoja cómo buscar</label>\r\n                                        <select name=\"searchType\" id=\"searchType\" onChange={this.handleChangeSearchType}>\r\n                                            <option value=\"nombre\">Nombre</option>\r\n                                            <option value=\"email\">Email</option>\r\n                                        </select>\r\n                                    </div>\r\n                                </li>\r\n                                <li className={\"flex-item-form\"}>\r\n                                    <div className={\"form-select\"}>\r\n                                        <label className={\"form-label\"} htmlFor=\"searchRole\">Buscar por rol</label>\r\n                                        <select name=\"searchRole\" id=\"searchRole\" onChange={this.handleChangeSearchRole}>\r\n                                            <option value=\"none\">Todos</option>\r\n                                            <option value=\"S\">Estudiantes</option>\r\n                                            <option value=\"T\">Profesores</option>\r\n                                            <option value=\"A\">Administradores</option>\r\n                                        </select>\r\n                                    </div>\r\n                                </li>\r\n                            </ul>\r\n                        </div>\r\n                        <div className={\"row-edit\"}>\r\n                            <Card className={\"card-long\"}>\r\n                                <Card.Body>\r\n                                    {cartel}\r\n                                    {tabla}\r\n                                </Card.Body>\r\n                            </Card>\r\n                        </div>\r\n                    </Card.Body>\r\n                </Card>\r\n            </div>\r\n\r\n        );\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default SearchStudentRes;","const linksAdmin = [\r\n\r\n    {\r\n        path: \"/groups\",\r\n        name: \"Grupos\",\r\n        icon:\"/group.png\",\r\n        id: \"groups\"\r\n\r\n    },\r\n    {\r\n        path: \"/users\",\r\n        name: \"Usuarios\",\r\n        icon:\"/add-member.png\",\r\n        id: \"Usuarios\"\r\n    },\r\n    {\r\n        path: \"/applicants\",\r\n        name: \"Solicitantes\",\r\n        icon:\"/add-user.png\",\r\n        id: \"Solicitantes\"\r\n    },\r\n\r\n];\r\n\r\nexport default linksAdmin;\r\n","/*\r\n*  Name_file :routesAdmin.js\r\n*  Description: contiene rutas asociadas a componentes del Admin\r\n*/\r\nimport React from 'react';\r\nimport { BrowserRouter, Switch, Route, useRouteMatch } from 'react-router-dom';\r\n\r\nimport UserList from '../components/pages/user/UserList.js';\r\nimport Profile from '../components/pages/user/Profile.js';\r\nimport ApplicantList from '../components/pages/user/ApplicantList';\r\nimport Grupos from '../components/pages/user/GroupList';\r\nimport Grupo from '../components/pages/user/Group';\r\nimport Sidebar from '../components/sidebar/Sidebar.js';\r\n\r\nimport LinksAdmin from '../links/links-Admin';\r\n\r\n/*defino las rutas de los componentes\r\nRutas o urls del Admin asociado a la componente pages/admin*/\r\nfunction Routes() {\r\n  let {url} = useRouteMatch();\r\n    return (\r\n      <BrowserRouter>\r\n      <Sidebar links={LinksAdmin} url={url} />\r\n        <Switch>\r\n        <Route exact path=\"/admin/users\" component={UserList} />\r\n        <Route exact path=\"/admin/users/viewProfile/:idStudent\" component={Profile} />\r\n        <Route exact path=\"/admin/applicants\" component={ApplicantList}/>\r\n        <Route exact path=\"/admin/groups\" component={Grupos}/>\r\n        <Route exact path=\"/admin/viewGroup/:idGroup\" component={Grupo}/>\r\n        </Switch>\r\n      </BrowserRouter>\r\n    );\r\n  }\r\n\r\nexport default Routes;","/*\r\n*  Name_file :AdminBoard.js\r\n*  Description: Contiene las rutas del admn\r\n*    \r\n*/\r\nimport React from 'react';\r\nimport RoutesAdmin from '../../../routes/routesAdmin';\r\n\r\nfunction AdminBoard() {\r\n\r\n     /*Dibuja la pagina  del profesor */\r\n     return (\r\n       <>\r\n        <RoutesAdmin />\r\n       </>\r\n     );\r\n}\r\n\r\nexport default AdminBoard;","import React, { Component } from 'react';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport AuthService from '../../../services/authenticity/auth-service.js';\r\n\r\n/** Estilos CSS*/\r\nimport '../../../styles/styleGeneral.css';\r\nimport '../../../styles/styleCard.css';\r\n/**Estilos importados*/\r\nimport Card from 'react-bootstrap/Card';\r\nimport { Tab, Tabs, TabList, TabPanel } from 'react-tabs';\r\nimport 'react-tabs/style/react-tabs.css';\r\nimport Nav from 'react-bootstrap/Nav';\r\n\r\nclass Inicio extends Component {\r\n          constructor(props){\r\n            super(props);\r\n            this.state = {\r\n                currentUser: undefined,\r\n                showStudent: false,\r\n                showTeacher: false,\r\n                showAdmin: false,\r\n                url: \"\"\r\n            };\r\n        }\r\n          \r\n          \r\n            componentDidMount() {\r\n              //Take info about server\r\n              const user = AuthService.getCurrentUser();\r\n          \r\n              if (user) {\r\n                this.setState({\r\n                  currentUser: user,\r\n                  showStudent: user[\"rol\"].includes(\"S\"),\r\n                  showTeacher: user[\"rol\"].includes(\"T\"),\r\n                  showAdmin: user[\"rol\"].includes(\"A\"),\r\n                });\r\n              }\r\n          \r\n              if (this.state.showStudents) {\r\n                this.setState({\r\n                  url: '/student/groups'\r\n                });\r\n              }\r\n              else if (this.state.showAdmin) {\r\n                this.setState({\r\n                  url: \"/teacher/groups\"\r\n                });\r\n              }\r\n              else if (this.state.showTeacher) {\r\n                this.setState({\r\n                  url: \"/admin\"\r\n                });\r\n              }\r\n              else {\r\n                this.setState({\r\n                  url: window.location.pathname\r\n                });\r\n              }\r\n            }\r\n            \r\n\r\n    /*Dibuja la pagina  */\r\n    render() {\r\n        const { currentUser, showStudent, showTeacher, showAdmin } = this.state;\r\n\r\n        return (\r\n           <div className=\"container\">\r\n               <Card className={\"card-long\"}>\r\n                   <Card.Body>\r\n                   <div className={\"section-title\"}>\r\n                        <h2>Qué es Creativa</h2>\r\n                    </div>\r\n                    <div className='row-edit'>\r\n                        <div className={\"section-title\"}>\r\n                            <h5>De  qué trata</h5>\r\n                        </div>\r\n                        <p>Es una aplicación para fomentar la escritura creativa de una manera didáctica a través de desafíos de distintas temáticas que propondrá el profesor.</p>\r\n                        <div className={\"section-title\"}>\r\n                            <h5>Uso de la aplicación</h5>\r\n                        </div>\r\n                        <p>En el panel superior te encontrarás con diferentes apartados de la aplicación web, que te mostrarán una funcionalidad diferente cada uno.</p>\r\n                        <div className={\"section-title\"}>\r\n                            <h5>Inicio</h5>\r\n                        </div>\r\n                        <p>Es la página en la que te encuentras, en ella se ofrece un breve resumen de la aplicación y un pequeño tutorial sobre cómo moverte por la plataforma.</p>\r\n                        <div className={\"section-title\"}>\r\n                            <h5>Tablero</h5>\r\n                        </div>\r\n                        {showStudent ? ( <>\r\n                            <Link to=\"/student/groups\">Grupos</Link>\r\n                            <p>Desde esta pestaña realizaremos todo lo relacionado con la escritura creativa. \r\n                            Cuando clicamos en ella vamos a la pestaña principal \"Grupos\". En \"Grupos\" tenemos acceso a casi toda la aplicación de manera\r\n                            rápida y sencilla. Podemos pedir entrar a un grupo, ver nuestros grupos, crear nuestro equipo, pedir que nos inviten a uno, continuar un escrito, etc. </p> </>) : (\"\")}\r\n                         {showTeacher ? ( <>\r\n                            <Link to=\"/teacher/groups\">Grupos</Link>\r\n                            <p>Desde esta pestaña realizaremos el control de los estudiantes creando desafíos, viendo escritos de los estudiantes, los equipos que ellos han formado,\r\n                                los propios estudiantes, también se ofrece la posibilidad de renombrar el grupo...\r\n                            </p> </>) : (\"\")}\r\n                            {showStudent ? ( <>\r\n                            <Link to=\"/student/challengesTabs\">Crear Escrito</Link>\r\n                            <p> Debajo de esta pestaña encontramos las subsidiarias, primero Crear Escrito para aquellos que no están empezados aún, dividido en individual o \r\n                            colaborativo, si el escrito fuese en equipo. </p> </>) : (\"\")}\r\n                            {showTeacher ? ( <>\r\n                            <Link to=\"/teacher/students\">Estudiantes</Link>\r\n                            <p> En esta pestaña podemos ver la lista de los estudiantes con los que cuenta el profesor. </p> </>) : (\"\")}\r\n                            {showStudent ? ( <>\r\n                            <Link to=\"/student/writingsTabs\">Escrito</Link>\r\n                            <p>  Debajo de este está Escrito, para editar los escritos ya empezados. Además, cuenta con versiones, por lo que si no te gusta el rumbo que está tomando\r\n                            tu escrito puedes volver a una versión anterior, y volver a usarla como que fuese la actual. </p>  </>) : (\"\")}  \r\n                            {showTeacher ? ( <>\r\n                            <Link to=\"/teacher/applicants\">Solicitantes</Link>\r\n                            <p> Aquí se pueden ver los alumnos que quieren unirse bien sea a la plataforma o a algún grupo que imparte el profesor. </p> </>) : (\"\")}\r\n                            {showStudent ? ( <>\r\n                            <Link to=\"/student/teams\">Equipos</Link>\r\n                            <p> En Equipos encontramos los equipos que lideramos y de los que formamos parte.  </p> </>) : (\"\")}\r\n                              {showTeacher ? ( <>\r\n                            <Link to=\"/teacher/createGroup\">Crear Grupo</Link>\r\n                            <p> Aquí el profesor puede crear un nuevo grupo de la temática que desee. </p> </>) : (\"\")}\r\n                            {showStudent && (\r\n                            <Link to=\"/student/visualizecollections\">Colecciones</Link>\r\n                            )}\r\n                            {showTeacher && (\r\n                            <Link to=\"/teacher/collections\">Colecciones</Link>\r\n                            )}\r\n                            <p>  Y, por último, en colecciones encontramos un álbum de desafíos creados por el profesor según el grupo, donde se pueden ver los escritos \r\n                            que responden a esos desafíos. </p>\r\n                            \r\n                       \r\n                        <div className={\"section-title\"}>\r\n                            <h5>\r\n                            <Link to=\"/profile\">Perfil</Link>\r\n                           </h5> \r\n                        </div>\r\n                        <p>Desde esta pestaña podemos ver nuestro perfil y también podemos configurarlo.</p>\r\n                        \r\n                             {showStudent ? (<><div className={\"section-title\"}>\r\n                             <h5>   \r\n                            <Link to=\"/student/messenger\">Mensajería</Link>\r\n                            </h5>\r\n                        </div> \r\n                        <p>Se pueden enviar mensajes entre un estudiante que forme parte de un equipo y otro que no de dos formas: el estudiante que esté en un equipo puede pedir a otro estudiante\r\n                             que entre en su equipo y otra forma, que un estudiante que no esté en un equipo, envíe una petición para entrar.\r\n                        </p> </>) : (\"\")}\r\n                      \r\n                    </div>\r\n                   </Card.Body>\r\n               </Card>\r\n           </div>\r\n        );\r\n\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default Inicio;","import React, { Component } from 'react';\r\nimport Card from \"react-bootstrap/Card\";\r\n\r\nconst NoMatch = () =>{\r\n    return(\r\n        <div className=\"container\">\r\n            <img className={\"error\"} src=\"/24.png\" alt=\"\"/>\r\n             <h2>404 <h4>Vaya...¿Te has perdido?</h4></h2>\r\n       </div>\r\n    )\r\n}\r\n\r\nexport default NoMatch;","import React, { Component } from 'react';\r\nimport Card from \"react-bootstrap/Card\";\r\n\r\nconst InternalError = () =>{\r\n    return(\r\n        <div className=\"container\">\r\n        <link rel=\"stylesheet\" href=\"https://fonts.googleapis.com/icon?family=Material+Icons\" />\r\n            <img className={\"error\"} src=\"/12.png\" alt=\"\"/>\r\n            <h2>500 <h4>Ups!...algo ha ocurrido mal.</h4></h2>\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default InternalError;","/*\r\n*  Name_file :App.js\r\n*  Description: redirije a routes.js\r\n*/\r\n\r\nimport './App.css';\r\nimport React, { Component } from 'react';\r\nimport { jsPDF } from 'jspdf';\r\nimport { BrowserRouter as Router, Route, Switch, Link } from 'react-router-dom';\r\nimport AuthService from './services/authenticity/auth-service.js';\r\nimport Login from './components/pages/login/Login.js';\r\nimport Register from './components/pages/login/register.js';\r\nimport Profile from './components/pages/login/profile.js';\r\nimport EditProfile from './components/pages/login/EditProfile.js';\r\nimport Messenger from './components/pages/student/Messenger.js';\r\nimport Message from './components/pages/student/Message.js';\r\n\r\n/**Dashboard de los usuarios*/\r\nimport TeacherBoard from '../src/components/pages/teacher/TeacherBoard.js';\r\nimport StudentBoard from '../src/components/pages/student/StudentBoard.js';\r\nimport AdminBoard from '../src/components/pages/admin/AdminBoard';\r\nimport Inicio from '../src/components/pages/user/Inicio';\r\n\r\n/**Estilos exportados*/\r\nimport Navbar from 'react-bootstrap/Navbar';\r\nimport Nav from 'react-bootstrap/Nav';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n/**Estilos CSS*/\r\nimport './styles/styleGeneral.css';\r\nimport './styles/styleNavBar.css';\r\n\r\n/** Componentes de erores server*/\r\nimport NoMatch from \"./components/pages/errors/404\";\r\nimport InternalEror from \"./components/pages/errors/500\";\r\n\r\nclass App extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.logOut = this.logOut.bind(this);\r\n\r\n    this.state = {\r\n      currentUser: undefined,\r\n      showStudent: false,\r\n      showTeacher: false,\r\n      showAdmin: false,\r\n      url: \"\"\r\n    };\r\n  }\r\n\r\n\r\n  componentDidMount() {\r\n    //Take info about server\r\n    const user = AuthService.getCurrentUser();\r\n\r\n    if (user) {\r\n      this.setState({\r\n        currentUser: user,\r\n        showStudent: user[\"rol\"].includes(\"S\"),\r\n        showTeacher: user[\"rol\"].includes(\"T\"),\r\n        showAdmin: user[\"rol\"].includes(\"A\"),\r\n      });\r\n    }\r\n\r\n    if (this.state.showStudents) {\r\n      this.setState({\r\n        url: '/student/groups'\r\n      });\r\n    }\r\n    else if (this.state.showAdmin) {\r\n      this.setState({\r\n        url: \"/teacher/groups\"\r\n      });\r\n    }\r\n    else if (this.state.showTeacher) {\r\n      this.setState({\r\n        url: \"/admin\"\r\n      });\r\n    }\r\n    else {\r\n      this.setState({\r\n        url: window.location.pathname\r\n      });\r\n    }\r\n  }\r\n\r\n\r\n  logOut() {\r\n    AuthService.logout();\r\n  }\r\n\r\n  render() {\r\n    const { currentUser, showStudent, showTeacher, showAdmin } = this.state;\r\n    return (\r\n      <Router>\r\n        {currentUser ? (\r\n          <div className=\"full-wrapper\">\r\n            <header>\r\n              <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\"></link>\r\n              <link href=\"https://fonts.googleapis.com/css2?family=Roboto&family=Pontano+Sans&family=Dawning+of+a+New+Day&display=swap\" rel=\"stylesheet\"></link>\r\n              <Navbar collapseOnSelect expand=\"lg\" >\r\n                <Navbar.Brand href={\"/profile\"}>\r\n                  <img\r\n                      src=\"/puntapluma.png\"\r\n                      width=\"45\"\r\n                      height=\"45\"\r\n                      alt=\"React Bootstrap logo\"\r\n                  />\r\n                  Creativa\r\n                </Navbar.Brand>\r\n                <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n                <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n                  <Nav className=\"mr-auto\">\r\n                  {(\r\n                      <Nav.Link bsPrefix=\"nav-link\" href=\"/inicio\">Inicio</Nav.Link>\r\n                    )}\r\n                    {showAdmin && (\r\n                      <Nav.Link bsPrefix=\"nav-link\" href=\"/admin/groups\">Tablero</Nav.Link>\r\n                    )}\r\n                    {showStudent && (\r\n                      <Nav.Link bsPrefix=\"nav-link\" href=\"/student/groups\">Tablero</Nav.Link>\r\n                    )}\r\n                    {showTeacher && (\r\n                      <Nav.Link bsPrefix=\"nav-link\" href=\"/teacher/groups\">Tablero</Nav.Link>\r\n                    )}\r\n                    <Nav.Link bsPrefix=\"nav-link\" href=\"/profile\"> {currentUser.username}</Nav.Link>\r\n\r\n                    {showStudent && (\r\n                      <Nav.Link bsPrefix=\"nav-link\" href=\"/student/messenger\"> Mensajeria</Nav.Link>\r\n                    )}\r\n                    <Nav.Link bsPrefix=\"nav-link\" href=\"/login\" onClick={this.logOut}>Cerrar sesión</Nav.Link>\r\n                  </Nav>\r\n                </Navbar.Collapse>\r\n              </Navbar>\r\n            </header>\r\n            <Switch>\r\n              <Route exact path='/login' component={Login} />\r\n              <Route exact path='/register' component={Register} />\r\n              <Route exact path='/profile' component={Profile} />\r\n              <Route path='/admin' component={AdminBoard} />\r\n              <Route exact path='/editProfile' component={EditProfile} />\r\n              <Route path='/teacher' component={TeacherBoard} />\r\n              <Route exact path=\"/student/messenger\" component={Messenger} />\r\n              <Route exact path=\"/student/message/:idMessage\" component={Message} />\r\n              <Route exact path=\"/inicio\" component={Inicio} />\r\n              <Route path='/student' component={StudentBoard} />\r\n              <Route exact path='/500' component={InternalEror} /> {/*Esta dirección sirve para el error 500 (interno del servidor).*/}\r\n              <Route exact path='*' component={NoMatch} /> {/*Esta dirección sirve para el error 404.*/}\r\n            </Switch>\r\n          </div>\r\n        ) : (\r\n          <div className=\"main-wrapper\">\r\n            <header>\r\n              <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\"></link>\r\n              <link href=\"https://fonts.googleapis.com/css2?family=Roboto&family=Pontano+Sans&display=swap\" rel=\"stylesheet\"></link>\r\n              <Navbar collapseOnSelect expand=\"lg\" >\r\n                <Navbar.Brand href={\"/login\"}>\r\n                  <img\r\n                      src=\"/puntapluma.png\"\r\n                      width=\"45\"\r\n                      height=\"45\"\r\n                      alt=\"React Bootstrap logo\"\r\n                  />\r\n                  Creativa\r\n                </Navbar.Brand>\r\n                <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n                <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n                  <Nav className=\"mr-auto\">\r\n                    <Nav.Link href=\"/login\">Iniciar</Nav.Link>\r\n                    <Nav.Link href=\"/register\">Registar</Nav.Link>\r\n                  </Nav>\r\n                </Navbar.Collapse>\r\n              </Navbar>\r\n            </header>\r\n            <Switch>\r\n              <Route exact path={[\"/\", \"/login\"]} component={Login} />\r\n              <Route exact path='/login' component={Login} />\r\n              <Route exact path='/register' component={Register} />\r\n              <Route exact path='/500' component={InternalEror} /> {/*Esta dirección sirve para el error 500 (interno del servidor).*/}\r\n              <Route path='*' component={NoMatch} /> {/*Esta dirección sirve para el error 404.*/}\r\n            </Switch>\r\n          </div>\r\n        )}\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />,document.getElementById('root'));\r\n"],"sourceRoot":""}